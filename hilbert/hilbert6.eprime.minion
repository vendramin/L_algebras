MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 284
# CSE_active_eliminated_expressions = 1859
# CSE_active_total_size = 4327
**VARIABLES**
DISCRETE M_00001_00003 #
{2..3}
DISCRETE M_00001_00004 #
{2..6}
**CONSTRAINTS**
w-inintervalset(M_00001_00004, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE M_00001_00005 #
{4..6}
DISCRETE M_00002_00001 #
{1..6}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [1,1,6,6])
**VARIABLES**
DISCRETE M_00002_00003 #
{1..3}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [1,1,3,3])
**VARIABLES**
DISCRETE M_00002_00004 #
{4..6}
DISCRETE M_00002_00005 #
{5..6}
DISCRETE M_00003_00001 #
{1..6}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [1,1,6,6])
**VARIABLES**
DISCRETE M_00003_00002 #
{2..6}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [2,2,6,6])
**VARIABLES**
DISCRETE M_00003_00004 #
{4..6}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [4,4,6,6])
**VARIABLES**
DISCRETE M_00003_00005 #
{4..6}
DISCRETE M_00004_00001 #
{1..6}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [1,1,6,6])
**VARIABLES**
DISCRETE M_00004_00002 #
{2..6}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [2,2,6,6])
**VARIABLES**
DISCRETE M_00004_00003 #
{1..6}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [1,3,6,6])
**VARIABLES**
DISCRETE M_00004_00005 #
{1..6}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [1,1,5,6])
**VARIABLES**
DISCRETE M_00005_00001 #
{1..6}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [1,1,6,6])
**VARIABLES**
DISCRETE M_00005_00002 #
{2..6}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [2,2,6,6])
**VARIABLES**
DISCRETE M_00005_00003 #
{1..6}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [1,3,6,6])
**VARIABLES**
DISCRETE M_00005_00004 #
{2..6}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux10 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (-7 + 6*M_00005_00003 + M_00005_00004))
{2..6}
DISCRETE aux11 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (-7 + M_00005_00002 + 6*M_00005_00003))
{2..6}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (M_00004_00002 + 6*M_00004_00003 + -7))
{2..6}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (6*M_00003_00001 + M_00003_00004 + -9))
{2..6}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (6*M_00003_00001 + M_00003_00005 + -9))
{4..6}
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (M_00003_00001 + 6*M_00003_00002 + -12))
{1..6}
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (-12 + M_00005_00003 + 6*M_00005_00004))
{1..6}
DISCRETE aux32 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (-12 + M_00005_00001 + 6*M_00005_00002))
{1..6}
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (-12 + M_00005_00001 + 6*M_00005_00004))
{1..6}
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (-12 + 6*M_00005_00002 + M_00005_00003))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux34, [1,4,6,6])
**VARIABLES**
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (6*M_00004_00002 + M_00004_00005 + -12))
{1..6}
DISCRETE aux36 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (6*M_00004_00002 + M_00004_00003 + -12))
{1..6}
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (M_00004_00001 + 6*M_00004_00002 + -12))
{1..6}
DISCRETE aux38 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (-13 + M_00005_00002 + 6*M_00005_00004))
{1..6}
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (-13 + 6*M_00005_00002 + M_00005_00004))
{2..6}
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (-15 + 6*M_00001_00004 + M_00001_00005))
{2..6}
DISCRETE aux46 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (6*M_00003_00002 + M_00003_00005 + -15))
{4..6}
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (6*M_00003_00002 + M_00003_00004 + -15))
{4..6}
DISCRETE aux48 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3], (-13 + M_00001_00003 + 6*M_00001_00004))
{2..6}
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (M_00003_00001 + 6*M_00003_00004 + -24))
{1..6}
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (M_00003_00001 + 6*M_00003_00005 + -24))
{1..6}
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (-25 + M_00001_00004 + 6*M_00001_00005))
{2..6}
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], (6*M_00003_00004 + M_00003_00005 + -27))
{1..6}
DISCRETE aux68 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3], (-25 + M_00001_00003 + 6*M_00001_00005))
{2..6}
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([6, M_00002_00003, M_00002_00004, M_00002_00005, 6], (-1 + M_00001_00004))
{3..6}
DISCRETE aux103 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 1, 6], (M_00002_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux103, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux104 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 5, 6], (-3 + M_00001_00005))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux104, [2,2,5,6])
**VARIABLES**
DISCRETE aux105 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 4, 6], (-3 + M_00001_00005))
{4..6}
DISCRETE aux107 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 5, 6], (M_00002_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux107, [1,1,5,6])
**VARIABLES**
DISCRETE aux108 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 1, 6], (M_00003_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux108, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux109 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 1, 6], (M_00003_00005 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux109, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux111 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 2, 6], (M_00002_00004 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux111, [2,2,5,6])
**VARIABLES**
DISCRETE aux112 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 1, 6], (M_00003_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux112, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux113 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 2, 6], (M_00003_00004 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux113, [2,2,5,6])
**VARIABLES**
DISCRETE aux114 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1, 6], (M_00003_00005 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux114, [1,2,6,6])
**VARIABLES**
DISCRETE aux115 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([M_00002_00004, M_00002_00005, 6], (-3 + M_00001_00005))
{4..6}
DISCRETE aux116 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 3, 6], (M_00002_00004 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux116, [2,3,6,6])
**VARIABLES**
DISCRETE aux117 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 2, 6], (M_00003_00005 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux117, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux118 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2, 6], (-3 + M_00001_00005))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux118, [1,2,6,6])
**VARIABLES**
DISCRETE aux119 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 3, 6], (M_00003_00004 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux119, [2,3,6,6])
**VARIABLES**
DISCRETE aux120 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 1, 6], (M_00002_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux120, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux121 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 3, 6], (M_00003_00005 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux121, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux122 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 4, 6], (M_00003_00005 + -3))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux122, [3,4,6,6])
**VARIABLES**
DISCRETE aux123 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 1, 6], (-3 + M_00001_00005))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux123, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux124 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 5, 6], (M_00003_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux124, [1,1,5,6])
**VARIABLES**
DISCRETE aux125 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 3, 6], (-3 + M_00001_00005))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux125, [2,3,6,6])
**VARIABLES**
DISCRETE aux126 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 2, 6], (-3 + M_00001_00005))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux126, [2,2,5,6])
**VARIABLES**
DISCRETE aux127 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 3, 6], (M_00002_00004 + -3))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux127, [3,4,6,6])
**VARIABLES**
DISCRETE aux128 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 1, 6], (-3 + M_00001_00005))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux128, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux129 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 1, 6], (M_00002_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux129, [1,1,5,6])
**VARIABLES**
DISCRETE aux130 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 1, 6], (M_00003_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux130, [1,1,5,6])
**VARIABLES**
DISCRETE aux131 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 1, 6], (M_00003_00005 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux131, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux132 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 5, 6], (-3 + M_00001_00005))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux132, [1,1,5,6])
**VARIABLES**
DISCRETE aux133 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2, 6], (M_00003_00005 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux133, [1,2,6,6])
**VARIABLES**
DISCRETE aux134 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 3, 6], (M_00003_00004 + -3))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux134, [3,4,6,6])
**VARIABLES**
DISCRETE aux135 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 4, 6], (M_00003_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux135, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux136 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2, 6], (M_00003_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux136, [1,2,6,6])
**VARIABLES**
DISCRETE aux137 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 2, 6], (M_00003_00005 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux137, [2,2,5,6])
**VARIABLES**
DISCRETE aux138 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 4, 6], (M_00003_00004 + -3))
{4..6}
DISCRETE aux139 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 3, 6], (M_00003_00005 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux139, [2,3,6,6])
**VARIABLES**
DISCRETE aux140 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 4, 6], (-3 + M_00001_00005))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux140, [3,4,6,6])
**VARIABLES**
DISCRETE aux141 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 5, 6], (M_00002_00004 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux141, [2,2,5,6])
**VARIABLES**
DISCRETE aux142 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 5, 6], (M_00003_00004 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux142, [2,2,5,6])
**VARIABLES**
DISCRETE aux143 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 5, 6], (M_00003_00005 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux143, [1,1,5,6])
**VARIABLES**
DISCRETE aux144 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 4, 6], (M_00002_00004 + -3))
{4..6}
DISCRETE aux145 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2, 6], (M_00002_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux145, [1,2,6,6])
**VARIABLES**
DISCRETE aux146 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 1, 6], (M_00003_00005 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux146, [1,1,5,6])
**VARIABLES**
DISCRETE aux147 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 2, 6], (M_00003_00004 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux147, [2,3,6,6])
**VARIABLES**
DISCRETE aux148 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 3, 6], (M_00003_00004 + -3))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux148, [3,3,5,6])
**VARIABLES**
DISCRETE aux149 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 4, 6], (M_00002_00004 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux149, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux150 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 3, 6], (M_00003_00005 + -3))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux150, [3,4,6,6])
**VARIABLES**
DISCRETE aux152 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 4, 6], (M_00003_00004 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux152, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux153 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 2, 6], (M_00002_00004 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux153, [2,3,6,6])
**VARIABLES**
DISCRETE aux154 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 4, 6], (M_00003_00005 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux154, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux155 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 3, 6], (-3 + M_00001_00005))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux155, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux156 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 3, 6], (M_00002_00004 + -3))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux156, [3,3,5,6])
**VARIABLES**
DISCRETE aux157 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 2, 6], (-3 + M_00001_00005))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux157, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux158 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 5, 6], (M_00003_00005 + -3))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux158, [3,3,5,6])
**VARIABLES**
DISCRETE aux159 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1, 6], (-3 + M_00001_00005))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux159, [1,2,6,6])
**VARIABLES**
DISCRETE aux160 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 4, 6], (M_00003_00005 + -3))
{4..6}
DISCRETE aux161 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 4, 6], (-3 + M_00001_00005))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux161, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux162 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 5, 6], (M_00003_00004 + -3))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux162, [3,3,5,6])
**VARIABLES**
DISCRETE aux163 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 5, 6], (M_00003_00005 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux163, [2,2,5,6])
**VARIABLES**
DISCRETE aux164 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 3, 6], (-3 + M_00001_00005))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux164, [3,3,5,6])
**VARIABLES**
DISCRETE aux165 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 2, 6], (-3 + M_00001_00005))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux165, [2,3,6,6])
**VARIABLES**
DISCRETE aux167 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 4, 6], (M_00002_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux167, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux168 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 5, 6], (M_00002_00004 + -3))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux168, [3,3,5,6])
**VARIABLES**
DISCRETE aux169 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 3, 6], (M_00003_00005 + -3))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux169, [3,3,5,6])
**VARIABLES**
DISCRETE aux170 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 4, 6], (M_00003_00004 + -3))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux170, [3,4,6,6])
**VARIABLES**
DISCRETE aux171 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 4, 6], (M_00003_00005 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux171, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux172 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 4, 6], (M_00002_00004 + -3))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux172, [3,4,6,6])
**VARIABLES**
DISCRETE aux173 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 3, 6], (M_00002_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux173, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux174 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1, 6], (M_00002_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux174, [1,2,6,6])
**VARIABLES**
DISCRETE aux175 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 1, 6], (-3 + M_00001_00005))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux175, [1,1,5,6])
**VARIABLES**
DISCRETE aux176 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 2, 6], (M_00002_00004 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux176, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux177 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 5, 6], (-3 + M_00001_00005))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux177, [3,3,5,6])
**VARIABLES**
DISCRETE aux178 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1, 6], (M_00003_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux178, [1,2,6,6])
**VARIABLES**
DISCRETE aux179 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 4, 6], (-3 + M_00001_00005))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux179, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux180 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 3, 6], (-3 + M_00001_00005))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux180, [3,4,6,6])
**VARIABLES**
DISCRETE aux181 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 2, 6], (M_00003_00004 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux181, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux182 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 2, 6], (M_00003_00005 + -3))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux182, [2,3,6,6])
**VARIABLES**
DISCRETE aux183 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 3, 6], (M_00003_00004 + -3))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux183, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux184 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 2], (-1 + M_00001_00003))
{2..5}
**CONSTRAINTS**
w-inintervalset(aux184, [2,2,5,5])
**VARIABLES**
DISCRETE aux185 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 5], (-1 + M_00001_00003))
{4..5}
DISCRETE aux186 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 5], (-1 + M_00001_00003))
{1..5}
**CONSTRAINTS**
w-inintervalset(aux186, [1,1,5,5])
**VARIABLES**
DISCRETE aux187 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 4], (-1 + M_00001_00003))
{3..4}
DISCRETE aux188 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 1], (-1 + M_00001_00003))
{1..4}
**CONSTRAINTS**
w-inintervalset(aux188, [1,1,4,4])
**VARIABLES**
DISCRETE aux189 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 3], (-1 + M_00001_00003))
{3..5}
**CONSTRAINTS**
w-inintervalset(aux189, [3,3,5,5])
**VARIABLES**
DISCRETE aux190 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 3], (-1 + M_00001_00003))
{1..3}
**CONSTRAINTS**
w-inintervalset(aux190, [1,1,3,3])
**VARIABLES**
DISCRETE aux191 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 5], (-1 + M_00001_00003))
{2..5}
**CONSTRAINTS**
w-inintervalset(aux191, [2,2,5,5])
**VARIABLES**
DISCRETE aux192 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 1], (-1 + M_00001_00003))
{1..5}
**CONSTRAINTS**
w-inintervalset(aux192, [1,1,5,5])
**VARIABLES**
DISCRETE aux193 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 2], (-1 + M_00001_00003))
{2..3}
DISCRETE aux194 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 1], (-1 + M_00001_00003))
{1..2}
DISCRETE aux195 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 4], (-1 + M_00001_00003))
{1..4}
**CONSTRAINTS**
w-inintervalset(aux195, [1,1,4,4])
**VARIABLES**
DISCRETE aux197 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([6, M_00002_00003], (-1 + M_00001_00003))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux197, [3,3,6,6])
**VARIABLES**
DISCRETE aux198 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([1, 2], (-1 + M_00001_00003))
{1..2}
DISCRETE aux199 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([2, 4], (-1 + M_00001_00003))
{2..4}
**CONSTRAINTS**
w-inintervalset(aux199, [2,2,4,4])
**VARIABLES**
DISCRETE aux200 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 1], (-1 + M_00001_00003))
{1..3}
**CONSTRAINTS**
w-inintervalset(aux200, [1,1,3,3])
**VARIABLES**
DISCRETE aux201 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 3], (-1 + M_00001_00003))
{3..4}
DISCRETE aux202 #Active-CSE: 24 occurrences of this expression or equivalent: ElementOne([4, 6], (M_00002_00005 + -4))
{4..6}
**CONSTRAINTS**
w-inintervalset(aux202, [4,4,6,6])
**VARIABLES**
DISCRETE aux203 #Active-CSE: 24 occurrences of this expression or equivalent: ElementOne([3, 6], (M_00002_00005 + -4))
{3..6}
**CONSTRAINTS**
w-inintervalset(aux203, [3,3,6,6])
**VARIABLES**
DISCRETE aux204 #Active-CSE: 24 occurrences of this expression or equivalent: ElementOne([2, 6], (M_00002_00005 + -4))
{2..6}
**CONSTRAINTS**
w-inintervalset(aux204, [2,2,6,6])
**VARIABLES**
DISCRETE aux205 #Active-CSE: 24 occurrences of this expression or equivalent: ElementOne([1, 6], (M_00002_00005 + -4))
{1..6}
**CONSTRAINTS**
w-inintervalset(aux205, [1,1,6,6])
**VARIABLES**
DISCRETE aux206 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([4, 2], (-1 + M_00001_00003))
{2..4}
**CONSTRAINTS**
w-inintervalset(aux206, [2,2,4,4])
**VARIABLES**
DISCRETE aux207 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([3, 5], (-1 + M_00001_00003))
{3..5}
**CONSTRAINTS**
w-inintervalset(aux207, [3,3,5,5])
**VARIABLES**
DISCRETE aux209 #Active-CSE: 6 occurrences of this expression or equivalent: ElementOne([5, 4], (-1 + M_00001_00003))
{4..5}
DISCRETE aux211 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 3, 5], M_00002_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux211, [2,3,5,5])
**VARIABLES**
DISCRETE aux212 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 3, 4], M_00002_00003)
{2..4}
DISCRETE aux213 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 3, 1], M_00002_00003)
{1..3}
DISCRETE aux214 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 4, 5], M_00002_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux214, [2,2,4,5])
**VARIABLES**
DISCRETE aux215 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 4, 3], M_00002_00003)
{2..4}
DISCRETE aux216 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 4, 1], M_00002_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux216, [1,2,4,4])
**VARIABLES**
DISCRETE aux217 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 1, 3], M_00002_00003)
{1..3}
DISCRETE aux218 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 1, 4], M_00002_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux218, [1,2,4,4])
**VARIABLES**
DISCRETE aux219 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 1, 5], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux219, [1,2,5,5])
**VARIABLES**
DISCRETE aux220 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 4, 5], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux220, [1,1,4,5])
**VARIABLES**
DISCRETE aux221 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 4, 3], M_00002_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux221, [1,1,3,4])
**VARIABLES**
DISCRETE aux222 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 4, 2], M_00002_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux222, [1,2,4,4])
**VARIABLES**
DISCRETE aux223 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 5, 2], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux223, [1,2,5,5])
**VARIABLES**
DISCRETE aux224 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 5, 4], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux224, [1,1,4,5])
**VARIABLES**
DISCRETE aux225 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 5, 3], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux225, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux226 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 2, 4], M_00002_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux226, [1,2,4,4])
**VARIABLES**
DISCRETE aux227 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 2, 5], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux227, [1,2,5,5])
**VARIABLES**
DISCRETE aux228 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 3, 2], M_00002_00003)
{1..3}
DISCRETE aux229 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 3, 5], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux229, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux230 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([1, 3, 4], M_00002_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux230, [1,1,3,4])
**VARIABLES**
DISCRETE aux231 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 2, 4], M_00002_00003)
{2..4}
DISCRETE aux232 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 2, 5], M_00002_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux232, [2,3,5,5])
**VARIABLES**
DISCRETE aux233 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 2, 1], M_00002_00003)
{1..3}
DISCRETE aux234 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 1, 4], M_00002_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux234, [1,1,3,4])
**VARIABLES**
DISCRETE aux235 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 1, 2], M_00002_00003)
{1..3}
DISCRETE aux236 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 1, 5], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux236, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux237 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 2], M_00002_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux237, [2,3,5,5])
**VARIABLES**
DISCRETE aux238 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 1], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux238, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux239 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 5, 4], M_00002_00003)
{3..5}
DISCRETE aux240 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 5], M_00002_00003)
{3..5}
DISCRETE aux241 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 1], M_00002_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux241, [1,1,3,4])
**VARIABLES**
DISCRETE aux242 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([3, 4, 2], M_00002_00003)
{2..4}
DISCRETE aux243 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 5, 1], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux243, [1,2,5,5])
**VARIABLES**
DISCRETE aux244 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 5, 3], M_00002_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux244, [2,3,5,5])
**VARIABLES**
DISCRETE aux245 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([2, 5, 4], M_00002_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux245, [2,2,4,5])
**VARIABLES**
DISCRETE aux246 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 1], M_00002_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux246, [1,1,3,4])
**VARIABLES**
DISCRETE aux247 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 2], M_00002_00003)
{2..4}
DISCRETE aux248 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 2, 1], M_00002_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux248, [1,2,4,4])
**VARIABLES**
DISCRETE aux249 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 2, 3], M_00002_00003)
{2..4}
DISCRETE aux250 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 2, 5], M_00002_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux250, [2,2,4,5])
**VARIABLES**
DISCRETE aux251 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 3, 5], M_00002_00003)
{3..5}
DISCRETE aux252 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 1], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux252, [1,1,4,5])
**VARIABLES**
DISCRETE aux253 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 2], M_00002_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux253, [2,2,4,5])
**VARIABLES**
DISCRETE aux254 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 5, 3], M_00002_00003)
{3..5}
DISCRETE aux255 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 1, 5], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux255, [1,1,4,5])
**VARIABLES**
DISCRETE aux256 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 1, 3], M_00002_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux256, [1,1,3,4])
**VARIABLES**
DISCRETE aux257 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([4, 1, 2], M_00002_00003)
{1..4}
**CONSTRAINTS**
w-inintervalset(aux257, [1,2,4,4])
**VARIABLES**
DISCRETE aux258 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 2, 3], M_00002_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux258, [2,3,5,5])
**VARIABLES**
DISCRETE aux259 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 2, 4], M_00002_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux259, [2,2,4,5])
**VARIABLES**
DISCRETE aux260 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 2, 1], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux260, [1,2,5,5])
**VARIABLES**
DISCRETE aux261 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 1, 2], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux261, [1,2,5,5])
**VARIABLES**
DISCRETE aux262 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 1, 3], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux262, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux263 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 1, 4], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux263, [1,1,4,5])
**VARIABLES**
DISCRETE aux264 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 2], M_00002_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux264, [2,2,4,5])
**VARIABLES**
DISCRETE aux265 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 3], M_00002_00003)
{3..5}
DISCRETE aux266 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 4, 1], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux266, [1,1,4,5])
**VARIABLES**
DISCRETE aux267 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 4], M_00002_00003)
{3..5}
DISCRETE aux268 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 2], M_00002_00003)
{2..5}
**CONSTRAINTS**
w-inintervalset(aux268, [2,3,5,5])
**VARIABLES**
DISCRETE aux269 #Active-CSE: 2 occurrences of this expression or equivalent: ElementOne([5, 3, 1], M_00002_00003)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux269, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux270 #Active-CSE: 2 occurrences of this expression or equivalent: (-11 + 6*M_00001_00003)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux270, [1,1,7,7])
**VARIABLES**
DISCRETE aux271 #Active-CSE: 2 occurrences of this expression or equivalent: (-11 + 6*M_00001_00004)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux271, [1,1,13,13,25,25])
**VARIABLES**
DISCRETE aux272 #Active-CSE: 125 occurrences of this expression or equivalent: (-1 + M_00001_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux272, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux273 #Active-CSE: 125 occurrences of this expression or equivalent: (-1 + M_00005_00004)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux273, [1,1,3,3,5,5])
**VARIABLES**
DISCRETE aux274 #Active-CSE: 25 occurrences of this expression or equivalent: (M_00002_00004 + -3)
{1..3}
DISCRETE aux275 #Active-CSE: 25 occurrences of this expression or equivalent: (M_00003_00005 + -3)
{1..3}
DISCRETE aux276 #Active-CSE: 2 occurrences of this expression or equivalent: (-23 + 6*M_00001_00005)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux276, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux277 #Active-CSE: 25 occurrences of this expression or equivalent: (M_00003_00004 + -3)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux277, [1,1,3,3])
**VARIABLES**
DISCRETE aux278 #Active-CSE: 125 occurrences of this expression or equivalent: (-1 + M_00005_00002)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux278, [1,1,5,5])
**VARIABLES**
DISCRETE aux279 #Active-CSE: 25 occurrences of this expression or equivalent: (-1 + M_00001_00003)
{1..2}
DISCRETE aux280 #Active-CSE: 125 occurrences of this expression or equivalent: (M_00004_00002 + -1)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux280, [1,1,5,5])
**VARIABLES**
DISCRETE aux281 #Active-CSE: 125 occurrences of this expression or equivalent: (M_00003_00002 + -1)
{1..5}
**CONSTRAINTS**
w-inintervalset(aux281, [1,1,5,5])
**VARIABLES**
DISCRETE aux282 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00005 + -4)
{1..2}
DISCRETE aux283 #Active-CSE: 25 occurrences of this expression or equivalent: (-3 + M_00001_00005)
{1..3}
DISCRETE aux284 #(-6 + M_00005_00001 + 6*M_00005_00003)
{1..36}
**CONSTRAINTS**
w-inintervalset(aux284, [1,1,6,7,12,13,18,18,31,31,36,36])
**VARIABLES**
DISCRETE aux285 #(-6 + 6*M_00005_00001 + M_00005_00003)
{1..36}
**CONSTRAINTS**
w-inintervalset(aux285, [1,3,6,6,32,33,36,36])
**VARIABLES**
DISCRETE aux286 #(6*M_00004_00003 + M_00004_00005 + -6)
{5..36}
**CONSTRAINTS**
w-inintervalset(aux286, [5,7,11,13,17,18,35,36])
**VARIABLES**
DISCRETE aux287 #(6*M_00004_00001 + M_00004_00005 + -6)
{1..36}
**CONSTRAINTS**
w-inintervalset(aux287, [1,1,5,6,35,36])
**VARIABLES**
DISCRETE aux288 #(6*M_00004_00001 + M_00004_00003 + -6)
{1..36}
**CONSTRAINTS**
w-inintervalset(aux288, [1,3,6,6,32,33,36,36])
**VARIABLES**
DISCRETE aux289 #(M_00004_00003 + 6*M_00004_00005 + -6)
{3..36}
**CONSTRAINTS**
w-inintervalset(aux289, [3,3,6,6,25,27,30,33,36,36])
**VARIABLES**
DISCRETE aux290 #(M_00004_00001 + 6*M_00004_00003 + -6)
{1..36}
**CONSTRAINTS**
w-inintervalset(aux290, [1,1,6,7,12,13,18,18,31,31,36,36])
**VARIABLES**
DISCRETE aux291 #(M_00004_00001 + 6*M_00004_00005 + -6)
{1..36}
**CONSTRAINTS**
w-inintervalset(aux291, [1,1,6,6,25,25,30,31,36,36])
**VARIABLES**
DISCRETE aux292 #(-7 + 6*M_00005_00001 + M_00005_00004)
{1..35}
**CONSTRAINTS**
w-inintervalset(aux292, [1,1,3,3,5,5,31,31,33,33,35,35])
**VARIABLES**
DISCRETE aux293 #(-7 + 6*M_00005_00001 + M_00005_00002)
{1..35}
**CONSTRAINTS**
w-inintervalset(aux293, [1,1,5,5,31,31,35,35])
**VARIABLES**
DISCRETE aux294 #(-7 + 6*M_00005_00003 + M_00005_00004)
{1..35}
**CONSTRAINTS**
w-inintervalset(aux294, [1,1,3,3,5,5,7,7,9,9,11,11,13,13,15,15,17,17,31,31,33,33,35,35])
**VARIABLES**
DISCRETE aux295 #(-7 + M_00005_00002 + 6*M_00005_00003)
{1..35}
**CONSTRAINTS**
w-inintervalset(aux295, [1,1,5,5,7,7,11,11,13,13,17,17,31,31,35,35])
**VARIABLES**
DISCRETE aux296 #(6*M_00003_00001 + M_00003_00002 + -7)
{1..35}
**CONSTRAINTS**
w-inintervalset(aux296, [1,1,5,5,31,31,35,35])
**VARIABLES**
DISCRETE aux297 #(7*M_00004_00001 + -6)
{1..36}
**CONSTRAINTS**
w-inintervalset(aux297, [1,1,36,36])
**VARIABLES**
DISCRETE aux298 #(7*M_00004_00003 + -6)
{1..36}
**CONSTRAINTS**
w-inintervalset(aux298, [1,1,8,8,15,15,36,36])
**VARIABLES**
DISCRETE aux299 #(7*M_00004_00005 + -6)
{1..36}
**CONSTRAINTS**
w-inintervalset(aux299, [1,1,29,29,36,36])
**VARIABLES**
DISCRETE aux300 #(-6 + 7*M_00005_00003)
{1..36}
**CONSTRAINTS**
w-inintervalset(aux300, [1,1,8,8,15,15,36,36])
**VARIABLES**
DISCRETE aux301 #(-6 + 7*M_00005_00001)
{1..36}
**CONSTRAINTS**
w-inintervalset(aux301, [1,1,36,36])
**VARIABLES**
DISCRETE aux302 #(M_00004_00002 + 6*M_00004_00005 + -7)
{1..35}
**CONSTRAINTS**
w-inintervalset(aux302, [1,1,5,5,25,25,29,29,31,31,35,35])
**VARIABLES**
DISCRETE aux303 #(M_00004_00002 + 6*M_00004_00003 + -7)
{1..35}
**CONSTRAINTS**
w-inintervalset(aux303, [1,1,5,5,7,7,11,11,13,13,17,17,31,31,35,35])
**VARIABLES**
DISCRETE aux304 #(6*M_00004_00001 + M_00004_00002 + -7)
{1..35}
**CONSTRAINTS**
w-inintervalset(aux304, [1,1,5,5,31,31,35,35])
**VARIABLES**
DISCRETE aux305 #(7*M_00003_00001 + -6)
{1..36}
**CONSTRAINTS**
w-inintervalset(aux305, [1,1,36,36])
**VARIABLES**
DISCRETE aux306 #(6*M_00003_00001 + M_00003_00004 + -9)
{1..33}
**CONSTRAINTS**
w-inintervalset(aux306, [1,1,3,3,31,31,33,33])
**VARIABLES**
DISCRETE aux307 #(6*M_00003_00001 + M_00003_00005 + -9)
{1..33}
**CONSTRAINTS**
w-inintervalset(aux307, [1,3,31,33])
**VARIABLES**
DISCRETE aux308 #(-5 + 6*M_00005_00001)
{1..31}
**CONSTRAINTS**
w-inintervalset(aux308, [1,1,31,31])
**VARIABLES**
DISCRETE aux309 #(-5 + 6*M_00005_00003)
{1..31}
**CONSTRAINTS**
w-inintervalset(aux309, [1,1,7,7,13,13,31,31])
**VARIABLES**
DISCRETE aux310 #(6*M_00003_00001 + -5)
{1..31}
**CONSTRAINTS**
w-inintervalset(aux310, [1,1,31,31])
**VARIABLES**
DISCRETE aux311 #(M_00003_00001 + 6*M_00003_00002 + -12)
{1..30}
**CONSTRAINTS**
w-inintervalset(aux311, [1,1,6,6,25,25,30,30])
**VARIABLES**
DISCRETE aux312 #(6*M_00004_00005 + -5)
{1..31}
**CONSTRAINTS**
w-inintervalset(aux312, [1,1,25,25,31,31])
**VARIABLES**
DISCRETE aux313 #(6*M_00004_00001 + -5)
{1..31}
**CONSTRAINTS**
w-inintervalset(aux313, [1,1,31,31])
**VARIABLES**
DISCRETE aux314 #(6*M_00004_00003 + -5)
{1..31}
**CONSTRAINTS**
w-inintervalset(aux314, [1,1,7,7,13,13,31,31])
**VARIABLES**
DISCRETE aux315 #(-12 + M_00005_00003 + 6*M_00005_00004)
{1..30}
**CONSTRAINTS**
w-inintervalset(aux315, [1,3,6,6,13,15,18,18,25,27,30,30])
**VARIABLES**
DISCRETE aux316 #(-12 + M_00005_00001 + 6*M_00005_00002)
{1..30}
**CONSTRAINTS**
w-inintervalset(aux316, [1,1,6,6,25,25,30,30])
**VARIABLES**
DISCRETE aux317 #(-12 + M_00005_00001 + 6*M_00005_00004)
{1..30}
**CONSTRAINTS**
w-inintervalset(aux317, [1,1,6,6,13,13,18,18,25,25,30,30])
**VARIABLES**
DISCRETE aux318 #(-12 + 6*M_00005_00002 + M_00005_00003)
{1..30}
**CONSTRAINTS**
w-inintervalset(aux318, [1,3,6,6,25,27,30,30])
**VARIABLES**
DISCRETE aux319 #(6*M_00004_00002 + M_00004_00005 + -12)
{1..30}
**CONSTRAINTS**
w-inintervalset(aux319, [1,1,5,6,25,25,29,30])
**VARIABLES**
DISCRETE aux320 #(6*M_00004_00002 + M_00004_00003 + -12)
{1..30}
**CONSTRAINTS**
w-inintervalset(aux320, [1,3,6,6,25,27,30,30])
**VARIABLES**
DISCRETE aux321 #(M_00004_00001 + 6*M_00004_00002 + -12)
{1..30}
**CONSTRAINTS**
w-inintervalset(aux321, [1,1,6,6,25,25,30,30])
**VARIABLES**
DISCRETE aux322 #(-13 + M_00005_00002 + 6*M_00005_00004)
{1..29}
**CONSTRAINTS**
w-inintervalset(aux322, [1,1,5,5,13,13,17,17,25,25,29,29])
**VARIABLES**
DISCRETE aux323 #(-13 + 6*M_00005_00002 + M_00005_00004)
{1..29}
**CONSTRAINTS**
w-inintervalset(aux323, [1,1,3,3,5,5,25,25,27,27,29,29])
**VARIABLES**
DISCRETE aux324 #(7*M_00004_00002 + -13)
{1..29}
**CONSTRAINTS**
w-inintervalset(aux324, [1,1,29,29])
**VARIABLES**
DISCRETE aux325 #(-13 + 7*M_00005_00002)
{1..29}
**CONSTRAINTS**
w-inintervalset(aux325, [1,1,29,29])
**VARIABLES**
DISCRETE aux326 #(-13 + 7*M_00005_00004)
{1..29}
**CONSTRAINTS**
w-inintervalset(aux326, [1,1,15,15,29,29])
**VARIABLES**
DISCRETE aux327 #(7*M_00003_00002 + -13)
{1..29}
**CONSTRAINTS**
w-inintervalset(aux327, [1,1,29,29])
**VARIABLES**
DISCRETE aux328 #(-13 + 7*M_00001_00004)
{1..29}
**CONSTRAINTS**
w-inintervalset(aux328, [1,1,15,15,29,29])
**VARIABLES**
DISCRETE aux329 #(-15 + 6*M_00001_00004 + M_00001_00005)
{1..27}
**CONSTRAINTS**
w-inintervalset(aux329, [1,3,13,15,25,27])
**VARIABLES**
DISCRETE aux330 #(6*M_00003_00002 + M_00003_00005 + -15)
{1..27}
**CONSTRAINTS**
w-inintervalset(aux330, [1,3,25,27])
**VARIABLES**
DISCRETE aux331 #(6*M_00003_00002 + M_00003_00004 + -15)
{1..27}
**CONSTRAINTS**
w-inintervalset(aux331, [1,1,3,3,25,25,27,27])
**VARIABLES**
DISCRETE aux332 #(-13 + M_00001_00003 + 6*M_00001_00004)
{1..26}
**CONSTRAINTS**
w-inintervalset(aux332, [1,2,13,14,25,26])
**VARIABLES**
DISCRETE aux333 #(-11 + 6*M_00005_00004)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux333, [1,1,13,13,25,25])
**VARIABLES**
DISCRETE aux334 #(-11 + 6*M_00005_00002)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux334, [1,1,25,25])
**VARIABLES**
DISCRETE aux335 #(6*M_00004_00002 + -11)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux335, [1,1,25,25])
**VARIABLES**
DISCRETE aux336 #(6*M_00003_00002 + -11)
{1..25}
**CONSTRAINTS**
w-inintervalset(aux336, [1,1,25,25])
**VARIABLES**
DISCRETE aux337 #(M_00002_00001 + 6*M_00002_00004 + -24)
{1..18}
**CONSTRAINTS**
w-inintervalset(aux337, [1,1,6,7,12,13,18,18])
**VARIABLES**
DISCRETE aux338 #(M_00002_00001 + 6*M_00002_00003 + -6)
{1..18}
**CONSTRAINTS**
w-inintervalset(aux338, [1,1,6,6,13,13,18,18])
**VARIABLES**
DISCRETE aux339 #(M_00003_00001 + 6*M_00003_00004 + -24)
{1..18}
**CONSTRAINTS**
w-inintervalset(aux339, [1,1,6,6,13,13,18,18])
**VARIABLES**
DISCRETE aux340 #(M_00003_00001 + 6*M_00003_00005 + -24)
{1..18}
**CONSTRAINTS**
w-inintervalset(aux340, [1,1,6,7,12,13,18,18])
**VARIABLES**
DISCRETE aux341 #(M_00003_00002 + 6*M_00003_00004 + -25)
{1..17}
**CONSTRAINTS**
w-inintervalset(aux341, [1,1,5,5,13,13,17,17])
**VARIABLES**
DISCRETE aux342 #(M_00003_00002 + 6*M_00003_00005 + -25)
{1..17}
**CONSTRAINTS**
w-inintervalset(aux342, [1,1,5,5,7,7,11,11,13,13,17,17])
**VARIABLES**
DISCRETE aux343 #(-25 + M_00001_00004 + 6*M_00001_00005)
{1..17}
**CONSTRAINTS**
w-inintervalset(aux343, [1,1,3,3,5,5,7,7,9,9,11,11,13,13,15,15,17,17])
**VARIABLES**
DISCRETE aux344 #(6*M_00002_00003 + M_00002_00004 + -9)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux344, [1,3,13,15])
**VARIABLES**
DISCRETE aux345 #(M_00002_00003 + 6*M_00002_00004 + -24)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux345, [1,1,3,3,7,7,9,9,13,13,15,15])
**VARIABLES**
DISCRETE aux346 #(6*M_00003_00004 + M_00003_00005 + -27)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux346, [1,3,13,15])
**VARIABLES**
DISCRETE aux347 #(M_00003_00004 + 6*M_00003_00005 + -27)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux347, [1,1,3,3,7,7,9,9,13,13,15,15])
**VARIABLES**
DISCRETE aux348 #(6*M_00002_00003 + M_00002_00005 + -10)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux348, [1,2,13,14])
**VARIABLES**
DISCRETE aux349 #(-27 + 7*M_00001_00005)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux349, [1,1,8,8,15,15])
**VARIABLES**
DISCRETE aux350 #(-25 + M_00001_00003 + 6*M_00001_00005)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux350, [1,2,7,8,13,14])
**VARIABLES**
DISCRETE aux351 #(7*M_00002_00003 + -6)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux351, [1,1,15,15])
**VARIABLES**
DISCRETE aux352 #(7*M_00002_00004 + -27)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux352, [1,1,8,8,15,15])
**VARIABLES**
DISCRETE aux353 #(7*M_00003_00004 + -27)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux353, [1,1,15,15])
**VARIABLES**
DISCRETE aux354 #(7*M_00003_00005 + -27)
{1..15}
**CONSTRAINTS**
w-inintervalset(aux354, [1,1,8,8,15,15])
**VARIABLES**
DISCRETE aux355 #(6*M_00002_00004 + M_00002_00005 + -28)
{1..14}
**CONSTRAINTS**
w-inintervalset(aux355, [1,2,7,8,13,14])
**VARIABLES**
DISCRETE aux356 #(M_00002_00001 + 6*M_00002_00005 + -30)
{1..12}
**CONSTRAINTS**
w-inintervalset(aux356, [1,1,6,7,12,12])
**VARIABLES**
DISCRETE aux357 #(6*M_00002_00004 + -23)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux357, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux358 #(6*M_00002_00003 + -5)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux358, [1,1,13,13])
**VARIABLES**
DISCRETE aux359 #(6*M_00003_00005 + -23)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux359, [1,1,7,7,13,13])
**VARIABLES**
DISCRETE aux360 #(6*M_00003_00004 + -23)
{1..13}
**CONSTRAINTS**
w-inintervalset(aux360, [1,1,13,13])
**VARIABLES**
DISCRETE aux361 #(-13 + 6*M_00001_00003 + M_00001_00004)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux361, [1,1,3,3,5,5,7,7,9,9,11,11])
**VARIABLES**
DISCRETE aux362 #(M_00002_00004 + 6*M_00002_00005 + -33)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux362, [1,3,7,9])
**VARIABLES**
DISCRETE aux363 #(-15 + 6*M_00001_00003 + M_00001_00005)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux363, [1,3,7,9])
**VARIABLES**
DISCRETE aux364 #(M_00002_00003 + 6*M_00002_00005 + -30)
{1..9}
**CONSTRAINTS**
w-inintervalset(aux364, [1,1,3,3,7,7,9,9])
**VARIABLES**
DISCRETE aux365 #(-13 + 7*M_00001_00003)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux365, [1,1,8,8])
**VARIABLES**
DISCRETE aux366 #(7*M_00002_00005 + -34)
{1..8}
**CONSTRAINTS**
w-inintervalset(aux366, [1,1,8,8])
**VARIABLES**
DISCRETE aux367 #(6*M_00002_00005 + -29)
{1..7}
**CONSTRAINTS**
w-inintervalset(aux367, [1,1,7,7])
**VARIABLES**
DISCRETE aux368 #(7*M_00002_00001 + -6)
{1..36}
**CONSTRAINTS**
w-inintervalset(aux368, [1,1,36,36])
**VARIABLES**
DISCRETE aux369 #(6*M_00002_00001 + -5)
{1..31}
**CONSTRAINTS**
w-inintervalset(aux369, [1,1,31,31])
**VARIABLES**
DISCRETE aux370 #(6*M_00002_00001 + M_00002_00003 + -6)
{1..33}
**CONSTRAINTS**
w-inintervalset(aux370, [1,1,3,3,33,33])
**VARIABLES**
DISCRETE aux371 #(6*M_00002_00001 + M_00002_00004 + -9)
{1..33}
**CONSTRAINTS**
w-inintervalset(aux371, [1,3,31,33])
**VARIABLES**
DISCRETE aux372 #(6*M_00002_00001 + M_00002_00005 + -10)
{1..32}
**CONSTRAINTS**
w-inintervalset(aux372, [1,2,31,32])
**VARIABLES**
DISCRETE aux373 #ElementOne([2, 3, 5, 4, 6], aux272)
{2..6}
DISCRETE aux374 #ElementOne([1, 2, 3, 5, 4, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux374, [1,1,6,6])
**VARIABLES**
DISCRETE aux375 #ElementOne([1, 2, 3, 5, 4, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux375, [1,1,6,6])
**VARIABLES**
DISCRETE aux376 #ElementOne([2, 3, 5, 4, 6], aux281)
{2..6}
DISCRETE aux377 #ElementOne([1, 2, 3, 5, 4, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux377, [1,1,6,6])
**VARIABLES**
DISCRETE aux378 #ElementOne([2, 3, 5, 4, 6], aux278)
{2..6}
DISCRETE aux379 #ElementOne([1, 2, 3, 5, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux379, [1,3,6,6])
**VARIABLES**
DISCRETE aux380 #ElementOne([2, 3, 5, 4, 6], aux273)
{2..6}
DISCRETE aux381 #ElementOne([1, 2, 3, 5, 4, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux381, [1,1,6,6])
**VARIABLES**
DISCRETE aux382 #ElementOne([2, 3, 5, 4, 6], aux280)
{2..6}
DISCRETE aux383 #ElementOne([1, 2, 3, 5, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux383, [1,3,6,6])
**VARIABLES**
DISCRETE aux384 #ElementOne([1, 2, 3, 5, 4, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux384, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux385 #ElementOne([2, 4, 3, 5, 6], aux272)
{2..6}
DISCRETE aux386 #ElementOne([1, 2, 4, 3, 5, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux386, [1,1,6,6])
**VARIABLES**
DISCRETE aux387 #ElementOne([1, 2, 4, 3, 5, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux387, [1,1,6,6])
**VARIABLES**
DISCRETE aux388 #ElementOne([2, 4, 3, 5, 6], aux280)
{2..6}
DISCRETE aux389 #ElementOne([1, 2, 4, 3, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux389, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux390 #ElementOne([1, 2, 4, 3, 5, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux390, [1,1,5,6])
**VARIABLES**
DISCRETE aux391 #ElementOne([1, 2, 4, 3, 5, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux391, [1,1,6,6])
**VARIABLES**
DISCRETE aux392 #ElementOne([2, 4, 3, 5, 6], aux281)
{2..6}
DISCRETE aux393 #ElementOne([1, 2, 4, 3, 5, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux393, [1,1,6,6])
**VARIABLES**
DISCRETE aux394 #ElementOne([2, 4, 3, 5, 6], aux278)
{2..6}
DISCRETE aux395 #ElementOne([2, 4, 3, 5, 6], aux273)
{2..6}
DISCRETE aux396 #ElementOne([1, 2, 4, 3, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux396, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux397 #ElementOne([2, 5, 3, 4, 6], aux272)
{2..6}
DISCRETE aux398 #ElementOne([1, 2, 5, 3, 4, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux398, [1,1,6,6])
**VARIABLES**
DISCRETE aux399 #ElementOne([1, 2, 5, 3, 4, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux399, [1,1,6,6])
**VARIABLES**
DISCRETE aux400 #ElementOne([2, 5, 3, 4, 6], aux280)
{2..6}
DISCRETE aux401 #ElementOne([1, 2, 5, 3, 4, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux401, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux402 #ElementOne([1, 2, 5, 3, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux402, [1,2,5,6])
**VARIABLES**
DISCRETE aux403 #ElementOne([1, 2, 5, 3, 4, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux403, [1,1,6,6])
**VARIABLES**
DISCRETE aux404 #ElementOne([2, 5, 3, 4, 6], aux278)
{2..6}
DISCRETE aux405 #ElementOne([2, 5, 3, 4, 6], aux273)
{2..6}
DISCRETE aux406 #ElementOne([1, 2, 5, 3, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux406, [1,2,5,6])
**VARIABLES**
DISCRETE aux407 #ElementOne([1, 2, 5, 3, 4, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux407, [1,1,6,6])
**VARIABLES**
DISCRETE aux408 #ElementOne([2, 5, 3, 4, 6], aux281)
{2..6}
DISCRETE aux409 #ElementOne([2, 4, 5, 3, 6], aux272)
{2..6}
DISCRETE aux410 #ElementOne([1, 2, 4, 5, 3, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux410, [1,1,6,6])
**VARIABLES**
DISCRETE aux411 #ElementOne([1, 2, 4, 5, 3, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux411, [1,1,6,6])
**VARIABLES**
DISCRETE aux412 #ElementOne([2, 4, 5, 3, 6], aux278)
{2..6}
DISCRETE aux413 #ElementOne([1, 2, 4, 5, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux413, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux414 #ElementOne([2, 4, 5, 3, 6], aux273)
{2..6}
DISCRETE aux415 #ElementOne([1, 2, 4, 5, 3, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux415, [1,1,6,6])
**VARIABLES**
DISCRETE aux416 #ElementOne([2, 4, 5, 3, 6], aux281)
{2..6}
DISCRETE aux417 #ElementOne([1, 2, 4, 5, 3, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux417, [1,1,6,6])
**VARIABLES**
DISCRETE aux418 #ElementOne([2, 4, 5, 3, 6], aux280)
{2..6}
DISCRETE aux419 #ElementOne([1, 2, 4, 5, 3, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux419, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux420 #ElementOne([1, 2, 4, 5, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux420, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux421 #ElementOne([2, 5, 4, 3, 6], aux272)
{2..6}
DISCRETE aux422 #ElementOne([1, 2, 5, 4, 3, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux422, [1,1,6,6])
**VARIABLES**
DISCRETE aux423 #ElementOne([1, 2, 5, 4, 3, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux423, [1,1,6,6])
**VARIABLES**
DISCRETE aux424 #ElementOne([2, 5, 4, 3, 6], aux278)
{2..6}
DISCRETE aux425 #ElementOne([2, 5, 4, 3, 6], aux273)
{2..6}
DISCRETE aux426 #ElementOne([1, 2, 5, 4, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux426, [1,2,5,6])
**VARIABLES**
DISCRETE aux427 #ElementOne([1, 2, 5, 4, 3, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux427, [1,1,6,6])
**VARIABLES**
DISCRETE aux428 #ElementOne([2, 5, 4, 3, 6], aux280)
{2..6}
DISCRETE aux429 #ElementOne([1, 2, 5, 4, 3, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux429, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux430 #ElementOne([1, 2, 5, 4, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux430, [1,2,5,6])
**VARIABLES**
DISCRETE aux431 #ElementOne([1, 2, 5, 4, 3, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux431, [1,1,6,6])
**VARIABLES**
DISCRETE aux432 #ElementOne([2, 5, 4, 3, 6], aux281)
{2..6}
DISCRETE aux433 #ElementOne([3, 2, 4, 5, 6], aux272)
{2..6}
DISCRETE aux434 #ElementOne([1, 3, 2, 4, 5, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux434, [1,1,6,6])
**VARIABLES**
DISCRETE aux435 #ElementOne([3, 2, 4, 5, 6], aux281)
{2..6}
DISCRETE aux436 #ElementOne([1, 3, 2, 4, 5, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux436, [1,1,6,6])
**VARIABLES**
DISCRETE aux437 #ElementOne([1, 3, 2, 4, 5, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux437, [1,1,6,6])
**VARIABLES**
DISCRETE aux438 #ElementOne([1, 3, 2, 4, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux438, [1,3,6,6])
**VARIABLES**
DISCRETE aux439 #ElementOne([3, 2, 4, 5, 6], aux280)
{2..6}
DISCRETE aux440 #ElementOne([1, 3, 2, 4, 5, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux440, [1,1,5,6])
**VARIABLES**
DISCRETE aux441 #ElementOne([1, 3, 2, 4, 5, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux441, [1,1,6,6])
**VARIABLES**
DISCRETE aux442 #ElementOne([1, 3, 2, 4, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux442, [1,3,6,6])
**VARIABLES**
DISCRETE aux443 #ElementOne([3, 2, 4, 5, 6], aux278)
{2..6}
DISCRETE aux444 #ElementOne([3, 2, 4, 5, 6], aux273)
{2..6}
DISCRETE aux445 #ElementOne([3, 2, 5, 4, 6], aux272)
{2..6}
DISCRETE aux446 #ElementOne([1, 3, 2, 5, 4, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux446, [1,1,6,6])
**VARIABLES**
DISCRETE aux447 #ElementOne([3, 2, 5, 4, 6], aux281)
{2..6}
DISCRETE aux448 #ElementOne([1, 3, 2, 5, 4, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux448, [1,1,6,6])
**VARIABLES**
DISCRETE aux449 #ElementOne([1, 3, 2, 5, 4, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux449, [1,1,6,6])
**VARIABLES**
DISCRETE aux450 #ElementOne([1, 3, 2, 5, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux450, [1,3,6,6])
**VARIABLES**
DISCRETE aux451 #ElementOne([3, 2, 5, 4, 6], aux278)
{2..6}
DISCRETE aux452 #ElementOne([3, 2, 5, 4, 6], aux273)
{2..6}
DISCRETE aux453 #ElementOne([1, 3, 2, 5, 4, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux453, [1,1,6,6])
**VARIABLES**
DISCRETE aux454 #ElementOne([1, 3, 2, 5, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux454, [1,3,6,6])
**VARIABLES**
DISCRETE aux455 #ElementOne([3, 2, 5, 4, 6], aux280)
{2..6}
DISCRETE aux456 #ElementOne([1, 3, 2, 5, 4, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux456, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux457 #ElementOne([4, 2, 3, 5, 6], aux272)
{2..6}
DISCRETE aux458 #ElementOne([1, 4, 2, 3, 5, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux458, [1,1,6,6])
**VARIABLES**
DISCRETE aux459 #ElementOne([4, 2, 3, 5, 6], aux281)
{2..6}
DISCRETE aux460 #ElementOne([1, 4, 2, 3, 5, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux460, [1,1,6,6])
**VARIABLES**
DISCRETE aux461 #ElementOne([1, 4, 2, 3, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux461, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux462 #ElementOne([4, 2, 3, 5, 6], aux280)
{2..6}
DISCRETE aux463 #ElementOne([1, 4, 2, 3, 5, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux463, [1,1,5,6])
**VARIABLES**
DISCRETE aux464 #ElementOne([1, 4, 2, 3, 5, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux464, [1,1,6,6])
**VARIABLES**
DISCRETE aux465 #ElementOne([1, 4, 2, 3, 5, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux465, [1,1,6,6])
**VARIABLES**
DISCRETE aux466 #ElementOne([1, 4, 2, 3, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux466, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux467 #ElementOne([4, 2, 3, 5, 6], aux273)
{2..6}
DISCRETE aux468 #ElementOne([4, 2, 3, 5, 6], aux278)
{2..6}
DISCRETE aux469 #ElementOne([5, 2, 3, 4, 6], aux272)
{2..6}
DISCRETE aux470 #ElementOne([1, 5, 2, 3, 4, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux470, [1,1,6,6])
**VARIABLES**
DISCRETE aux471 #ElementOne([5, 2, 3, 4, 6], aux281)
{2..6}
DISCRETE aux472 #ElementOne([1, 5, 2, 3, 4, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux472, [1,1,6,6])
**VARIABLES**
DISCRETE aux473 #ElementOne([1, 5, 2, 3, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux473, [1,2,5,6])
**VARIABLES**
DISCRETE aux474 #ElementOne([1, 5, 2, 3, 4, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux474, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux475 #ElementOne([5, 2, 3, 4, 6], aux280)
{2..6}
DISCRETE aux476 #ElementOne([1, 5, 2, 3, 4, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux476, [1,1,6,6])
**VARIABLES**
DISCRETE aux477 #ElementOne([1, 5, 2, 3, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux477, [1,2,5,6])
**VARIABLES**
DISCRETE aux478 #ElementOne([5, 2, 3, 4, 6], aux273)
{2..6}
DISCRETE aux479 #ElementOne([5, 2, 3, 4, 6], aux278)
{2..6}
DISCRETE aux480 #ElementOne([1, 5, 2, 3, 4, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux480, [1,1,6,6])
**VARIABLES**
DISCRETE aux481 #ElementOne([4, 2, 5, 3, 6], aux272)
{2..6}
DISCRETE aux482 #ElementOne([1, 4, 2, 5, 3, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux482, [1,1,6,6])
**VARIABLES**
DISCRETE aux483 #ElementOne([4, 2, 5, 3, 6], aux281)
{2..6}
DISCRETE aux484 #ElementOne([1, 4, 2, 5, 3, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux484, [1,1,6,6])
**VARIABLES**
DISCRETE aux485 #ElementOne([1, 4, 2, 5, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux485, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux486 #ElementOne([4, 2, 5, 3, 6], aux278)
{2..6}
DISCRETE aux487 #ElementOne([4, 2, 5, 3, 6], aux273)
{2..6}
DISCRETE aux488 #ElementOne([1, 4, 2, 5, 3, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux488, [1,1,6,6])
**VARIABLES**
DISCRETE aux489 #ElementOne([1, 4, 2, 5, 3, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux489, [1,1,6,6])
**VARIABLES**
DISCRETE aux490 #ElementOne([1, 4, 2, 5, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux490, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux491 #ElementOne([1, 4, 2, 5, 3, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux491, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux492 #ElementOne([4, 2, 5, 3, 6], aux280)
{2..6}
DISCRETE aux493 #ElementOne([5, 2, 4, 3, 6], aux272)
{2..6}
DISCRETE aux494 #ElementOne([1, 5, 2, 4, 3, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux494, [1,1,6,6])
**VARIABLES**
DISCRETE aux495 #ElementOne([5, 2, 4, 3, 6], aux281)
{2..6}
DISCRETE aux496 #ElementOne([1, 5, 2, 4, 3, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux496, [1,1,6,6])
**VARIABLES**
DISCRETE aux497 #ElementOne([1, 5, 2, 4, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux497, [1,2,5,6])
**VARIABLES**
DISCRETE aux498 #ElementOne([5, 2, 4, 3, 6], aux273)
{2..6}
DISCRETE aux499 #ElementOne([5, 2, 4, 3, 6], aux278)
{2..6}
DISCRETE aux500 #ElementOne([1, 5, 2, 4, 3, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux500, [1,1,6,6])
**VARIABLES**
DISCRETE aux501 #ElementOne([1, 5, 2, 4, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux501, [1,2,5,6])
**VARIABLES**
DISCRETE aux502 #ElementOne([1, 5, 2, 4, 3, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux502, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux503 #ElementOne([5, 2, 4, 3, 6], aux280)
{2..6}
DISCRETE aux504 #ElementOne([1, 5, 2, 4, 3, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux504, [1,1,6,6])
**VARIABLES**
DISCRETE aux505 #ElementOne([3, 4, 2, 5, 6], aux272)
{2..6}
DISCRETE aux506 #ElementOne([1, 3, 4, 2, 5, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux506, [1,1,6,6])
**VARIABLES**
DISCRETE aux507 #ElementOne([3, 4, 2, 5, 6], aux280)
{2..6}
DISCRETE aux508 #ElementOne([1, 3, 4, 2, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux508, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux509 #ElementOne([1, 3, 4, 2, 5, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux509, [1,1,5,6])
**VARIABLES**
DISCRETE aux510 #ElementOne([1, 3, 4, 2, 5, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux510, [1,1,6,6])
**VARIABLES**
DISCRETE aux511 #ElementOne([1, 3, 4, 2, 5, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux511, [1,1,6,6])
**VARIABLES**
DISCRETE aux512 #ElementOne([3, 4, 2, 5, 6], aux281)
{2..6}
DISCRETE aux513 #ElementOne([1, 3, 4, 2, 5, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux513, [1,1,6,6])
**VARIABLES**
DISCRETE aux514 #ElementOne([3, 4, 2, 5, 6], aux273)
{2..6}
DISCRETE aux515 #ElementOne([3, 4, 2, 5, 6], aux278)
{2..6}
DISCRETE aux516 #ElementOne([1, 3, 4, 2, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux516, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux517 #ElementOne([3, 5, 2, 4, 6], aux272)
{2..6}
DISCRETE aux518 #ElementOne([1, 3, 5, 2, 4, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux518, [1,1,6,6])
**VARIABLES**
DISCRETE aux519 #ElementOne([3, 5, 2, 4, 6], aux280)
{2..6}
DISCRETE aux520 #ElementOne([1, 3, 5, 2, 4, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux520, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux521 #ElementOne([1, 3, 5, 2, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux521, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux522 #ElementOne([1, 3, 5, 2, 4, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux522, [1,1,6,6])
**VARIABLES**
DISCRETE aux523 #ElementOne([1, 3, 5, 2, 4, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux523, [1,1,6,6])
**VARIABLES**
DISCRETE aux524 #ElementOne([3, 5, 2, 4, 6], aux273)
{2..6}
DISCRETE aux525 #ElementOne([3, 5, 2, 4, 6], aux278)
{2..6}
DISCRETE aux526 #ElementOne([1, 3, 5, 2, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux526, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux527 #ElementOne([1, 3, 5, 2, 4, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux527, [1,1,6,6])
**VARIABLES**
DISCRETE aux528 #ElementOne([3, 5, 2, 4, 6], aux281)
{2..6}
DISCRETE aux529 #ElementOne([4, 3, 2, 5, 6], aux272)
{2..6}
DISCRETE aux530 #ElementOne([1, 4, 3, 2, 5, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux530, [1,1,6,6])
**VARIABLES**
DISCRETE aux531 #ElementOne([1, 4, 3, 2, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux531, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux532 #ElementOne([4, 3, 2, 5, 6], aux280)
{2..6}
DISCRETE aux533 #ElementOne([1, 4, 3, 2, 5, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux533, [1,1,5,6])
**VARIABLES**
DISCRETE aux534 #ElementOne([1, 4, 3, 2, 5, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux534, [1,1,6,6])
**VARIABLES**
DISCRETE aux535 #ElementOne([4, 3, 2, 5, 6], aux281)
{2..6}
DISCRETE aux536 #ElementOne([1, 4, 3, 2, 5, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux536, [1,1,6,6])
**VARIABLES**
DISCRETE aux537 #ElementOne([1, 4, 3, 2, 5, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux537, [1,1,6,6])
**VARIABLES**
DISCRETE aux538 #ElementOne([4, 3, 2, 5, 6], aux273)
{2..6}
DISCRETE aux539 #ElementOne([1, 4, 3, 2, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux539, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux540 #ElementOne([4, 3, 2, 5, 6], aux278)
{2..6}
DISCRETE aux541 #ElementOne([5, 3, 2, 4, 6], aux272)
{2..6}
DISCRETE aux542 #ElementOne([1, 5, 3, 2, 4, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux542, [1,1,6,6])
**VARIABLES**
DISCRETE aux543 #ElementOne([1, 5, 3, 2, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux543, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux544 #ElementOne([1, 5, 3, 2, 4, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux544, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux545 #ElementOne([5, 3, 2, 4, 6], aux280)
{2..6}
DISCRETE aux546 #ElementOne([1, 5, 3, 2, 4, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux546, [1,1,6,6])
**VARIABLES**
DISCRETE aux547 #ElementOne([5, 3, 2, 4, 6], aux281)
{2..6}
DISCRETE aux548 #ElementOne([1, 5, 3, 2, 4, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux548, [1,1,6,6])
**VARIABLES**
DISCRETE aux549 #ElementOne([5, 3, 2, 4, 6], aux273)
{2..6}
DISCRETE aux550 #ElementOne([1, 5, 3, 2, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux550, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux551 #ElementOne([5, 3, 2, 4, 6], aux278)
{2..6}
DISCRETE aux552 #ElementOne([1, 5, 3, 2, 4, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux552, [1,1,6,6])
**VARIABLES**
DISCRETE aux553 #ElementOne([4, 5, 2, 3, 6], aux272)
{2..6}
DISCRETE aux554 #ElementOne([1, 4, 5, 2, 3, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux554, [1,1,6,6])
**VARIABLES**
DISCRETE aux555 #ElementOne([1, 4, 5, 2, 3, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux555, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux556 #ElementOne([4, 5, 2, 3, 6], aux280)
{2..6}
DISCRETE aux557 #ElementOne([1, 4, 5, 2, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux557, [1,1,4,6])
**VARIABLES**
DISCRETE aux558 #ElementOne([1, 4, 5, 2, 3, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux558, [1,1,6,6])
**VARIABLES**
DISCRETE aux559 #ElementOne([4, 5, 2, 3, 6], aux273)
{2..6}
DISCRETE aux560 #ElementOne([4, 5, 2, 3, 6], aux278)
{2..6}
DISCRETE aux561 #ElementOne([1, 4, 5, 2, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux561, [1,1,4,6])
**VARIABLES**
DISCRETE aux562 #ElementOne([1, 4, 5, 2, 3, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux562, [1,1,6,6])
**VARIABLES**
DISCRETE aux563 #ElementOne([1, 4, 5, 2, 3, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux563, [1,1,6,6])
**VARIABLES**
DISCRETE aux564 #ElementOne([4, 5, 2, 3, 6], aux281)
{2..6}
DISCRETE aux565 #ElementOne([5, 4, 2, 3, 6], aux272)
{2..6}
DISCRETE aux566 #ElementOne([1, 5, 4, 2, 3, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux566, [1,1,6,6])
**VARIABLES**
DISCRETE aux567 #ElementOne([1, 5, 4, 2, 3, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux567, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux568 #ElementOne([1, 5, 4, 2, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux568, [1,1,4,6])
**VARIABLES**
DISCRETE aux569 #ElementOne([5, 4, 2, 3, 6], aux280)
{2..6}
DISCRETE aux570 #ElementOne([1, 5, 4, 2, 3, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux570, [1,1,6,6])
**VARIABLES**
DISCRETE aux571 #ElementOne([5, 4, 2, 3, 6], aux273)
{2..6}
DISCRETE aux572 #ElementOne([1, 5, 4, 2, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux572, [1,1,4,6])
**VARIABLES**
DISCRETE aux573 #ElementOne([5, 4, 2, 3, 6], aux278)
{2..6}
DISCRETE aux574 #ElementOne([1, 5, 4, 2, 3, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux574, [1,1,6,6])
**VARIABLES**
DISCRETE aux575 #ElementOne([5, 4, 2, 3, 6], aux281)
{2..6}
DISCRETE aux576 #ElementOne([1, 5, 4, 2, 3, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux576, [1,1,6,6])
**VARIABLES**
DISCRETE aux577 #ElementOne([3, 4, 5, 2, 6], aux272)
{2..6}
DISCRETE aux578 #ElementOne([1, 3, 4, 5, 2, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux578, [1,1,6,6])
**VARIABLES**
DISCRETE aux579 #ElementOne([3, 4, 5, 2, 6], aux278)
{2..6}
DISCRETE aux580 #ElementOne([1, 3, 4, 5, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux580, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux581 #ElementOne([3, 4, 5, 2, 6], aux273)
{2..6}
DISCRETE aux582 #ElementOne([1, 3, 4, 5, 2, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux582, [1,1,6,6])
**VARIABLES**
DISCRETE aux583 #ElementOne([1, 3, 4, 5, 2, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux583, [1,1,6,6])
**VARIABLES**
DISCRETE aux584 #ElementOne([3, 4, 5, 2, 6], aux281)
{2..6}
DISCRETE aux585 #ElementOne([1, 3, 4, 5, 2, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux585, [1,1,6,6])
**VARIABLES**
DISCRETE aux586 #ElementOne([1, 3, 4, 5, 2, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux586, [1,2,6,6])
**VARIABLES**
DISCRETE aux587 #ElementOne([3, 4, 5, 2, 6], aux280)
{2..6}
DISCRETE aux588 #ElementOne([1, 3, 4, 5, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux588, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux589 #ElementOne([3, 5, 4, 2, 6], aux272)
{2..6}
DISCRETE aux590 #ElementOne([1, 3, 5, 4, 2, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux590, [1,1,6,6])
**VARIABLES**
DISCRETE aux591 #ElementOne([3, 5, 4, 2, 6], aux278)
{2..6}
DISCRETE aux592 #ElementOne([3, 5, 4, 2, 6], aux273)
{2..6}
DISCRETE aux593 #ElementOne([1, 3, 5, 4, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux593, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux594 #ElementOne([1, 3, 5, 4, 2, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux594, [1,1,6,6])
**VARIABLES**
DISCRETE aux595 #ElementOne([1, 3, 5, 4, 2, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux595, [1,1,6,6])
**VARIABLES**
DISCRETE aux596 #ElementOne([1, 3, 5, 4, 2, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux596, [1,2,6,6])
**VARIABLES**
DISCRETE aux597 #ElementOne([3, 5, 4, 2, 6], aux280)
{2..6}
DISCRETE aux598 #ElementOne([1, 3, 5, 4, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux598, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux599 #ElementOne([1, 3, 5, 4, 2, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux599, [1,1,6,6])
**VARIABLES**
DISCRETE aux600 #ElementOne([3, 5, 4, 2, 6], aux281)
{2..6}
DISCRETE aux601 #ElementOne([4, 3, 5, 2, 6], aux272)
{2..6}
DISCRETE aux602 #ElementOne([1, 4, 3, 5, 2, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux602, [1,1,6,6])
**VARIABLES**
DISCRETE aux603 #ElementOne([1, 4, 3, 5, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux603, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux604 #ElementOne([4, 3, 5, 2, 6], aux278)
{2..6}
DISCRETE aux605 #ElementOne([4, 3, 5, 2, 6], aux273)
{2..6}
DISCRETE aux606 #ElementOne([1, 4, 3, 5, 2, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux606, [1,1,6,6])
**VARIABLES**
DISCRETE aux607 #ElementOne([4, 3, 5, 2, 6], aux281)
{2..6}
DISCRETE aux608 #ElementOne([1, 4, 3, 5, 2, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux608, [1,1,6,6])
**VARIABLES**
DISCRETE aux609 #ElementOne([1, 4, 3, 5, 2, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux609, [1,1,6,6])
**VARIABLES**
DISCRETE aux610 #ElementOne([1, 4, 3, 5, 2, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux610, [1,2,6,6])
**VARIABLES**
DISCRETE aux611 #ElementOne([1, 4, 3, 5, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux611, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux612 #ElementOne([4, 3, 5, 2, 6], aux280)
{2..6}
DISCRETE aux613 #ElementOne([5, 3, 4, 2, 6], aux272)
{2..6}
DISCRETE aux614 #ElementOne([1, 5, 3, 4, 2, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux614, [1,1,6,6])
**VARIABLES**
DISCRETE aux615 #ElementOne([1, 5, 3, 4, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux615, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux616 #ElementOne([5, 3, 4, 2, 6], aux273)
{2..6}
DISCRETE aux617 #ElementOne([5, 3, 4, 2, 6], aux278)
{2..6}
DISCRETE aux618 #ElementOne([1, 5, 3, 4, 2, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux618, [1,1,6,6])
**VARIABLES**
DISCRETE aux619 #ElementOne([5, 3, 4, 2, 6], aux281)
{2..6}
DISCRETE aux620 #ElementOne([1, 5, 3, 4, 2, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux620, [1,1,6,6])
**VARIABLES**
DISCRETE aux621 #ElementOne([1, 5, 3, 4, 2, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux621, [1,2,6,6])
**VARIABLES**
DISCRETE aux622 #ElementOne([1, 5, 3, 4, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux622, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux623 #ElementOne([5, 3, 4, 2, 6], aux280)
{2..6}
DISCRETE aux624 #ElementOne([1, 5, 3, 4, 2, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux624, [1,1,6,6])
**VARIABLES**
DISCRETE aux625 #ElementOne([4, 5, 3, 2, 6], aux272)
{2..6}
DISCRETE aux626 #ElementOne([1, 4, 5, 3, 2, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux626, [1,1,6,6])
**VARIABLES**
DISCRETE aux627 #ElementOne([4, 5, 3, 2, 6], aux273)
{2..6}
DISCRETE aux628 #ElementOne([4, 5, 3, 2, 6], aux278)
{2..6}
DISCRETE aux629 #ElementOne([1, 4, 5, 3, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux629, [1,1,4,6])
**VARIABLES**
DISCRETE aux630 #ElementOne([1, 4, 5, 3, 2, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux630, [1,1,6,6])
**VARIABLES**
DISCRETE aux631 #ElementOne([1, 4, 5, 3, 2, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux631, [1,2,6,6])
**VARIABLES**
DISCRETE aux632 #ElementOne([4, 5, 3, 2, 6], aux280)
{2..6}
DISCRETE aux633 #ElementOne([1, 4, 5, 3, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux633, [1,1,4,6])
**VARIABLES**
DISCRETE aux634 #ElementOne([1, 4, 5, 3, 2, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux634, [1,1,6,6])
**VARIABLES**
DISCRETE aux635 #ElementOne([1, 4, 5, 3, 2, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux635, [1,1,6,6])
**VARIABLES**
DISCRETE aux636 #ElementOne([4, 5, 3, 2, 6], aux281)
{2..6}
DISCRETE aux637 #ElementOne([5, 4, 3, 2, 6], aux272)
{2..6}
DISCRETE aux638 #ElementOne([1, 5, 4, 3, 2, 6], M_00005_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux638, [1,1,6,6])
**VARIABLES**
DISCRETE aux639 #ElementOne([5, 4, 3, 2, 6], aux273)
{2..6}
DISCRETE aux640 #ElementOne([1, 5, 4, 3, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux640, [1,1,4,6])
**VARIABLES**
DISCRETE aux641 #ElementOne([5, 4, 3, 2, 6], aux278)
{2..6}
DISCRETE aux642 #ElementOne([1, 5, 4, 3, 2, 6], M_00004_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux642, [1,1,6,6])
**VARIABLES**
DISCRETE aux643 #ElementOne([1, 5, 4, 3, 2, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux643, [1,2,6,6])
**VARIABLES**
DISCRETE aux644 #ElementOne([1, 5, 4, 3, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux644, [1,1,4,6])
**VARIABLES**
DISCRETE aux645 #ElementOne([5, 4, 3, 2, 6], aux280)
{2..6}
DISCRETE aux646 #ElementOne([1, 5, 4, 3, 2, 6], M_00003_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux646, [1,1,6,6])
**VARIABLES**
DISCRETE aux647 #ElementOne([5, 4, 3, 2, 6], aux281)
{2..6}
DISCRETE aux648 #ElementOne([1, 5, 4, 3, 2, 6], M_00002_00001)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux648, [1,1,6,6])
**VARIABLES**
DISCRETE aux649 #ElementOne([2, 1, 3, 4, 5, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux649, [2,2,6,6])
**VARIABLES**
DISCRETE aux650 #ElementOne([1, 3, 4, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux650, [1,1,3,6])
**VARIABLES**
DISCRETE aux651 #ElementOne([1, 3, 4, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux651, [1,1,3,6])
**VARIABLES**
DISCRETE aux652 #ElementOne([2, 1, 3, 4, 5, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux652, [2,2,6,6])
**VARIABLES**
DISCRETE aux653 #ElementOne([1, 3, 4, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux653, [1,1,3,6])
**VARIABLES**
DISCRETE aux654 #ElementOne([2, 1, 3, 4, 5, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux654, [2,2,6,6])
**VARIABLES**
DISCRETE aux655 #ElementOne([2, 1, 3, 4, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux655, [1,3,6,6])
**VARIABLES**
DISCRETE aux656 #ElementOne([2, 1, 3, 4, 5, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux656, [2,2,5,6])
**VARIABLES**
DISCRETE aux657 #ElementOne([1, 3, 4, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux657, [1,1,3,6])
**VARIABLES**
DISCRETE aux658 #ElementOne([2, 1, 3, 4, 5, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux658, [2,2,6,6])
**VARIABLES**
DISCRETE aux659 #ElementOne([2, 1, 3, 4, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux659, [1,3,6,6])
**VARIABLES**
DISCRETE aux660 #ElementOne([1, 3, 4, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux660, [1,1,3,6])
**VARIABLES**
DISCRETE aux661 #ElementOne([2, 1, 3, 5, 4, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux661, [2,2,6,6])
**VARIABLES**
DISCRETE aux662 #ElementOne([1, 3, 5, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux662, [1,1,3,6])
**VARIABLES**
DISCRETE aux663 #ElementOne([1, 3, 5, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux663, [1,1,3,6])
**VARIABLES**
DISCRETE aux664 #ElementOne([2, 1, 3, 5, 4, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux664, [2,2,6,6])
**VARIABLES**
DISCRETE aux665 #ElementOne([1, 3, 5, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux665, [1,1,3,6])
**VARIABLES**
DISCRETE aux666 #ElementOne([2, 1, 3, 5, 4, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux666, [2,2,6,6])
**VARIABLES**
DISCRETE aux667 #ElementOne([2, 1, 3, 5, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux667, [1,3,6,6])
**VARIABLES**
DISCRETE aux668 #ElementOne([1, 3, 5, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux668, [1,1,3,6])
**VARIABLES**
DISCRETE aux669 #ElementOne([1, 3, 5, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux669, [1,1,3,6])
**VARIABLES**
DISCRETE aux670 #ElementOne([2, 1, 3, 5, 4, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux670, [2,2,6,6])
**VARIABLES**
DISCRETE aux671 #ElementOne([2, 1, 3, 5, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux671, [1,3,6,6])
**VARIABLES**
DISCRETE aux672 #ElementOne([2, 1, 3, 5, 4, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux672, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux673 #ElementOne([2, 1, 4, 3, 5, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux673, [2,2,6,6])
**VARIABLES**
DISCRETE aux674 #ElementOne([1, 4, 3, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux674, [1,1,3,6])
**VARIABLES**
DISCRETE aux675 #ElementOne([1, 4, 3, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux675, [1,1,3,6])
**VARIABLES**
DISCRETE aux676 #ElementOne([2, 1, 4, 3, 5, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux676, [2,2,6,6])
**VARIABLES**
DISCRETE aux677 #ElementOne([2, 1, 4, 3, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux677, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux678 #ElementOne([2, 1, 4, 3, 5, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux678, [2,2,5,6])
**VARIABLES**
DISCRETE aux679 #ElementOne([1, 4, 3, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux679, [1,1,3,6])
**VARIABLES**
DISCRETE aux680 #ElementOne([2, 1, 4, 3, 5, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux680, [2,2,6,6])
**VARIABLES**
DISCRETE aux681 #ElementOne([1, 4, 3, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux681, [1,1,3,6])
**VARIABLES**
DISCRETE aux682 #ElementOne([2, 1, 4, 3, 5, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux682, [2,2,6,6])
**VARIABLES**
DISCRETE aux683 #ElementOne([1, 4, 3, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux683, [1,1,3,6])
**VARIABLES**
DISCRETE aux684 #ElementOne([2, 1, 4, 3, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux684, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux685 #ElementOne([2, 1, 5, 3, 4, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux685, [2,2,6,6])
**VARIABLES**
DISCRETE aux686 #ElementOne([1, 5, 3, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux686, [1,1,3,6])
**VARIABLES**
DISCRETE aux687 #ElementOne([1, 5, 3, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux687, [1,1,3,6])
**VARIABLES**
DISCRETE aux688 #ElementOne([2, 1, 5, 3, 4, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux688, [2,2,6,6])
**VARIABLES**
DISCRETE aux689 #ElementOne([2, 1, 5, 3, 4, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux689, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux690 #ElementOne([2, 1, 5, 3, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux690, [1,2,5,6])
**VARIABLES**
DISCRETE aux691 #ElementOne([1, 5, 3, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux691, [1,1,3,6])
**VARIABLES**
DISCRETE aux692 #ElementOne([2, 1, 5, 3, 4, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux692, [2,2,6,6])
**VARIABLES**
DISCRETE aux693 #ElementOne([1, 5, 3, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux693, [1,1,3,6])
**VARIABLES**
DISCRETE aux694 #ElementOne([2, 1, 5, 3, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux694, [1,2,5,6])
**VARIABLES**
DISCRETE aux695 #ElementOne([1, 5, 3, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux695, [1,1,3,6])
**VARIABLES**
DISCRETE aux696 #ElementOne([2, 1, 5, 3, 4, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux696, [2,2,6,6])
**VARIABLES**
DISCRETE aux697 #ElementOne([2, 1, 4, 5, 3, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux697, [2,2,6,6])
**VARIABLES**
DISCRETE aux698 #ElementOne([1, 4, 5, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux698, [1,1,3,6])
**VARIABLES**
DISCRETE aux699 #ElementOne([1, 4, 5, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux699, [1,1,3,6])
**VARIABLES**
DISCRETE aux700 #ElementOne([2, 1, 4, 5, 3, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux700, [2,2,6,6])
**VARIABLES**
DISCRETE aux701 #ElementOne([2, 1, 4, 5, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux701, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux702 #ElementOne([1, 4, 5, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux702, [1,1,3,6])
**VARIABLES**
DISCRETE aux703 #ElementOne([1, 4, 5, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux703, [1,1,3,6])
**VARIABLES**
DISCRETE aux704 #ElementOne([2, 1, 4, 5, 3, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux704, [2,2,6,6])
**VARIABLES**
DISCRETE aux705 #ElementOne([1, 4, 5, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux705, [1,1,3,6])
**VARIABLES**
DISCRETE aux706 #ElementOne([2, 1, 4, 5, 3, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux706, [2,2,6,6])
**VARIABLES**
DISCRETE aux707 #ElementOne([2, 1, 4, 5, 3, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux707, [2,3,6,6])
**VARIABLES**
DISCRETE aux708 #ElementOne([2, 1, 4, 5, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux708, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux709 #ElementOne([2, 1, 5, 4, 3, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux709, [2,2,6,6])
**VARIABLES**
DISCRETE aux710 #ElementOne([1, 5, 4, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux710, [1,1,3,6])
**VARIABLES**
DISCRETE aux711 #ElementOne([1, 5, 4, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux711, [1,1,3,6])
**VARIABLES**
DISCRETE aux712 #ElementOne([2, 1, 5, 4, 3, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux712, [2,2,6,6])
**VARIABLES**
DISCRETE aux713 #ElementOne([1, 5, 4, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux713, [1,1,3,6])
**VARIABLES**
DISCRETE aux714 #ElementOne([2, 1, 5, 4, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux714, [1,2,5,6])
**VARIABLES**
DISCRETE aux715 #ElementOne([1, 5, 4, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux715, [1,1,3,6])
**VARIABLES**
DISCRETE aux716 #ElementOne([2, 1, 5, 4, 3, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux716, [2,2,6,6])
**VARIABLES**
DISCRETE aux717 #ElementOne([2, 1, 5, 4, 3, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux717, [2,3,6,6])
**VARIABLES**
DISCRETE aux718 #ElementOne([2, 1, 5, 4, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux718, [1,2,5,6])
**VARIABLES**
DISCRETE aux719 #ElementOne([1, 5, 4, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux719, [1,1,3,6])
**VARIABLES**
DISCRETE aux720 #ElementOne([2, 1, 5, 4, 3, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux720, [2,2,6,6])
**VARIABLES**
DISCRETE aux721 #ElementOne([3, 1, 2, 4, 5, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux721, [3,3,6,6])
**VARIABLES**
DISCRETE aux722 #ElementOne([1, 2, 4, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux722, [1,2,4,6])
**VARIABLES**
DISCRETE aux723 #ElementOne([3, 1, 2, 4, 5, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux723, [3,3,6,6])
**VARIABLES**
DISCRETE aux724 #ElementOne([1, 2, 4, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux724, [1,2,4,6])
**VARIABLES**
DISCRETE aux725 #ElementOne([1, 2, 4, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux725, [1,2,4,6])
**VARIABLES**
DISCRETE aux726 #ElementOne([3, 1, 2, 4, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux726, [1,3,6,6])
**VARIABLES**
DISCRETE aux727 #ElementOne([3, 1, 2, 4, 5, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux727, [3,3,6,6])
**VARIABLES**
DISCRETE aux728 #ElementOne([3, 1, 2, 4, 5, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux728, [3,3,5,6])
**VARIABLES**
DISCRETE aux729 #ElementOne([1, 2, 4, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux729, [1,2,4,6])
**VARIABLES**
DISCRETE aux730 #ElementOne([3, 1, 2, 4, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux730, [1,3,6,6])
**VARIABLES**
DISCRETE aux731 #ElementOne([3, 1, 2, 4, 5, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux731, [3,3,6,6])
**VARIABLES**
DISCRETE aux732 #ElementOne([1, 2, 4, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux732, [1,2,4,6])
**VARIABLES**
DISCRETE aux733 #ElementOne([3, 1, 2, 5, 4, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux733, [3,3,6,6])
**VARIABLES**
DISCRETE aux734 #ElementOne([1, 2, 5, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux734, [1,2,4,6])
**VARIABLES**
DISCRETE aux735 #ElementOne([3, 1, 2, 5, 4, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux735, [3,3,6,6])
**VARIABLES**
DISCRETE aux736 #ElementOne([1, 2, 5, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux736, [1,2,4,6])
**VARIABLES**
DISCRETE aux737 #ElementOne([1, 2, 5, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux737, [1,2,4,6])
**VARIABLES**
DISCRETE aux738 #ElementOne([3, 1, 2, 5, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux738, [1,3,6,6])
**VARIABLES**
DISCRETE aux739 #ElementOne([3, 1, 2, 5, 4, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux739, [3,3,6,6])
**VARIABLES**
DISCRETE aux740 #ElementOne([1, 2, 5, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux740, [1,2,4,6])
**VARIABLES**
DISCRETE aux741 #ElementOne([1, 2, 5, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux741, [1,2,4,6])
**VARIABLES**
DISCRETE aux742 #ElementOne([3, 1, 2, 5, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux742, [1,3,6,6])
**VARIABLES**
DISCRETE aux743 #ElementOne([3, 1, 2, 5, 4, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux743, [3,3,6,6])
**VARIABLES**
DISCRETE aux744 #ElementOne([3, 1, 2, 5, 4, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux744, [3,4,6,6])
**VARIABLES**
DISCRETE aux745 #ElementOne([4, 1, 2, 3, 5, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux745, [4,4,6,6])
**VARIABLES**
DISCRETE aux746 #ElementOne([1, 2, 3, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux746, [1,3,5,6])
**VARIABLES**
DISCRETE aux747 #ElementOne([4, 1, 2, 3, 5, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux747, [4,4,6,6])
**VARIABLES**
DISCRETE aux748 #ElementOne([1, 2, 3, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux748, [1,3,5,6])
**VARIABLES**
DISCRETE aux749 #ElementOne([4, 1, 2, 3, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux749, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux750 #ElementOne([4, 1, 2, 3, 5, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux750, [4,4,6,6])
**VARIABLES**
DISCRETE aux751 #ElementOne([4, 1, 2, 3, 5, 6], M_00004_00005)
{4..6}
DISCRETE aux752 #ElementOne([1, 2, 3, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux752, [1,3,5,6])
**VARIABLES**
DISCRETE aux753 #ElementOne([1, 2, 3, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux753, [1,3,5,6])
**VARIABLES**
DISCRETE aux754 #ElementOne([4, 1, 2, 3, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux754, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux755 #ElementOne([1, 2, 3, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux755, [1,3,5,6])
**VARIABLES**
DISCRETE aux756 #ElementOne([4, 1, 2, 3, 5, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux756, [4,4,6,6])
**VARIABLES**
DISCRETE aux757 #ElementOne([5, 1, 2, 3, 4, 6], M_00002_00001)
{5..6}
DISCRETE aux758 #ElementOne([1, 2, 3, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux758, [1,4,6,6])
**VARIABLES**
DISCRETE aux759 #ElementOne([5, 1, 2, 3, 4, 6], M_00003_00001)
{5..6}
DISCRETE aux760 #ElementOne([1, 2, 3, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux760, [1,4,6,6])
**VARIABLES**
DISCRETE aux761 #ElementOne([5, 1, 2, 3, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux761, [1,2,5,6])
**VARIABLES**
DISCRETE aux762 #ElementOne([5, 1, 2, 3, 4, 6], M_00004_00005)
{4..6}
DISCRETE aux763 #ElementOne([5, 1, 2, 3, 4, 6], M_00004_00001)
{5..6}
DISCRETE aux764 #ElementOne([1, 2, 3, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux764, [1,4,6,6])
**VARIABLES**
DISCRETE aux765 #ElementOne([5, 1, 2, 3, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux765, [1,2,5,6])
**VARIABLES**
DISCRETE aux766 #ElementOne([1, 2, 3, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux766, [1,4,6,6])
**VARIABLES**
DISCRETE aux767 #ElementOne([5, 1, 2, 3, 4, 6], M_00005_00001)
{5..6}
DISCRETE aux768 #ElementOne([1, 2, 3, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux768, [1,4,6,6])
**VARIABLES**
DISCRETE aux769 #ElementOne([4, 1, 2, 5, 3, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux769, [4,4,6,6])
**VARIABLES**
DISCRETE aux770 #ElementOne([1, 2, 5, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux770, [1,3,5,6])
**VARIABLES**
DISCRETE aux771 #ElementOne([4, 1, 2, 5, 3, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux771, [4,4,6,6])
**VARIABLES**
DISCRETE aux772 #ElementOne([1, 2, 5, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux772, [1,3,5,6])
**VARIABLES**
DISCRETE aux773 #ElementOne([4, 1, 2, 5, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux773, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux774 #ElementOne([4, 1, 2, 5, 3, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux774, [4,4,6,6])
**VARIABLES**
DISCRETE aux775 #ElementOne([1, 2, 5, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux775, [1,3,5,6])
**VARIABLES**
DISCRETE aux776 #ElementOne([1, 2, 5, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux776, [1,3,5,6])
**VARIABLES**
DISCRETE aux777 #ElementOne([1, 2, 5, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux777, [1,3,5,6])
**VARIABLES**
DISCRETE aux778 #ElementOne([4, 1, 2, 5, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux778, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux779 #ElementOne([4, 1, 2, 5, 3, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux779, [3,4,6,6])
**VARIABLES**
DISCRETE aux780 #ElementOne([4, 1, 2, 5, 3, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux780, [4,4,6,6])
**VARIABLES**
DISCRETE aux781 #ElementOne([5, 1, 2, 4, 3, 6], M_00002_00001)
{5..6}
DISCRETE aux782 #ElementOne([1, 2, 4, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux782, [1,4,6,6])
**VARIABLES**
DISCRETE aux783 #ElementOne([5, 1, 2, 4, 3, 6], M_00003_00001)
{5..6}
DISCRETE aux784 #ElementOne([1, 2, 4, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux784, [1,4,6,6])
**VARIABLES**
DISCRETE aux785 #ElementOne([5, 1, 2, 4, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux785, [1,2,5,6])
**VARIABLES**
DISCRETE aux786 #ElementOne([1, 2, 4, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux786, [1,4,6,6])
**VARIABLES**
DISCRETE aux787 #ElementOne([5, 1, 2, 4, 3, 6], M_00005_00001)
{5..6}
DISCRETE aux788 #ElementOne([1, 2, 4, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux788, [1,4,6,6])
**VARIABLES**
DISCRETE aux789 #ElementOne([5, 1, 2, 4, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux789, [1,2,5,6])
**VARIABLES**
DISCRETE aux790 #ElementOne([5, 1, 2, 4, 3, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux790, [3,3,5,6])
**VARIABLES**
DISCRETE aux791 #ElementOne([5, 1, 2, 4, 3, 6], M_00004_00001)
{5..6}
DISCRETE aux792 #ElementOne([1, 2, 4, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux792, [1,4,6,6])
**VARIABLES**
DISCRETE aux793 #ElementOne([3, 1, 4, 2, 5, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux793, [3,3,6,6])
**VARIABLES**
DISCRETE aux794 #ElementOne([1, 4, 2, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux794, [1,2,4,6])
**VARIABLES**
DISCRETE aux795 #ElementOne([3, 1, 4, 2, 5, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux795, [3,3,6,6])
**VARIABLES**
DISCRETE aux796 #ElementOne([3, 1, 4, 2, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux796, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux797 #ElementOne([3, 1, 4, 2, 5, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux797, [3,3,5,6])
**VARIABLES**
DISCRETE aux798 #ElementOne([1, 4, 2, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux798, [1,2,4,6])
**VARIABLES**
DISCRETE aux799 #ElementOne([1, 4, 2, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux799, [1,2,4,6])
**VARIABLES**
DISCRETE aux800 #ElementOne([3, 1, 4, 2, 5, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux800, [3,3,6,6])
**VARIABLES**
DISCRETE aux801 #ElementOne([1, 4, 2, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux801, [1,2,4,6])
**VARIABLES**
DISCRETE aux802 #ElementOne([1, 4, 2, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux802, [1,2,4,6])
**VARIABLES**
DISCRETE aux803 #ElementOne([3, 1, 4, 2, 5, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux803, [3,3,6,6])
**VARIABLES**
DISCRETE aux804 #ElementOne([3, 1, 4, 2, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux804, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux805 #ElementOne([3, 1, 5, 2, 4, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux805, [3,3,6,6])
**VARIABLES**
DISCRETE aux806 #ElementOne([1, 5, 2, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux806, [1,2,4,6])
**VARIABLES**
DISCRETE aux807 #ElementOne([3, 1, 5, 2, 4, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux807, [3,3,6,6])
**VARIABLES**
DISCRETE aux808 #ElementOne([3, 1, 5, 2, 4, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux808, [3,4,6,6])
**VARIABLES**
DISCRETE aux809 #ElementOne([3, 1, 5, 2, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux809, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux810 #ElementOne([1, 5, 2, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux810, [1,2,4,6])
**VARIABLES**
DISCRETE aux811 #ElementOne([1, 5, 2, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux811, [1,2,4,6])
**VARIABLES**
DISCRETE aux812 #ElementOne([1, 5, 2, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux812, [1,2,4,6])
**VARIABLES**
DISCRETE aux813 #ElementOne([3, 1, 5, 2, 4, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux813, [3,3,6,6])
**VARIABLES**
DISCRETE aux814 #ElementOne([3, 1, 5, 2, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux814, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux815 #ElementOne([1, 5, 2, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux815, [1,2,4,6])
**VARIABLES**
DISCRETE aux816 #ElementOne([3, 1, 5, 2, 4, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux816, [3,3,6,6])
**VARIABLES**
DISCRETE aux817 #ElementOne([4, 1, 3, 2, 5, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux817, [4,4,6,6])
**VARIABLES**
DISCRETE aux818 #ElementOne([1, 3, 2, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux818, [1,3,5,6])
**VARIABLES**
DISCRETE aux819 #ElementOne([4, 1, 3, 2, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux819, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux820 #ElementOne([4, 1, 3, 2, 5, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux820, [4,4,6,6])
**VARIABLES**
DISCRETE aux821 #ElementOne([4, 1, 3, 2, 5, 6], M_00004_00005)
{4..6}
DISCRETE aux822 #ElementOne([1, 3, 2, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux822, [1,3,5,6])
**VARIABLES**
DISCRETE aux823 #ElementOne([4, 1, 3, 2, 5, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux823, [4,4,6,6])
**VARIABLES**
DISCRETE aux824 #ElementOne([1, 3, 2, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux824, [1,3,5,6])
**VARIABLES**
DISCRETE aux825 #ElementOne([1, 3, 2, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux825, [1,3,5,6])
**VARIABLES**
DISCRETE aux826 #ElementOne([1, 3, 2, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux826, [1,3,5,6])
**VARIABLES**
DISCRETE aux827 #ElementOne([4, 1, 3, 2, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux827, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux828 #ElementOne([4, 1, 3, 2, 5, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux828, [4,4,6,6])
**VARIABLES**
DISCRETE aux829 #ElementOne([5, 1, 3, 2, 4, 6], M_00002_00001)
{5..6}
DISCRETE aux830 #ElementOne([1, 3, 2, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux830, [1,4,6,6])
**VARIABLES**
DISCRETE aux831 #ElementOne([5, 1, 3, 2, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux831, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux832 #ElementOne([5, 1, 3, 2, 4, 6], M_00004_00005)
{4..6}
DISCRETE aux833 #ElementOne([5, 1, 3, 2, 4, 6], M_00004_00001)
{5..6}
DISCRETE aux834 #ElementOne([1, 3, 2, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux834, [1,4,6,6])
**VARIABLES**
DISCRETE aux835 #ElementOne([5, 1, 3, 2, 4, 6], M_00003_00001)
{5..6}
DISCRETE aux836 #ElementOne([1, 3, 2, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux836, [1,4,6,6])
**VARIABLES**
DISCRETE aux837 #ElementOne([1, 3, 2, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux837, [1,4,6,6])
**VARIABLES**
DISCRETE aux838 #ElementOne([5, 1, 3, 2, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux838, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux839 #ElementOne([5, 1, 3, 2, 4, 6], M_00005_00001)
{5..6}
DISCRETE aux840 #ElementOne([1, 3, 2, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux840, [1,4,6,6])
**VARIABLES**
DISCRETE aux841 #ElementOne([4, 1, 5, 2, 3, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux841, [4,4,6,6])
**VARIABLES**
DISCRETE aux842 #ElementOne([1, 5, 2, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux842, [1,3,5,6])
**VARIABLES**
DISCRETE aux843 #ElementOne([4, 1, 5, 2, 3, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux843, [3,4,6,6])
**VARIABLES**
DISCRETE aux844 #ElementOne([4, 1, 5, 2, 3, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux844, [4,4,6,6])
**VARIABLES**
DISCRETE aux845 #ElementOne([4, 1, 5, 2, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux845, [1,1,4,6])
**VARIABLES**
DISCRETE aux846 #ElementOne([1, 5, 2, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux846, [1,3,5,6])
**VARIABLES**
DISCRETE aux847 #ElementOne([1, 5, 2, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux847, [1,3,5,6])
**VARIABLES**
DISCRETE aux848 #ElementOne([4, 1, 5, 2, 3, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux848, [4,4,6,6])
**VARIABLES**
DISCRETE aux849 #ElementOne([4, 1, 5, 2, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux849, [1,1,4,6])
**VARIABLES**
DISCRETE aux850 #ElementOne([1, 5, 2, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux850, [1,3,5,6])
**VARIABLES**
DISCRETE aux851 #ElementOne([1, 5, 2, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux851, [1,3,5,6])
**VARIABLES**
DISCRETE aux852 #ElementOne([4, 1, 5, 2, 3, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux852, [4,4,6,6])
**VARIABLES**
DISCRETE aux853 #ElementOne([5, 1, 4, 2, 3, 6], M_00002_00001)
{5..6}
DISCRETE aux854 #ElementOne([1, 4, 2, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux854, [1,4,6,6])
**VARIABLES**
DISCRETE aux855 #ElementOne([5, 1, 4, 2, 3, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux855, [3,3,5,6])
**VARIABLES**
DISCRETE aux856 #ElementOne([5, 1, 4, 2, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux856, [1,1,4,6])
**VARIABLES**
DISCRETE aux857 #ElementOne([5, 1, 4, 2, 3, 6], M_00004_00001)
{5..6}
DISCRETE aux858 #ElementOne([1, 4, 2, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux858, [1,4,6,6])
**VARIABLES**
DISCRETE aux859 #ElementOne([1, 4, 2, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux859, [1,4,6,6])
**VARIABLES**
DISCRETE aux860 #ElementOne([5, 1, 4, 2, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux860, [1,1,4,6])
**VARIABLES**
DISCRETE aux861 #ElementOne([5, 1, 4, 2, 3, 6], M_00005_00001)
{5..6}
DISCRETE aux862 #ElementOne([1, 4, 2, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux862, [1,4,6,6])
**VARIABLES**
DISCRETE aux863 #ElementOne([5, 1, 4, 2, 3, 6], M_00003_00001)
{5..6}
DISCRETE aux864 #ElementOne([1, 4, 2, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux864, [1,4,6,6])
**VARIABLES**
DISCRETE aux865 #ElementOne([3, 1, 4, 5, 2, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux865, [3,3,6,6])
**VARIABLES**
DISCRETE aux866 #ElementOne([1, 4, 5, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux866, [1,2,4,6])
**VARIABLES**
DISCRETE aux867 #ElementOne([3, 1, 4, 5, 2, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux867, [3,3,6,6])
**VARIABLES**
DISCRETE aux868 #ElementOne([3, 1, 4, 5, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux868, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux869 #ElementOne([1, 4, 5, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux869, [1,2,4,6])
**VARIABLES**
DISCRETE aux870 #ElementOne([1, 4, 5, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux870, [1,2,4,6])
**VARIABLES**
DISCRETE aux871 #ElementOne([1, 4, 5, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux871, [1,2,4,6])
**VARIABLES**
DISCRETE aux872 #ElementOne([3, 1, 4, 5, 2, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux872, [3,3,6,6])
**VARIABLES**
DISCRETE aux873 #ElementOne([1, 4, 5, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux873, [1,2,4,6])
**VARIABLES**
DISCRETE aux874 #ElementOne([3, 1, 4, 5, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux874, [2,3,6,6])
**VARIABLES**
DISCRETE aux875 #ElementOne([3, 1, 4, 5, 2, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux875, [3,3,6,6])
**VARIABLES**
DISCRETE aux876 #ElementOne([3, 1, 4, 5, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux876, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux877 #ElementOne([3, 1, 5, 4, 2, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux877, [3,3,6,6])
**VARIABLES**
DISCRETE aux878 #ElementOne([1, 5, 4, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux878, [1,2,4,6])
**VARIABLES**
DISCRETE aux879 #ElementOne([3, 1, 5, 4, 2, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux879, [3,3,6,6])
**VARIABLES**
DISCRETE aux880 #ElementOne([1, 5, 4, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux880, [1,2,4,6])
**VARIABLES**
DISCRETE aux881 #ElementOne([3, 1, 5, 4, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux881, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux882 #ElementOne([1, 5, 4, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux882, [1,2,4,6])
**VARIABLES**
DISCRETE aux883 #ElementOne([1, 5, 4, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux883, [1,2,4,6])
**VARIABLES**
DISCRETE aux884 #ElementOne([3, 1, 5, 4, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux884, [2,3,6,6])
**VARIABLES**
DISCRETE aux885 #ElementOne([3, 1, 5, 4, 2, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux885, [3,3,6,6])
**VARIABLES**
DISCRETE aux886 #ElementOne([3, 1, 5, 4, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux886, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux887 #ElementOne([1, 5, 4, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux887, [1,2,4,6])
**VARIABLES**
DISCRETE aux888 #ElementOne([3, 1, 5, 4, 2, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux888, [3,3,6,6])
**VARIABLES**
DISCRETE aux889 #ElementOne([4, 1, 3, 5, 2, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux889, [4,4,6,6])
**VARIABLES**
DISCRETE aux890 #ElementOne([1, 3, 5, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux890, [1,3,5,6])
**VARIABLES**
DISCRETE aux891 #ElementOne([4, 1, 3, 5, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux891, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux892 #ElementOne([4, 1, 3, 5, 2, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux892, [4,4,6,6])
**VARIABLES**
DISCRETE aux893 #ElementOne([1, 3, 5, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux893, [1,3,5,6])
**VARIABLES**
DISCRETE aux894 #ElementOne([1, 3, 5, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux894, [1,3,5,6])
**VARIABLES**
DISCRETE aux895 #ElementOne([4, 1, 3, 5, 2, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux895, [4,4,6,6])
**VARIABLES**
DISCRETE aux896 #ElementOne([1, 3, 5, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux896, [1,3,5,6])
**VARIABLES**
DISCRETE aux897 #ElementOne([1, 3, 5, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux897, [1,3,5,6])
**VARIABLES**
DISCRETE aux898 #ElementOne([4, 1, 3, 5, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux898, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux899 #ElementOne([4, 1, 3, 5, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux899, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux900 #ElementOne([4, 1, 3, 5, 2, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux900, [4,4,6,6])
**VARIABLES**
DISCRETE aux901 #ElementOne([5, 1, 3, 4, 2, 6], M_00002_00001)
{5..6}
DISCRETE aux902 #ElementOne([1, 3, 4, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux902, [1,4,6,6])
**VARIABLES**
DISCRETE aux903 #ElementOne([5, 1, 3, 4, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux903, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux904 #ElementOne([1, 3, 4, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux904, [1,4,6,6])
**VARIABLES**
DISCRETE aux905 #ElementOne([5, 1, 3, 4, 2, 6], M_00005_00001)
{5..6}
DISCRETE aux906 #ElementOne([1, 3, 4, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux906, [1,4,6,6])
**VARIABLES**
DISCRETE aux907 #ElementOne([5, 1, 3, 4, 2, 6], M_00003_00001)
{5..6}
DISCRETE aux908 #ElementOne([1, 3, 4, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux908, [1,4,6,6])
**VARIABLES**
DISCRETE aux909 #ElementOne([5, 1, 3, 4, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux909, [2,2,5,6])
**VARIABLES**
DISCRETE aux910 #ElementOne([5, 1, 3, 4, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux910, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux911 #ElementOne([5, 1, 3, 4, 2, 6], M_00004_00001)
{5..6}
DISCRETE aux912 #ElementOne([1, 3, 4, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux912, [1,4,6,6])
**VARIABLES**
DISCRETE aux913 #ElementOne([4, 1, 5, 3, 2, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux913, [4,4,6,6])
**VARIABLES**
DISCRETE aux914 #ElementOne([1, 5, 3, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux914, [1,3,5,6])
**VARIABLES**
DISCRETE aux915 #ElementOne([1, 5, 3, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux915, [1,3,5,6])
**VARIABLES**
DISCRETE aux916 #ElementOne([4, 1, 5, 3, 2, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux916, [4,4,6,6])
**VARIABLES**
DISCRETE aux917 #ElementOne([4, 1, 5, 3, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux917, [1,1,4,6])
**VARIABLES**
DISCRETE aux918 #ElementOne([1, 5, 3, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux918, [1,3,5,6])
**VARIABLES**
DISCRETE aux919 #ElementOne([4, 1, 5, 3, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux919, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux920 #ElementOne([4, 1, 5, 3, 2, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux920, [4,4,6,6])
**VARIABLES**
DISCRETE aux921 #ElementOne([4, 1, 5, 3, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux921, [1,1,4,6])
**VARIABLES**
DISCRETE aux922 #ElementOne([1, 5, 3, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux922, [1,3,5,6])
**VARIABLES**
DISCRETE aux923 #ElementOne([1, 5, 3, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux923, [1,3,5,6])
**VARIABLES**
DISCRETE aux924 #ElementOne([4, 1, 5, 3, 2, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux924, [4,4,6,6])
**VARIABLES**
DISCRETE aux925 #ElementOne([5, 1, 4, 3, 2, 6], M_00002_00001)
{5..6}
DISCRETE aux926 #ElementOne([1, 4, 3, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux926, [1,4,6,6])
**VARIABLES**
DISCRETE aux927 #ElementOne([1, 4, 3, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux927, [1,4,6,6])
**VARIABLES**
DISCRETE aux928 #ElementOne([5, 1, 4, 3, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux928, [1,1,4,6])
**VARIABLES**
DISCRETE aux929 #ElementOne([5, 1, 4, 3, 2, 6], M_00005_00001)
{5..6}
DISCRETE aux930 #ElementOne([1, 4, 3, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux930, [1,4,6,6])
**VARIABLES**
DISCRETE aux931 #ElementOne([5, 1, 4, 3, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux931, [2,2,5,6])
**VARIABLES**
DISCRETE aux932 #ElementOne([5, 1, 4, 3, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux932, [1,1,4,6])
**VARIABLES**
DISCRETE aux933 #ElementOne([5, 1, 4, 3, 2, 6], M_00004_00001)
{5..6}
DISCRETE aux934 #ElementOne([1, 4, 3, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux934, [1,4,6,6])
**VARIABLES**
DISCRETE aux935 #ElementOne([5, 1, 4, 3, 2, 6], M_00003_00001)
{5..6}
DISCRETE aux936 #ElementOne([1, 4, 3, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux936, [1,4,6,6])
**VARIABLES**
DISCRETE aux937 #ElementOne([2, 3, 1, 4, 5, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux937, [2,2,6,6])
**VARIABLES**
DISCRETE aux938 #ElementOne([3, 1, 4, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux938, [1,1,3,6])
**VARIABLES**
DISCRETE aux939 #ElementOne([3, 1, 4, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux939, [1,1,3,6])
**VARIABLES**
DISCRETE aux940 #ElementOne([2, 3, 1, 4, 5, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux940, [2,2,6,6])
**VARIABLES**
DISCRETE aux941 #ElementOne([2, 3, 1, 4, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux941, [1,3,6,6])
**VARIABLES**
DISCRETE aux942 #ElementOne([2, 3, 1, 4, 5, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux942, [2,2,6,6])
**VARIABLES**
DISCRETE aux943 #ElementOne([3, 1, 4, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux943, [1,1,3,6])
**VARIABLES**
DISCRETE aux944 #ElementOne([2, 3, 1, 4, 5, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux944, [2,2,5,6])
**VARIABLES**
DISCRETE aux945 #ElementOne([2, 3, 1, 4, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux945, [1,3,6,6])
**VARIABLES**
DISCRETE aux946 #ElementOne([2, 3, 1, 4, 5, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux946, [2,2,6,6])
**VARIABLES**
DISCRETE aux947 #ElementOne([3, 1, 4, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux947, [1,1,3,6])
**VARIABLES**
DISCRETE aux948 #ElementOne([3, 1, 4, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux948, [1,1,3,6])
**VARIABLES**
DISCRETE aux949 #ElementOne([2, 3, 1, 5, 4, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux949, [2,2,6,6])
**VARIABLES**
DISCRETE aux950 #ElementOne([3, 1, 5, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux950, [1,1,3,6])
**VARIABLES**
DISCRETE aux951 #ElementOne([3, 1, 5, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux951, [1,1,3,6])
**VARIABLES**
DISCRETE aux952 #ElementOne([2, 3, 1, 5, 4, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux952, [2,2,6,6])
**VARIABLES**
DISCRETE aux953 #ElementOne([2, 3, 1, 5, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux953, [1,3,6,6])
**VARIABLES**
DISCRETE aux954 #ElementOne([2, 3, 1, 5, 4, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux954, [2,2,6,6])
**VARIABLES**
DISCRETE aux955 #ElementOne([3, 1, 5, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux955, [1,1,3,6])
**VARIABLES**
DISCRETE aux956 #ElementOne([3, 1, 5, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux956, [1,1,3,6])
**VARIABLES**
DISCRETE aux957 #ElementOne([2, 3, 1, 5, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux957, [1,3,6,6])
**VARIABLES**
DISCRETE aux958 #ElementOne([2, 3, 1, 5, 4, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux958, [2,2,6,6])
**VARIABLES**
DISCRETE aux959 #ElementOne([3, 1, 5, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux959, [1,1,3,6])
**VARIABLES**
DISCRETE aux960 #ElementOne([2, 3, 1, 5, 4, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux960, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux961 #ElementOne([2, 4, 1, 3, 5, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux961, [2,2,6,6])
**VARIABLES**
DISCRETE aux962 #ElementOne([4, 1, 3, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux962, [1,1,3,6])
**VARIABLES**
DISCRETE aux963 #ElementOne([4, 1, 3, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux963, [1,1,3,6])
**VARIABLES**
DISCRETE aux964 #ElementOne([2, 4, 1, 3, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux964, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux965 #ElementOne([2, 4, 1, 3, 5, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux965, [2,2,6,6])
**VARIABLES**
DISCRETE aux966 #ElementOne([4, 1, 3, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux966, [1,1,3,6])
**VARIABLES**
DISCRETE aux967 #ElementOne([2, 4, 1, 3, 5, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux967, [2,2,5,6])
**VARIABLES**
DISCRETE aux968 #ElementOne([2, 4, 1, 3, 5, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux968, [2,2,6,6])
**VARIABLES**
DISCRETE aux969 #ElementOne([2, 4, 1, 3, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux969, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux970 #ElementOne([2, 4, 1, 3, 5, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux970, [2,2,6,6])
**VARIABLES**
DISCRETE aux971 #ElementOne([4, 1, 3, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux971, [1,1,3,6])
**VARIABLES**
DISCRETE aux972 #ElementOne([4, 1, 3, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux972, [1,1,3,6])
**VARIABLES**
DISCRETE aux973 #ElementOne([2, 5, 1, 3, 4, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux973, [2,2,6,6])
**VARIABLES**
DISCRETE aux974 #ElementOne([5, 1, 3, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux974, [1,1,3,6])
**VARIABLES**
DISCRETE aux975 #ElementOne([5, 1, 3, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux975, [1,1,3,6])
**VARIABLES**
DISCRETE aux976 #ElementOne([2, 5, 1, 3, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux976, [1,2,5,6])
**VARIABLES**
DISCRETE aux977 #ElementOne([2, 5, 1, 3, 4, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux977, [2,2,6,6])
**VARIABLES**
DISCRETE aux978 #ElementOne([2, 5, 1, 3, 4, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux978, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux979 #ElementOne([5, 1, 3, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux979, [1,1,3,6])
**VARIABLES**
DISCRETE aux980 #ElementOne([2, 5, 1, 3, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux980, [1,2,5,6])
**VARIABLES**
DISCRETE aux981 #ElementOne([2, 5, 1, 3, 4, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux981, [2,2,6,6])
**VARIABLES**
DISCRETE aux982 #ElementOne([5, 1, 3, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux982, [1,1,3,6])
**VARIABLES**
DISCRETE aux983 #ElementOne([5, 1, 3, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux983, [1,1,3,6])
**VARIABLES**
DISCRETE aux984 #ElementOne([2, 5, 1, 3, 4, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux984, [2,2,6,6])
**VARIABLES**
DISCRETE aux985 #ElementOne([2, 4, 1, 5, 3, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux985, [2,2,6,6])
**VARIABLES**
DISCRETE aux986 #ElementOne([4, 1, 5, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux986, [1,1,3,6])
**VARIABLES**
DISCRETE aux987 #ElementOne([4, 1, 5, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux987, [1,1,3,6])
**VARIABLES**
DISCRETE aux988 #ElementOne([2, 4, 1, 5, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux988, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux989 #ElementOne([2, 4, 1, 5, 3, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux989, [2,2,6,6])
**VARIABLES**
DISCRETE aux990 #ElementOne([4, 1, 5, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux990, [1,1,3,6])
**VARIABLES**
DISCRETE aux991 #ElementOne([4, 1, 5, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux991, [1,1,3,6])
**VARIABLES**
DISCRETE aux992 #ElementOne([2, 4, 1, 5, 3, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux992, [2,2,6,6])
**VARIABLES**
DISCRETE aux993 #ElementOne([2, 4, 1, 5, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux993, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux994 #ElementOne([2, 4, 1, 5, 3, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux994, [2,2,6,6])
**VARIABLES**
DISCRETE aux995 #ElementOne([2, 4, 1, 5, 3, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux995, [2,3,6,6])
**VARIABLES**
DISCRETE aux996 #ElementOne([4, 1, 5, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux996, [1,1,3,6])
**VARIABLES**
DISCRETE aux997 #ElementOne([2, 5, 1, 4, 3, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux997, [2,2,6,6])
**VARIABLES**
DISCRETE aux998 #ElementOne([5, 1, 4, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux998, [1,1,3,6])
**VARIABLES**
DISCRETE aux999 #ElementOne([5, 1, 4, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux999, [1,1,3,6])
**VARIABLES**
DISCRETE aux1000 #ElementOne([2, 5, 1, 4, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1000, [1,2,5,6])
**VARIABLES**
DISCRETE aux1001 #ElementOne([2, 5, 1, 4, 3, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1001, [2,2,6,6])
**VARIABLES**
DISCRETE aux1002 #ElementOne([5, 1, 4, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1002, [1,1,3,6])
**VARIABLES**
DISCRETE aux1003 #ElementOne([5, 1, 4, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1003, [1,1,3,6])
**VARIABLES**
DISCRETE aux1004 #ElementOne([2, 5, 1, 4, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1004, [1,2,5,6])
**VARIABLES**
DISCRETE aux1005 #ElementOne([2, 5, 1, 4, 3, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1005, [2,2,6,6])
**VARIABLES**
DISCRETE aux1006 #ElementOne([2, 5, 1, 4, 3, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1006, [2,3,6,6])
**VARIABLES**
DISCRETE aux1007 #ElementOne([5, 1, 4, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1007, [1,1,3,6])
**VARIABLES**
DISCRETE aux1008 #ElementOne([2, 5, 1, 4, 3, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1008, [2,2,6,6])
**VARIABLES**
DISCRETE aux1009 #ElementOne([2, 1, 4, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1009, [1,2,4,6])
**VARIABLES**
DISCRETE aux1010 #ElementOne([3, 2, 1, 4, 5, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1010, [3,3,6,6])
**VARIABLES**
DISCRETE aux1011 #ElementOne([3, 2, 1, 4, 5, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1011, [3,3,6,6])
**VARIABLES**
DISCRETE aux1012 #ElementOne([2, 1, 4, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1012, [1,2,4,6])
**VARIABLES**
DISCRETE aux1013 #ElementOne([3, 2, 1, 4, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1013, [1,3,6,6])
**VARIABLES**
DISCRETE aux1014 #ElementOne([2, 1, 4, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1014, [1,2,4,6])
**VARIABLES**
DISCRETE aux1015 #ElementOne([3, 2, 1, 4, 5, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1015, [3,3,6,6])
**VARIABLES**
DISCRETE aux1016 #ElementOne([3, 2, 1, 4, 5, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1016, [3,3,5,6])
**VARIABLES**
DISCRETE aux1017 #ElementOne([3, 2, 1, 4, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1017, [1,3,6,6])
**VARIABLES**
DISCRETE aux1018 #ElementOne([2, 1, 4, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1018, [1,2,4,6])
**VARIABLES**
DISCRETE aux1019 #ElementOne([3, 2, 1, 4, 5, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1019, [3,3,6,6])
**VARIABLES**
DISCRETE aux1020 #ElementOne([2, 1, 4, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1020, [1,2,4,6])
**VARIABLES**
DISCRETE aux1021 #ElementOne([2, 1, 5, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1021, [1,2,4,6])
**VARIABLES**
DISCRETE aux1022 #ElementOne([3, 2, 1, 5, 4, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1022, [3,3,6,6])
**VARIABLES**
DISCRETE aux1023 #ElementOne([3, 2, 1, 5, 4, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1023, [3,3,6,6])
**VARIABLES**
DISCRETE aux1024 #ElementOne([2, 1, 5, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1024, [1,2,4,6])
**VARIABLES**
DISCRETE aux1025 #ElementOne([3, 2, 1, 5, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1025, [1,3,6,6])
**VARIABLES**
DISCRETE aux1026 #ElementOne([2, 1, 5, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1026, [1,2,4,6])
**VARIABLES**
DISCRETE aux1027 #ElementOne([3, 2, 1, 5, 4, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1027, [3,3,6,6])
**VARIABLES**
DISCRETE aux1028 #ElementOne([2, 1, 5, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1028, [1,2,4,6])
**VARIABLES**
DISCRETE aux1029 #ElementOne([3, 2, 1, 5, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1029, [1,3,6,6])
**VARIABLES**
DISCRETE aux1030 #ElementOne([2, 1, 5, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1030, [1,2,4,6])
**VARIABLES**
DISCRETE aux1031 #ElementOne([3, 2, 1, 5, 4, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1031, [3,3,6,6])
**VARIABLES**
DISCRETE aux1032 #ElementOne([3, 2, 1, 5, 4, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1032, [3,4,6,6])
**VARIABLES**
DISCRETE aux1033 #ElementOne([2, 1, 3, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1033, [1,3,5,6])
**VARIABLES**
DISCRETE aux1034 #ElementOne([4, 2, 1, 3, 5, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1034, [4,4,6,6])
**VARIABLES**
DISCRETE aux1035 #ElementOne([4, 2, 1, 3, 5, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1035, [4,4,6,6])
**VARIABLES**
DISCRETE aux1036 #ElementOne([4, 2, 1, 3, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1036, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux1037 #ElementOne([2, 1, 3, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1037, [1,3,5,6])
**VARIABLES**
DISCRETE aux1038 #ElementOne([4, 2, 1, 3, 5, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1038, [4,4,6,6])
**VARIABLES**
DISCRETE aux1039 #ElementOne([4, 2, 1, 3, 5, 6], M_00004_00005)
{4..6}
DISCRETE aux1040 #ElementOne([2, 1, 3, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1040, [1,3,5,6])
**VARIABLES**
DISCRETE aux1041 #ElementOne([4, 2, 1, 3, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1041, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux1042 #ElementOne([2, 1, 3, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1042, [1,3,5,6])
**VARIABLES**
DISCRETE aux1043 #ElementOne([2, 1, 3, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1043, [1,3,5,6])
**VARIABLES**
DISCRETE aux1044 #ElementOne([4, 2, 1, 3, 5, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1044, [4,4,6,6])
**VARIABLES**
DISCRETE aux1045 #ElementOne([2, 1, 3, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1045, [1,4,6,6])
**VARIABLES**
DISCRETE aux1046 #ElementOne([5, 2, 1, 3, 4, 6], M_00003_00001)
{5..6}
DISCRETE aux1047 #ElementOne([5, 2, 1, 3, 4, 6], M_00002_00001)
{5..6}
DISCRETE aux1048 #ElementOne([5, 2, 1, 3, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1048, [1,2,5,6])
**VARIABLES**
DISCRETE aux1049 #ElementOne([2, 1, 3, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1049, [1,4,6,6])
**VARIABLES**
DISCRETE aux1050 #ElementOne([5, 2, 1, 3, 4, 6], M_00004_00005)
{4..6}
DISCRETE aux1051 #ElementOne([5, 2, 1, 3, 4, 6], M_00004_00001)
{5..6}
DISCRETE aux1052 #ElementOne([5, 2, 1, 3, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1052, [1,2,5,6])
**VARIABLES**
DISCRETE aux1053 #ElementOne([2, 1, 3, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1053, [1,4,6,6])
**VARIABLES**
DISCRETE aux1054 #ElementOne([2, 1, 3, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1054, [1,4,6,6])
**VARIABLES**
DISCRETE aux1055 #ElementOne([5, 2, 1, 3, 4, 6], M_00005_00001)
{5..6}
DISCRETE aux1056 #ElementOne([2, 1, 3, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1056, [1,4,6,6])
**VARIABLES**
DISCRETE aux1057 #ElementOne([2, 1, 5, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1057, [1,3,5,6])
**VARIABLES**
DISCRETE aux1058 #ElementOne([4, 2, 1, 5, 3, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1058, [4,4,6,6])
**VARIABLES**
DISCRETE aux1059 #ElementOne([4, 2, 1, 5, 3, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1059, [4,4,6,6])
**VARIABLES**
DISCRETE aux1060 #ElementOne([4, 2, 1, 5, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1060, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux1061 #ElementOne([2, 1, 5, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1061, [1,3,5,6])
**VARIABLES**
DISCRETE aux1062 #ElementOne([4, 2, 1, 5, 3, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1062, [4,4,6,6])
**VARIABLES**
DISCRETE aux1063 #ElementOne([2, 1, 5, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1063, [1,3,5,6])
**VARIABLES**
DISCRETE aux1064 #ElementOne([2, 1, 5, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1064, [1,3,5,6])
**VARIABLES**
DISCRETE aux1065 #ElementOne([4, 2, 1, 5, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1065, [1,2,4,4,6,6])
**VARIABLES**
DISCRETE aux1066 #ElementOne([2, 1, 5, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1066, [1,3,5,6])
**VARIABLES**
DISCRETE aux1067 #ElementOne([4, 2, 1, 5, 3, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1067, [3,4,6,6])
**VARIABLES**
DISCRETE aux1068 #ElementOne([4, 2, 1, 5, 3, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1068, [4,4,6,6])
**VARIABLES**
DISCRETE aux1069 #ElementOne([2, 1, 4, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1069, [1,4,6,6])
**VARIABLES**
DISCRETE aux1070 #ElementOne([5, 2, 1, 4, 3, 6], M_00003_00001)
{5..6}
DISCRETE aux1071 #ElementOne([5, 2, 1, 4, 3, 6], M_00002_00001)
{5..6}
DISCRETE aux1072 #ElementOne([5, 2, 1, 4, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1072, [1,2,5,6])
**VARIABLES**
DISCRETE aux1073 #ElementOne([2, 1, 4, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1073, [1,4,6,6])
**VARIABLES**
DISCRETE aux1074 #ElementOne([2, 1, 4, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1074, [1,4,6,6])
**VARIABLES**
DISCRETE aux1075 #ElementOne([5, 2, 1, 4, 3, 6], M_00005_00001)
{5..6}
DISCRETE aux1076 #ElementOne([5, 2, 1, 4, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1076, [1,2,5,6])
**VARIABLES**
DISCRETE aux1077 #ElementOne([2, 1, 4, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1077, [1,4,6,6])
**VARIABLES**
DISCRETE aux1078 #ElementOne([5, 2, 1, 4, 3, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1078, [3,3,5,6])
**VARIABLES**
DISCRETE aux1079 #ElementOne([5, 2, 1, 4, 3, 6], M_00004_00001)
{5..6}
DISCRETE aux1080 #ElementOne([2, 1, 4, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1080, [1,4,6,6])
**VARIABLES**
DISCRETE aux1081 #ElementOne([3, 4, 1, 2, 5, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1081, [3,3,6,6])
**VARIABLES**
DISCRETE aux1082 #ElementOne([4, 1, 2, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1082, [1,2,4,6])
**VARIABLES**
DISCRETE aux1083 #ElementOne([3, 4, 1, 2, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1083, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux1084 #ElementOne([3, 4, 1, 2, 5, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1084, [3,3,6,6])
**VARIABLES**
DISCRETE aux1085 #ElementOne([4, 1, 2, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1085, [1,2,4,6])
**VARIABLES**
DISCRETE aux1086 #ElementOne([3, 4, 1, 2, 5, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1086, [3,3,5,6])
**VARIABLES**
DISCRETE aux1087 #ElementOne([4, 1, 2, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1087, [1,2,4,6])
**VARIABLES**
DISCRETE aux1088 #ElementOne([3, 4, 1, 2, 5, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1088, [3,3,6,6])
**VARIABLES**
DISCRETE aux1089 #ElementOne([3, 4, 1, 2, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1089, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux1090 #ElementOne([4, 1, 2, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1090, [1,2,4,6])
**VARIABLES**
DISCRETE aux1091 #ElementOne([3, 4, 1, 2, 5, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1091, [3,3,6,6])
**VARIABLES**
DISCRETE aux1092 #ElementOne([4, 1, 2, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1092, [1,2,4,6])
**VARIABLES**
DISCRETE aux1093 #ElementOne([3, 5, 1, 2, 4, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1093, [3,3,6,6])
**VARIABLES**
DISCRETE aux1094 #ElementOne([5, 1, 2, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1094, [1,2,4,6])
**VARIABLES**
DISCRETE aux1095 #ElementOne([3, 5, 1, 2, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1095, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux1096 #ElementOne([3, 5, 1, 2, 4, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1096, [3,3,6,6])
**VARIABLES**
DISCRETE aux1097 #ElementOne([3, 5, 1, 2, 4, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1097, [3,4,6,6])
**VARIABLES**
DISCRETE aux1098 #ElementOne([5, 1, 2, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1098, [1,2,4,6])
**VARIABLES**
DISCRETE aux1099 #ElementOne([5, 1, 2, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1099, [1,2,4,6])
**VARIABLES**
DISCRETE aux1100 #ElementOne([3, 5, 1, 2, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1100, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux1101 #ElementOne([5, 1, 2, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1101, [1,2,4,6])
**VARIABLES**
DISCRETE aux1102 #ElementOne([3, 5, 1, 2, 4, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1102, [3,3,6,6])
**VARIABLES**
DISCRETE aux1103 #ElementOne([5, 1, 2, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1103, [1,2,4,6])
**VARIABLES**
DISCRETE aux1104 #ElementOne([3, 5, 1, 2, 4, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1104, [3,3,6,6])
**VARIABLES**
DISCRETE aux1105 #ElementOne([3, 1, 2, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1105, [1,3,5,6])
**VARIABLES**
DISCRETE aux1106 #ElementOne([4, 3, 1, 2, 5, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1106, [4,4,6,6])
**VARIABLES**
DISCRETE aux1107 #ElementOne([4, 3, 1, 2, 5, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1107, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux1108 #ElementOne([3, 1, 2, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1108, [1,3,5,6])
**VARIABLES**
DISCRETE aux1109 #ElementOne([4, 3, 1, 2, 5, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1109, [4,4,6,6])
**VARIABLES**
DISCRETE aux1110 #ElementOne([4, 3, 1, 2, 5, 6], M_00004_00005)
{4..6}
DISCRETE aux1111 #ElementOne([4, 3, 1, 2, 5, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1111, [4,4,6,6])
**VARIABLES**
DISCRETE aux1112 #ElementOne([3, 1, 2, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1112, [1,3,5,6])
**VARIABLES**
DISCRETE aux1113 #ElementOne([4, 3, 1, 2, 5, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1113, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux1114 #ElementOne([3, 1, 2, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1114, [1,3,5,6])
**VARIABLES**
DISCRETE aux1115 #ElementOne([3, 1, 2, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1115, [1,3,5,6])
**VARIABLES**
DISCRETE aux1116 #ElementOne([4, 3, 1, 2, 5, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1116, [4,4,6,6])
**VARIABLES**
DISCRETE aux1117 #ElementOne([3, 1, 2, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1117, [1,4,6,6])
**VARIABLES**
DISCRETE aux1118 #ElementOne([5, 3, 1, 2, 4, 6], M_00003_00001)
{5..6}
DISCRETE aux1119 #ElementOne([5, 3, 1, 2, 4, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1119, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux1120 #ElementOne([3, 1, 2, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1120, [1,4,6,6])
**VARIABLES**
DISCRETE aux1121 #ElementOne([5, 3, 1, 2, 4, 6], M_00004_00005)
{4..6}
DISCRETE aux1122 #ElementOne([5, 3, 1, 2, 4, 6], M_00004_00001)
{5..6}
DISCRETE aux1123 #ElementOne([5, 3, 1, 2, 4, 6], M_00002_00001)
{5..6}
DISCRETE aux1124 #ElementOne([5, 3, 1, 2, 4, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1124, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux1125 #ElementOne([3, 1, 2, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1125, [1,4,6,6])
**VARIABLES**
DISCRETE aux1126 #ElementOne([3, 1, 2, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1126, [1,4,6,6])
**VARIABLES**
DISCRETE aux1127 #ElementOne([5, 3, 1, 2, 4, 6], M_00005_00001)
{5..6}
DISCRETE aux1128 #ElementOne([3, 1, 2, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1128, [1,4,6,6])
**VARIABLES**
DISCRETE aux1129 #ElementOne([4, 5, 1, 2, 3, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1129, [4,4,6,6])
**VARIABLES**
DISCRETE aux1130 #ElementOne([5, 1, 2, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1130, [1,3,5,6])
**VARIABLES**
DISCRETE aux1131 #ElementOne([4, 5, 1, 2, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1131, [1,1,4,6])
**VARIABLES**
DISCRETE aux1132 #ElementOne([4, 5, 1, 2, 3, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1132, [3,4,6,6])
**VARIABLES**
DISCRETE aux1133 #ElementOne([4, 5, 1, 2, 3, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1133, [4,4,6,6])
**VARIABLES**
DISCRETE aux1134 #ElementOne([5, 1, 2, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1134, [1,3,5,6])
**VARIABLES**
DISCRETE aux1135 #ElementOne([4, 5, 1, 2, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1135, [1,1,4,6])
**VARIABLES**
DISCRETE aux1136 #ElementOne([5, 1, 2, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1136, [1,3,5,6])
**VARIABLES**
DISCRETE aux1137 #ElementOne([4, 5, 1, 2, 3, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1137, [4,4,6,6])
**VARIABLES**
DISCRETE aux1138 #ElementOne([5, 1, 2, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1138, [1,3,5,6])
**VARIABLES**
DISCRETE aux1139 #ElementOne([5, 1, 2, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1139, [1,3,5,6])
**VARIABLES**
DISCRETE aux1140 #ElementOne([4, 5, 1, 2, 3, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1140, [4,4,6,6])
**VARIABLES**
DISCRETE aux1141 #ElementOne([4, 1, 2, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1141, [1,4,6,6])
**VARIABLES**
DISCRETE aux1142 #ElementOne([5, 4, 1, 2, 3, 6], M_00003_00001)
{5..6}
DISCRETE aux1143 #ElementOne([5, 4, 1, 2, 3, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1143, [1,1,4,6])
**VARIABLES**
DISCRETE aux1144 #ElementOne([5, 4, 1, 2, 3, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1144, [3,3,5,6])
**VARIABLES**
DISCRETE aux1145 #ElementOne([4, 1, 2, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1145, [1,4,6,6])
**VARIABLES**
DISCRETE aux1146 #ElementOne([5, 4, 1, 2, 3, 6], M_00004_00001)
{5..6}
DISCRETE aux1147 #ElementOne([5, 4, 1, 2, 3, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1147, [1,1,4,6])
**VARIABLES**
DISCRETE aux1148 #ElementOne([4, 1, 2, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1148, [1,4,6,6])
**VARIABLES**
DISCRETE aux1149 #ElementOne([4, 1, 2, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1149, [1,4,6,6])
**VARIABLES**
DISCRETE aux1150 #ElementOne([5, 4, 1, 2, 3, 6], M_00005_00001)
{5..6}
DISCRETE aux1151 #ElementOne([5, 4, 1, 2, 3, 6], M_00002_00001)
{5..6}
DISCRETE aux1152 #ElementOne([4, 1, 2, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1152, [1,4,6,6])
**VARIABLES**
DISCRETE aux1153 #ElementOne([3, 4, 1, 5, 2, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1153, [3,3,6,6])
**VARIABLES**
DISCRETE aux1154 #ElementOne([4, 1, 5, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1154, [1,2,4,6])
**VARIABLES**
DISCRETE aux1155 #ElementOne([3, 4, 1, 5, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1155, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux1156 #ElementOne([3, 4, 1, 5, 2, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1156, [3,3,6,6])
**VARIABLES**
DISCRETE aux1157 #ElementOne([4, 1, 5, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1157, [1,2,4,6])
**VARIABLES**
DISCRETE aux1158 #ElementOne([4, 1, 5, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1158, [1,2,4,6])
**VARIABLES**
DISCRETE aux1159 #ElementOne([4, 1, 5, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1159, [1,2,4,6])
**VARIABLES**
DISCRETE aux1160 #ElementOne([3, 4, 1, 5, 2, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1160, [3,3,6,6])
**VARIABLES**
DISCRETE aux1161 #ElementOne([3, 4, 1, 5, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1161, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux1162 #ElementOne([3, 4, 1, 5, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1162, [2,3,6,6])
**VARIABLES**
DISCRETE aux1163 #ElementOne([3, 4, 1, 5, 2, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1163, [3,3,6,6])
**VARIABLES**
DISCRETE aux1164 #ElementOne([4, 1, 5, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1164, [1,2,4,6])
**VARIABLES**
DISCRETE aux1165 #ElementOne([3, 5, 1, 4, 2, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1165, [3,3,6,6])
**VARIABLES**
DISCRETE aux1166 #ElementOne([5, 1, 4, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1166, [1,2,4,6])
**VARIABLES**
DISCRETE aux1167 #ElementOne([3, 5, 1, 4, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1167, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux1168 #ElementOne([3, 5, 1, 4, 2, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1168, [3,3,6,6])
**VARIABLES**
DISCRETE aux1169 #ElementOne([5, 1, 4, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1169, [1,2,4,6])
**VARIABLES**
DISCRETE aux1170 #ElementOne([5, 1, 4, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1170, [1,2,4,6])
**VARIABLES**
DISCRETE aux1171 #ElementOne([5, 1, 4, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1171, [1,2,4,6])
**VARIABLES**
DISCRETE aux1172 #ElementOne([3, 5, 1, 4, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1172, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux1173 #ElementOne([3, 5, 1, 4, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1173, [2,3,6,6])
**VARIABLES**
DISCRETE aux1174 #ElementOne([3, 5, 1, 4, 2, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1174, [3,3,6,6])
**VARIABLES**
DISCRETE aux1175 #ElementOne([5, 1, 4, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1175, [1,2,4,6])
**VARIABLES**
DISCRETE aux1176 #ElementOne([3, 5, 1, 4, 2, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1176, [3,3,6,6])
**VARIABLES**
DISCRETE aux1177 #ElementOne([3, 1, 5, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1177, [1,3,5,6])
**VARIABLES**
DISCRETE aux1178 #ElementOne([4, 3, 1, 5, 2, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1178, [4,4,6,6])
**VARIABLES**
DISCRETE aux1179 #ElementOne([4, 3, 1, 5, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1179, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux1180 #ElementOne([3, 1, 5, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1180, [1,3,5,6])
**VARIABLES**
DISCRETE aux1181 #ElementOne([4, 3, 1, 5, 2, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1181, [4,4,6,6])
**VARIABLES**
DISCRETE aux1182 #ElementOne([3, 1, 5, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1182, [1,3,5,6])
**VARIABLES**
DISCRETE aux1183 #ElementOne([4, 3, 1, 5, 2, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1183, [4,4,6,6])
**VARIABLES**
DISCRETE aux1184 #ElementOne([3, 1, 5, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1184, [1,3,5,6])
**VARIABLES**
DISCRETE aux1185 #ElementOne([4, 3, 1, 5, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1185, [1,1,3,4,6,6])
**VARIABLES**
DISCRETE aux1186 #ElementOne([4, 3, 1, 5, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1186, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux1187 #ElementOne([3, 1, 5, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1187, [1,3,5,6])
**VARIABLES**
DISCRETE aux1188 #ElementOne([4, 3, 1, 5, 2, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1188, [4,4,6,6])
**VARIABLES**
DISCRETE aux1189 #ElementOne([3, 1, 4, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1189, [1,4,6,6])
**VARIABLES**
DISCRETE aux1190 #ElementOne([5, 3, 1, 4, 2, 6], M_00003_00001)
{5..6}
DISCRETE aux1191 #ElementOne([5, 3, 1, 4, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1191, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux1192 #ElementOne([3, 1, 4, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1192, [1,4,6,6])
**VARIABLES**
DISCRETE aux1193 #ElementOne([3, 1, 4, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1193, [1,4,6,6])
**VARIABLES**
DISCRETE aux1194 #ElementOne([5, 3, 1, 4, 2, 6], M_00005_00001)
{5..6}
DISCRETE aux1195 #ElementOne([5, 3, 1, 4, 2, 6], M_00002_00001)
{5..6}
DISCRETE aux1196 #ElementOne([5, 3, 1, 4, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1196, [1,1,3,3,5,6])
**VARIABLES**
DISCRETE aux1197 #ElementOne([5, 3, 1, 4, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1197, [2,2,5,6])
**VARIABLES**
DISCRETE aux1198 #ElementOne([3, 1, 4, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1198, [1,4,6,6])
**VARIABLES**
DISCRETE aux1199 #ElementOne([5, 3, 1, 4, 2, 6], M_00004_00001)
{5..6}
DISCRETE aux1200 #ElementOne([3, 1, 4, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1200, [1,4,6,6])
**VARIABLES**
DISCRETE aux1201 #ElementOne([4, 5, 1, 3, 2, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1201, [4,4,6,6])
**VARIABLES**
DISCRETE aux1202 #ElementOne([5, 1, 3, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1202, [1,3,5,6])
**VARIABLES**
DISCRETE aux1203 #ElementOne([4, 5, 1, 3, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1203, [1,1,4,6])
**VARIABLES**
DISCRETE aux1204 #ElementOne([5, 1, 3, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1204, [1,3,5,6])
**VARIABLES**
DISCRETE aux1205 #ElementOne([4, 5, 1, 3, 2, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1205, [4,4,6,6])
**VARIABLES**
DISCRETE aux1206 #ElementOne([5, 1, 3, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1206, [1,3,5,6])
**VARIABLES**
DISCRETE aux1207 #ElementOne([4, 5, 1, 3, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1207, [1,1,4,6])
**VARIABLES**
DISCRETE aux1208 #ElementOne([4, 5, 1, 3, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1208, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux1209 #ElementOne([4, 5, 1, 3, 2, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1209, [4,4,6,6])
**VARIABLES**
DISCRETE aux1210 #ElementOne([5, 1, 3, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1210, [1,3,5,6])
**VARIABLES**
DISCRETE aux1211 #ElementOne([5, 1, 3, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1211, [1,3,5,6])
**VARIABLES**
DISCRETE aux1212 #ElementOne([4, 5, 1, 3, 2, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1212, [4,4,6,6])
**VARIABLES**
DISCRETE aux1213 #ElementOne([4, 1, 3, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1213, [1,4,6,6])
**VARIABLES**
DISCRETE aux1214 #ElementOne([5, 4, 1, 3, 2, 6], M_00003_00001)
{5..6}
DISCRETE aux1215 #ElementOne([5, 4, 1, 3, 2, 6], M_00005_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1215, [1,1,4,6])
**VARIABLES**
DISCRETE aux1216 #ElementOne([4, 1, 3, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1216, [1,4,6,6])
**VARIABLES**
DISCRETE aux1217 #ElementOne([4, 1, 3, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1217, [1,4,6,6])
**VARIABLES**
DISCRETE aux1218 #ElementOne([5, 4, 1, 3, 2, 6], M_00005_00001)
{5..6}
DISCRETE aux1219 #ElementOne([5, 4, 1, 3, 2, 6], M_00004_00003)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1219, [1,1,4,6])
**VARIABLES**
DISCRETE aux1220 #ElementOne([5, 4, 1, 3, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1220, [2,2,5,6])
**VARIABLES**
DISCRETE aux1221 #ElementOne([4, 1, 3, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1221, [1,4,6,6])
**VARIABLES**
DISCRETE aux1222 #ElementOne([5, 4, 1, 3, 2, 6], M_00004_00001)
{5..6}
DISCRETE aux1223 #ElementOne([5, 4, 1, 3, 2, 6], M_00002_00001)
{5..6}
DISCRETE aux1224 #ElementOne([4, 1, 3, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1224, [1,4,6,6])
**VARIABLES**
DISCRETE aux1225 #ElementOne([2, 3, 4, 1, 5, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1225, [2,2,6,6])
**VARIABLES**
DISCRETE aux1226 #ElementOne([3, 4, 1, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1226, [1,1,3,6])
**VARIABLES**
DISCRETE aux1227 #ElementOne([2, 3, 4, 1, 5, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1227, [2,4,6,6])
**VARIABLES**
DISCRETE aux1228 #ElementOne([2, 3, 4, 1, 5, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1228, [2,2,5,6])
**VARIABLES**
DISCRETE aux1229 #ElementOne([3, 4, 1, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1229, [1,1,3,6])
**VARIABLES**
DISCRETE aux1230 #ElementOne([2, 3, 4, 1, 5, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1230, [2,2,6,6])
**VARIABLES**
DISCRETE aux1231 #ElementOne([2, 3, 4, 1, 5, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1231, [2,2,6,6])
**VARIABLES**
DISCRETE aux1232 #ElementOne([3, 4, 1, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1232, [1,1,3,6])
**VARIABLES**
DISCRETE aux1233 #ElementOne([3, 4, 1, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1233, [1,1,3,6])
**VARIABLES**
DISCRETE aux1234 #ElementOne([2, 3, 4, 1, 5, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1234, [2,2,6,6])
**VARIABLES**
DISCRETE aux1235 #ElementOne([3, 4, 1, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1235, [1,1,3,6])
**VARIABLES**
DISCRETE aux1236 #ElementOne([2, 3, 4, 1, 5, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1236, [2,4,6,6])
**VARIABLES**
DISCRETE aux1237 #ElementOne([2, 3, 5, 1, 4, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1237, [2,2,6,6])
**VARIABLES**
DISCRETE aux1238 #ElementOne([3, 5, 1, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1238, [1,1,3,6])
**VARIABLES**
DISCRETE aux1239 #ElementOne([2, 3, 5, 1, 4, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1239, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux1240 #ElementOne([2, 3, 5, 1, 4, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1240, [2,3,5,6])
**VARIABLES**
DISCRETE aux1241 #ElementOne([3, 5, 1, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1241, [1,1,3,6])
**VARIABLES**
DISCRETE aux1242 #ElementOne([2, 3, 5, 1, 4, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1242, [2,2,6,6])
**VARIABLES**
DISCRETE aux1243 #ElementOne([3, 5, 1, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1243, [1,1,3,6])
**VARIABLES**
DISCRETE aux1244 #ElementOne([2, 3, 5, 1, 4, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1244, [2,2,6,6])
**VARIABLES**
DISCRETE aux1245 #ElementOne([3, 5, 1, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1245, [1,1,3,6])
**VARIABLES**
DISCRETE aux1246 #ElementOne([2, 3, 5, 1, 4, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1246, [2,3,5,6])
**VARIABLES**
DISCRETE aux1247 #ElementOne([2, 3, 5, 1, 4, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1247, [2,2,6,6])
**VARIABLES**
DISCRETE aux1248 #ElementOne([3, 5, 1, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1248, [1,1,3,6])
**VARIABLES**
DISCRETE aux1249 #ElementOne([2, 4, 3, 1, 5, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1249, [2,2,6,6])
**VARIABLES**
DISCRETE aux1250 #ElementOne([2, 4, 3, 1, 5, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1250, [2,4,6,6])
**VARIABLES**
DISCRETE aux1251 #ElementOne([4, 3, 1, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1251, [1,1,3,6])
**VARIABLES**
DISCRETE aux1252 #ElementOne([2, 4, 3, 1, 5, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1252, [2,2,5,6])
**VARIABLES**
DISCRETE aux1253 #ElementOne([4, 3, 1, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1253, [1,1,3,6])
**VARIABLES**
DISCRETE aux1254 #ElementOne([2, 4, 3, 1, 5, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1254, [2,2,6,6])
**VARIABLES**
DISCRETE aux1255 #ElementOne([4, 3, 1, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1255, [1,1,3,6])
**VARIABLES**
DISCRETE aux1256 #ElementOne([2, 4, 3, 1, 5, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1256, [2,2,6,6])
**VARIABLES**
DISCRETE aux1257 #ElementOne([4, 3, 1, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1257, [1,1,3,6])
**VARIABLES**
DISCRETE aux1258 #ElementOne([2, 4, 3, 1, 5, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1258, [2,2,6,6])
**VARIABLES**
DISCRETE aux1259 #ElementOne([2, 4, 3, 1, 5, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1259, [2,4,6,6])
**VARIABLES**
DISCRETE aux1260 #ElementOne([4, 3, 1, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1260, [1,1,3,6])
**VARIABLES**
DISCRETE aux1261 #ElementOne([2, 5, 3, 1, 4, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1261, [2,2,6,6])
**VARIABLES**
DISCRETE aux1262 #ElementOne([2, 5, 3, 1, 4, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1262, [2,3,5,6])
**VARIABLES**
DISCRETE aux1263 #ElementOne([2, 5, 3, 1, 4, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1263, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux1264 #ElementOne([5, 3, 1, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1264, [1,1,3,6])
**VARIABLES**
DISCRETE aux1265 #ElementOne([5, 3, 1, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1265, [1,1,3,6])
**VARIABLES**
DISCRETE aux1266 #ElementOne([2, 5, 3, 1, 4, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1266, [2,2,6,6])
**VARIABLES**
DISCRETE aux1267 #ElementOne([5, 3, 1, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1267, [1,1,3,6])
**VARIABLES**
DISCRETE aux1268 #ElementOne([5, 3, 1, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1268, [1,1,3,6])
**VARIABLES**
DISCRETE aux1269 #ElementOne([2, 5, 3, 1, 4, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1269, [2,2,6,6])
**VARIABLES**
DISCRETE aux1270 #ElementOne([2, 5, 3, 1, 4, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1270, [2,3,5,6])
**VARIABLES**
DISCRETE aux1271 #ElementOne([5, 3, 1, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1271, [1,1,3,6])
**VARIABLES**
DISCRETE aux1272 #ElementOne([2, 5, 3, 1, 4, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1272, [2,2,6,6])
**VARIABLES**
DISCRETE aux1273 #ElementOne([2, 4, 5, 1, 3, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1273, [2,2,6,6])
**VARIABLES**
DISCRETE aux1274 #ElementOne([2, 4, 5, 1, 3, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1274, [2,3,6,6])
**VARIABLES**
DISCRETE aux1275 #ElementOne([4, 5, 1, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1275, [1,1,3,6])
**VARIABLES**
DISCRETE aux1276 #ElementOne([2, 4, 5, 1, 3, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1276, [2,2,4,6])
**VARIABLES**
DISCRETE aux1277 #ElementOne([4, 5, 1, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1277, [1,1,3,6])
**VARIABLES**
DISCRETE aux1278 #ElementOne([4, 5, 1, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1278, [1,1,3,6])
**VARIABLES**
DISCRETE aux1279 #ElementOne([2, 4, 5, 1, 3, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1279, [2,2,6,6])
**VARIABLES**
DISCRETE aux1280 #ElementOne([4, 5, 1, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1280, [1,1,3,6])
**VARIABLES**
DISCRETE aux1281 #ElementOne([2, 4, 5, 1, 3, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1281, [2,2,4,6])
**VARIABLES**
DISCRETE aux1282 #ElementOne([2, 4, 5, 1, 3, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1282, [2,2,6,6])
**VARIABLES**
DISCRETE aux1283 #ElementOne([2, 4, 5, 1, 3, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1283, [2,2,6,6])
**VARIABLES**
DISCRETE aux1284 #ElementOne([4, 5, 1, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1284, [1,1,3,6])
**VARIABLES**
DISCRETE aux1285 #ElementOne([2, 5, 4, 1, 3, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1285, [2,2,6,6])
**VARIABLES**
DISCRETE aux1286 #ElementOne([2, 5, 4, 1, 3, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1286, [2,3,6,6])
**VARIABLES**
DISCRETE aux1287 #ElementOne([2, 5, 4, 1, 3, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1287, [2,2,4,6])
**VARIABLES**
DISCRETE aux1288 #ElementOne([5, 4, 1, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1288, [1,1,3,6])
**VARIABLES**
DISCRETE aux1289 #ElementOne([5, 4, 1, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1289, [1,1,3,6])
**VARIABLES**
DISCRETE aux1290 #ElementOne([5, 4, 1, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1290, [1,1,3,6])
**VARIABLES**
DISCRETE aux1291 #ElementOne([2, 5, 4, 1, 3, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1291, [2,2,6,6])
**VARIABLES**
DISCRETE aux1292 #ElementOne([2, 5, 4, 1, 3, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1292, [2,2,4,6])
**VARIABLES**
DISCRETE aux1293 #ElementOne([5, 4, 1, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1293, [1,1,3,6])
**VARIABLES**
DISCRETE aux1294 #ElementOne([2, 5, 4, 1, 3, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1294, [2,2,6,6])
**VARIABLES**
DISCRETE aux1295 #ElementOne([5, 4, 1, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1295, [1,1,3,6])
**VARIABLES**
DISCRETE aux1296 #ElementOne([2, 5, 4, 1, 3, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1296, [2,2,6,6])
**VARIABLES**
DISCRETE aux1297 #ElementOne([2, 4, 1, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1297, [1,2,4,6])
**VARIABLES**
DISCRETE aux1298 #ElementOne([3, 2, 4, 1, 5, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1298, [3,3,6,6])
**VARIABLES**
DISCRETE aux1299 #ElementOne([3, 2, 4, 1, 5, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1299, [2,4,6,6])
**VARIABLES**
DISCRETE aux1300 #ElementOne([3, 2, 4, 1, 5, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1300, [3,3,5,6])
**VARIABLES**
DISCRETE aux1301 #ElementOne([3, 2, 4, 1, 5, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1301, [3,3,6,6])
**VARIABLES**
DISCRETE aux1302 #ElementOne([2, 4, 1, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1302, [1,2,4,6])
**VARIABLES**
DISCRETE aux1303 #ElementOne([2, 4, 1, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1303, [1,2,4,6])
**VARIABLES**
DISCRETE aux1304 #ElementOne([3, 2, 4, 1, 5, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1304, [3,3,6,6])
**VARIABLES**
DISCRETE aux1305 #ElementOne([2, 4, 1, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1305, [1,2,4,6])
**VARIABLES**
DISCRETE aux1306 #ElementOne([2, 4, 1, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1306, [1,2,4,6])
**VARIABLES**
DISCRETE aux1307 #ElementOne([3, 2, 4, 1, 5, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1307, [3,3,6,6])
**VARIABLES**
DISCRETE aux1308 #ElementOne([3, 2, 4, 1, 5, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1308, [2,4,6,6])
**VARIABLES**
DISCRETE aux1309 #ElementOne([2, 5, 1, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1309, [1,2,4,6])
**VARIABLES**
DISCRETE aux1310 #ElementOne([3, 2, 5, 1, 4, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1310, [3,3,6,6])
**VARIABLES**
DISCRETE aux1311 #ElementOne([3, 2, 5, 1, 4, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1311, [3,4,6,6])
**VARIABLES**
DISCRETE aux1312 #ElementOne([3, 2, 5, 1, 4, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1312, [2,3,5,6])
**VARIABLES**
DISCRETE aux1313 #ElementOne([3, 2, 5, 1, 4, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1313, [3,3,6,6])
**VARIABLES**
DISCRETE aux1314 #ElementOne([2, 5, 1, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1314, [1,2,4,6])
**VARIABLES**
DISCRETE aux1315 #ElementOne([2, 5, 1, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1315, [1,2,4,6])
**VARIABLES**
DISCRETE aux1316 #ElementOne([2, 5, 1, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1316, [1,2,4,6])
**VARIABLES**
DISCRETE aux1317 #ElementOne([3, 2, 5, 1, 4, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1317, [3,3,6,6])
**VARIABLES**
DISCRETE aux1318 #ElementOne([3, 2, 5, 1, 4, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1318, [2,3,5,6])
**VARIABLES**
DISCRETE aux1319 #ElementOne([2, 5, 1, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1319, [1,2,4,6])
**VARIABLES**
DISCRETE aux1320 #ElementOne([3, 2, 5, 1, 4, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1320, [3,3,6,6])
**VARIABLES**
DISCRETE aux1321 #ElementOne([2, 3, 1, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1321, [1,3,5,6])
**VARIABLES**
DISCRETE aux1322 #ElementOne([4, 2, 3, 1, 5, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1322, [2,4,6,6])
**VARIABLES**
DISCRETE aux1323 #ElementOne([4, 2, 3, 1, 5, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1323, [4,4,6,6])
**VARIABLES**
DISCRETE aux1324 #ElementOne([4, 2, 3, 1, 5, 6], M_00004_00005)
{4..6}
DISCRETE aux1325 #ElementOne([4, 2, 3, 1, 5, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1325, [4,4,6,6])
**VARIABLES**
DISCRETE aux1326 #ElementOne([2, 3, 1, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1326, [1,3,5,6])
**VARIABLES**
DISCRETE aux1327 #ElementOne([4, 2, 3, 1, 5, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1327, [4,4,6,6])
**VARIABLES**
DISCRETE aux1328 #ElementOne([2, 3, 1, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1328, [1,3,5,6])
**VARIABLES**
DISCRETE aux1329 #ElementOne([2, 3, 1, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1329, [1,3,5,6])
**VARIABLES**
DISCRETE aux1330 #ElementOne([2, 3, 1, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1330, [1,3,5,6])
**VARIABLES**
DISCRETE aux1331 #ElementOne([4, 2, 3, 1, 5, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1331, [2,4,6,6])
**VARIABLES**
DISCRETE aux1332 #ElementOne([4, 2, 3, 1, 5, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1332, [4,4,6,6])
**VARIABLES**
DISCRETE aux1333 #ElementOne([2, 3, 1, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1333, [1,4,6,6])
**VARIABLES**
DISCRETE aux1334 #ElementOne([5, 2, 3, 1, 4, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1334, [2,3,5,6])
**VARIABLES**
DISCRETE aux1335 #ElementOne([5, 2, 3, 1, 4, 6], M_00004_00005)
{4..6}
DISCRETE aux1336 #ElementOne([5, 2, 3, 1, 4, 6], M_00004_00001)
{5..6}
DISCRETE aux1337 #ElementOne([5, 2, 3, 1, 4, 6], M_00002_00001)
{5..6}
DISCRETE aux1338 #ElementOne([2, 3, 1, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1338, [1,4,6,6])
**VARIABLES**
DISCRETE aux1339 #ElementOne([5, 2, 3, 1, 4, 6], M_00003_00001)
{5..6}
DISCRETE aux1340 #ElementOne([2, 3, 1, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1340, [1,4,6,6])
**VARIABLES**
DISCRETE aux1341 #ElementOne([2, 3, 1, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1341, [1,4,6,6])
**VARIABLES**
DISCRETE aux1342 #ElementOne([5, 2, 3, 1, 4, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1342, [2,3,5,6])
**VARIABLES**
DISCRETE aux1343 #ElementOne([5, 2, 3, 1, 4, 6], M_00005_00001)
{5..6}
DISCRETE aux1344 #ElementOne([2, 3, 1, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1344, [1,4,6,6])
**VARIABLES**
DISCRETE aux1345 #ElementOne([2, 5, 1, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1345, [1,3,5,6])
**VARIABLES**
DISCRETE aux1346 #ElementOne([4, 2, 5, 1, 3, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1346, [3,4,6,6])
**VARIABLES**
DISCRETE aux1347 #ElementOne([4, 2, 5, 1, 3, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1347, [4,4,6,6])
**VARIABLES**
DISCRETE aux1348 #ElementOne([4, 2, 5, 1, 3, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1348, [2,2,4,6])
**VARIABLES**
DISCRETE aux1349 #ElementOne([4, 2, 5, 1, 3, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1349, [4,4,6,6])
**VARIABLES**
DISCRETE aux1350 #ElementOne([2, 5, 1, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1350, [1,3,5,6])
**VARIABLES**
DISCRETE aux1351 #ElementOne([2, 5, 1, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1351, [1,3,5,6])
**VARIABLES**
DISCRETE aux1352 #ElementOne([4, 2, 5, 1, 3, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1352, [4,4,6,6])
**VARIABLES**
DISCRETE aux1353 #ElementOne([4, 2, 5, 1, 3, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1353, [2,2,4,6])
**VARIABLES**
DISCRETE aux1354 #ElementOne([2, 5, 1, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1354, [1,3,5,6])
**VARIABLES**
DISCRETE aux1355 #ElementOne([2, 5, 1, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1355, [1,3,5,6])
**VARIABLES**
DISCRETE aux1356 #ElementOne([4, 2, 5, 1, 3, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1356, [4,4,6,6])
**VARIABLES**
DISCRETE aux1357 #ElementOne([2, 4, 1, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1357, [1,4,6,6])
**VARIABLES**
DISCRETE aux1358 #ElementOne([5, 2, 4, 1, 3, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1358, [3,3,5,6])
**VARIABLES**
DISCRETE aux1359 #ElementOne([5, 2, 4, 1, 3, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1359, [2,2,4,6])
**VARIABLES**
DISCRETE aux1360 #ElementOne([5, 2, 4, 1, 3, 6], M_00004_00001)
{5..6}
DISCRETE aux1361 #ElementOne([5, 2, 4, 1, 3, 6], M_00002_00001)
{5..6}
DISCRETE aux1362 #ElementOne([2, 4, 1, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1362, [1,4,6,6])
**VARIABLES**
DISCRETE aux1363 #ElementOne([2, 4, 1, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1363, [1,4,6,6])
**VARIABLES**
DISCRETE aux1364 #ElementOne([5, 2, 4, 1, 3, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1364, [2,2,4,6])
**VARIABLES**
DISCRETE aux1365 #ElementOne([5, 2, 4, 1, 3, 6], M_00005_00001)
{5..6}
DISCRETE aux1366 #ElementOne([2, 4, 1, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1366, [1,4,6,6])
**VARIABLES**
DISCRETE aux1367 #ElementOne([5, 2, 4, 1, 3, 6], M_00003_00001)
{5..6}
DISCRETE aux1368 #ElementOne([2, 4, 1, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1368, [1,4,6,6])
**VARIABLES**
DISCRETE aux1369 #ElementOne([3, 4, 2, 1, 5, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1369, [2,4,6,6])
**VARIABLES**
DISCRETE aux1370 #ElementOne([3, 4, 2, 1, 5, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1370, [3,3,6,6])
**VARIABLES**
DISCRETE aux1371 #ElementOne([4, 2, 1, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1371, [1,2,4,6])
**VARIABLES**
DISCRETE aux1372 #ElementOne([3, 4, 2, 1, 5, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1372, [3,3,5,6])
**VARIABLES**
DISCRETE aux1373 #ElementOne([3, 4, 2, 1, 5, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1373, [3,3,6,6])
**VARIABLES**
DISCRETE aux1374 #ElementOne([4, 2, 1, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1374, [1,2,4,6])
**VARIABLES**
DISCRETE aux1375 #ElementOne([4, 2, 1, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1375, [1,2,4,6])
**VARIABLES**
DISCRETE aux1376 #ElementOne([3, 4, 2, 1, 5, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1376, [3,3,6,6])
**VARIABLES**
DISCRETE aux1377 #ElementOne([4, 2, 1, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1377, [1,2,4,6])
**VARIABLES**
DISCRETE aux1378 #ElementOne([3, 4, 2, 1, 5, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1378, [2,4,6,6])
**VARIABLES**
DISCRETE aux1379 #ElementOne([3, 4, 2, 1, 5, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1379, [3,3,6,6])
**VARIABLES**
DISCRETE aux1380 #ElementOne([4, 2, 1, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1380, [1,2,4,6])
**VARIABLES**
DISCRETE aux1381 #ElementOne([3, 5, 2, 1, 4, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1381, [2,3,5,6])
**VARIABLES**
DISCRETE aux1382 #ElementOne([3, 5, 2, 1, 4, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1382, [3,3,6,6])
**VARIABLES**
DISCRETE aux1383 #ElementOne([3, 5, 2, 1, 4, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1383, [3,4,6,6])
**VARIABLES**
DISCRETE aux1384 #ElementOne([5, 2, 1, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1384, [1,2,4,6])
**VARIABLES**
DISCRETE aux1385 #ElementOne([3, 5, 2, 1, 4, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1385, [3,3,6,6])
**VARIABLES**
DISCRETE aux1386 #ElementOne([5, 2, 1, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1386, [1,2,4,6])
**VARIABLES**
DISCRETE aux1387 #ElementOne([5, 2, 1, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1387, [1,2,4,6])
**VARIABLES**
DISCRETE aux1388 #ElementOne([5, 2, 1, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1388, [1,2,4,6])
**VARIABLES**
DISCRETE aux1389 #ElementOne([3, 5, 2, 1, 4, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1389, [2,3,5,6])
**VARIABLES**
DISCRETE aux1390 #ElementOne([3, 5, 2, 1, 4, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1390, [3,3,6,6])
**VARIABLES**
DISCRETE aux1391 #ElementOne([5, 2, 1, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1391, [1,2,4,6])
**VARIABLES**
DISCRETE aux1392 #ElementOne([3, 5, 2, 1, 4, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1392, [3,3,6,6])
**VARIABLES**
DISCRETE aux1393 #ElementOne([4, 3, 2, 1, 5, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1393, [2,4,6,6])
**VARIABLES**
DISCRETE aux1394 #ElementOne([3, 2, 1, 5, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1394, [1,3,5,6])
**VARIABLES**
DISCRETE aux1395 #ElementOne([4, 3, 2, 1, 5, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1395, [4,4,6,6])
**VARIABLES**
DISCRETE aux1396 #ElementOne([4, 3, 2, 1, 5, 6], M_00004_00005)
{4..6}
DISCRETE aux1397 #ElementOne([3, 2, 1, 5, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1397, [1,3,5,6])
**VARIABLES**
DISCRETE aux1398 #ElementOne([4, 3, 2, 1, 5, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1398, [4,4,6,6])
**VARIABLES**
DISCRETE aux1399 #ElementOne([4, 3, 2, 1, 5, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1399, [4,4,6,6])
**VARIABLES**
DISCRETE aux1400 #ElementOne([3, 2, 1, 5, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1400, [1,3,5,6])
**VARIABLES**
DISCRETE aux1401 #ElementOne([3, 2, 1, 5, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1401, [1,3,5,6])
**VARIABLES**
DISCRETE aux1402 #ElementOne([4, 3, 2, 1, 5, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1402, [2,4,6,6])
**VARIABLES**
DISCRETE aux1403 #ElementOne([3, 2, 1, 5, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1403, [1,3,5,6])
**VARIABLES**
DISCRETE aux1404 #ElementOne([4, 3, 2, 1, 5, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1404, [4,4,6,6])
**VARIABLES**
DISCRETE aux1405 #ElementOne([5, 3, 2, 1, 4, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1405, [2,3,5,6])
**VARIABLES**
DISCRETE aux1406 #ElementOne([3, 2, 1, 4, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1406, [1,4,6,6])
**VARIABLES**
DISCRETE aux1407 #ElementOne([5, 3, 2, 1, 4, 6], M_00004_00005)
{4..6}
DISCRETE aux1408 #ElementOne([5, 3, 2, 1, 4, 6], M_00004_00001)
{5..6}
DISCRETE aux1409 #ElementOne([3, 2, 1, 4, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1409, [1,4,6,6])
**VARIABLES**
DISCRETE aux1410 #ElementOne([5, 3, 2, 1, 4, 6], M_00003_00001)
{5..6}
DISCRETE aux1411 #ElementOne([5, 3, 2, 1, 4, 6], M_00002_00001)
{5..6}
DISCRETE aux1412 #ElementOne([3, 2, 1, 4, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1412, [1,4,6,6])
**VARIABLES**
DISCRETE aux1413 #ElementOne([5, 3, 2, 1, 4, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1413, [2,3,5,6])
**VARIABLES**
DISCRETE aux1414 #ElementOne([3, 2, 1, 4, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1414, [1,4,6,6])
**VARIABLES**
DISCRETE aux1415 #ElementOne([5, 3, 2, 1, 4, 6], M_00005_00001)
{5..6}
DISCRETE aux1416 #ElementOne([3, 2, 1, 4, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1416, [1,4,6,6])
**VARIABLES**
DISCRETE aux1417 #ElementOne([4, 5, 2, 1, 3, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1417, [2,2,4,6])
**VARIABLES**
DISCRETE aux1418 #ElementOne([4, 5, 2, 1, 3, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1418, [3,4,6,6])
**VARIABLES**
DISCRETE aux1419 #ElementOne([4, 5, 2, 1, 3, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1419, [4,4,6,6])
**VARIABLES**
DISCRETE aux1420 #ElementOne([5, 2, 1, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1420, [1,3,5,6])
**VARIABLES**
DISCRETE aux1421 #ElementOne([4, 5, 2, 1, 3, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1421, [4,4,6,6])
**VARIABLES**
DISCRETE aux1422 #ElementOne([5, 2, 1, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1422, [1,3,5,6])
**VARIABLES**
DISCRETE aux1423 #ElementOne([5, 2, 1, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1423, [1,3,5,6])
**VARIABLES**
DISCRETE aux1424 #ElementOne([4, 5, 2, 1, 3, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1424, [2,2,4,6])
**VARIABLES**
DISCRETE aux1425 #ElementOne([4, 5, 2, 1, 3, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1425, [4,4,6,6])
**VARIABLES**
DISCRETE aux1426 #ElementOne([5, 2, 1, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1426, [1,3,5,6])
**VARIABLES**
DISCRETE aux1427 #ElementOne([5, 2, 1, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1427, [1,3,5,6])
**VARIABLES**
DISCRETE aux1428 #ElementOne([4, 5, 2, 1, 3, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1428, [4,4,6,6])
**VARIABLES**
DISCRETE aux1429 #ElementOne([5, 4, 2, 1, 3, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1429, [2,2,4,6])
**VARIABLES**
DISCRETE aux1430 #ElementOne([5, 4, 2, 1, 3, 6], M_00004_00005)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1430, [3,3,5,6])
**VARIABLES**
DISCRETE aux1431 #ElementOne([4, 2, 1, 3, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1431, [1,4,6,6])
**VARIABLES**
DISCRETE aux1432 #ElementOne([5, 4, 2, 1, 3, 6], M_00004_00001)
{5..6}
DISCRETE aux1433 #ElementOne([4, 2, 1, 3, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1433, [1,4,6,6])
**VARIABLES**
DISCRETE aux1434 #ElementOne([5, 4, 2, 1, 3, 6], M_00003_00001)
{5..6}
DISCRETE aux1435 #ElementOne([4, 2, 1, 3, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1435, [1,4,6,6])
**VARIABLES**
DISCRETE aux1436 #ElementOne([5, 4, 2, 1, 3, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1436, [2,2,4,6])
**VARIABLES**
DISCRETE aux1437 #ElementOne([4, 2, 1, 3, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1437, [1,4,6,6])
**VARIABLES**
DISCRETE aux1438 #ElementOne([5, 4, 2, 1, 3, 6], M_00005_00001)
{5..6}
DISCRETE aux1439 #ElementOne([5, 4, 2, 1, 3, 6], M_00002_00001)
{5..6}
DISCRETE aux1440 #ElementOne([4, 2, 1, 3, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1440, [1,4,6,6])
**VARIABLES**
DISCRETE aux1441 #ElementOne([3, 4, 5, 1, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1441, [2,3,6,6])
**VARIABLES**
DISCRETE aux1442 #ElementOne([3, 4, 5, 1, 2, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1442, [3,3,6,6])
**VARIABLES**
DISCRETE aux1443 #ElementOne([4, 5, 1, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1443, [1,2,4,6])
**VARIABLES**
DISCRETE aux1444 #ElementOne([3, 4, 5, 1, 2, 6], M_00004_00003)
{3..6}
DISCRETE aux1445 #ElementOne([4, 5, 1, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1445, [1,2,4,6])
**VARIABLES**
DISCRETE aux1446 #ElementOne([3, 4, 5, 1, 2, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1446, [3,3,6,6])
**VARIABLES**
DISCRETE aux1447 #ElementOne([4, 5, 1, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1447, [1,2,4,6])
**VARIABLES**
DISCRETE aux1448 #ElementOne([3, 4, 5, 1, 2, 6], M_00005_00003)
{3..6}
DISCRETE aux1449 #ElementOne([4, 5, 1, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1449, [1,2,4,6])
**VARIABLES**
DISCRETE aux1450 #ElementOne([3, 4, 5, 1, 2, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1450, [3,3,6,6])
**VARIABLES**
DISCRETE aux1451 #ElementOne([3, 4, 5, 1, 2, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1451, [3,3,6,6])
**VARIABLES**
DISCRETE aux1452 #ElementOne([4, 5, 1, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1452, [1,2,4,6])
**VARIABLES**
DISCRETE aux1453 #ElementOne([3, 5, 4, 1, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1453, [2,3,6,6])
**VARIABLES**
DISCRETE aux1454 #ElementOne([3, 5, 4, 1, 2, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1454, [3,3,6,6])
**VARIABLES**
DISCRETE aux1455 #ElementOne([3, 5, 4, 1, 2, 6], M_00004_00003)
{3..6}
DISCRETE aux1456 #ElementOne([5, 4, 1, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1456, [1,2,4,6])
**VARIABLES**
DISCRETE aux1457 #ElementOne([5, 4, 1, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1457, [1,2,4,6])
**VARIABLES**
DISCRETE aux1458 #ElementOne([3, 5, 4, 1, 2, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1458, [3,3,6,6])
**VARIABLES**
DISCRETE aux1459 #ElementOne([3, 5, 4, 1, 2, 6], M_00005_00003)
{3..6}
DISCRETE aux1460 #ElementOne([5, 4, 1, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1460, [1,2,4,6])
**VARIABLES**
DISCRETE aux1461 #ElementOne([5, 4, 1, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1461, [1,2,4,6])
**VARIABLES**
DISCRETE aux1462 #ElementOne([3, 5, 4, 1, 2, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1462, [3,3,6,6])
**VARIABLES**
DISCRETE aux1463 #ElementOne([5, 4, 1, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1463, [1,2,4,6])
**VARIABLES**
DISCRETE aux1464 #ElementOne([3, 5, 4, 1, 2, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1464, [3,3,6,6])
**VARIABLES**
DISCRETE aux1465 #ElementOne([4, 3, 5, 1, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1465, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux1466 #ElementOne([3, 5, 1, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1466, [1,3,5,6])
**VARIABLES**
DISCRETE aux1467 #ElementOne([4, 3, 5, 1, 2, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1467, [4,4,6,6])
**VARIABLES**
DISCRETE aux1468 #ElementOne([4, 3, 5, 1, 2, 6], M_00004_00003)
{3..6}
DISCRETE aux1469 #ElementOne([3, 5, 1, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1469, [1,3,5,6])
**VARIABLES**
DISCRETE aux1470 #ElementOne([3, 5, 1, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1470, [1,3,5,6])
**VARIABLES**
DISCRETE aux1471 #ElementOne([4, 3, 5, 1, 2, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1471, [4,4,6,6])
**VARIABLES**
DISCRETE aux1472 #ElementOne([4, 3, 5, 1, 2, 6], M_00005_00003)
{3..6}
DISCRETE aux1473 #ElementOne([4, 3, 5, 1, 2, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1473, [4,4,6,6])
**VARIABLES**
DISCRETE aux1474 #ElementOne([3, 5, 1, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1474, [1,3,5,6])
**VARIABLES**
DISCRETE aux1475 #ElementOne([3, 5, 1, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1475, [1,3,5,6])
**VARIABLES**
DISCRETE aux1476 #ElementOne([4, 3, 5, 1, 2, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1476, [4,4,6,6])
**VARIABLES**
DISCRETE aux1477 #ElementOne([5, 3, 4, 1, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1477, [2,2,5,6])
**VARIABLES**
DISCRETE aux1478 #ElementOne([3, 4, 1, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1478, [1,4,6,6])
**VARIABLES**
DISCRETE aux1479 #ElementOne([5, 3, 4, 1, 2, 6], M_00004_00003)
{3..6}
DISCRETE aux1480 #ElementOne([5, 3, 4, 1, 2, 6], M_00004_00001)
{5..6}
DISCRETE aux1481 #ElementOne([3, 4, 1, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1481, [1,4,6,6])
**VARIABLES**
DISCRETE aux1482 #ElementOne([3, 4, 1, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1482, [1,4,6,6])
**VARIABLES**
DISCRETE aux1483 #ElementOne([5, 3, 4, 1, 2, 6], M_00005_00003)
{3..6}
DISCRETE aux1484 #ElementOne([5, 3, 4, 1, 2, 6], M_00005_00001)
{5..6}
DISCRETE aux1485 #ElementOne([5, 3, 4, 1, 2, 6], M_00002_00001)
{5..6}
DISCRETE aux1486 #ElementOne([3, 4, 1, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1486, [1,4,6,6])
**VARIABLES**
DISCRETE aux1487 #ElementOne([5, 3, 4, 1, 2, 6], M_00003_00001)
{5..6}
DISCRETE aux1488 #ElementOne([3, 4, 1, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1488, [1,4,6,6])
**VARIABLES**
DISCRETE aux1489 #ElementOne([4, 5, 3, 1, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1489, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux1490 #ElementOne([4, 5, 3, 1, 2, 6], M_00004_00003)
{3..6}
DISCRETE aux1491 #ElementOne([4, 5, 3, 1, 2, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1491, [4,4,6,6])
**VARIABLES**
DISCRETE aux1492 #ElementOne([5, 3, 1, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1492, [1,3,5,6])
**VARIABLES**
DISCRETE aux1493 #ElementOne([5, 3, 1, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1493, [1,3,5,6])
**VARIABLES**
DISCRETE aux1494 #ElementOne([4, 5, 3, 1, 2, 6], M_00005_00003)
{3..6}
DISCRETE aux1495 #ElementOne([4, 5, 3, 1, 2, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1495, [4,4,6,6])
**VARIABLES**
DISCRETE aux1496 #ElementOne([5, 3, 1, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1496, [1,3,5,6])
**VARIABLES**
DISCRETE aux1497 #ElementOne([4, 5, 3, 1, 2, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1497, [4,4,6,6])
**VARIABLES**
DISCRETE aux1498 #ElementOne([5, 3, 1, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1498, [1,3,5,6])
**VARIABLES**
DISCRETE aux1499 #ElementOne([5, 3, 1, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1499, [1,3,5,6])
**VARIABLES**
DISCRETE aux1500 #ElementOne([4, 5, 3, 1, 2, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1500, [4,4,6,6])
**VARIABLES**
DISCRETE aux1501 #ElementOne([5, 4, 3, 1, 2, 6], M_00004_00005)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1501, [2,2,5,6])
**VARIABLES**
DISCRETE aux1502 #ElementOne([5, 4, 3, 1, 2, 6], M_00004_00003)
{3..6}
DISCRETE aux1503 #ElementOne([4, 3, 1, 2, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1503, [1,4,6,6])
**VARIABLES**
DISCRETE aux1504 #ElementOne([5, 4, 3, 1, 2, 6], M_00004_00001)
{5..6}
DISCRETE aux1505 #ElementOne([4, 3, 1, 2, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1505, [1,4,6,6])
**VARIABLES**
DISCRETE aux1506 #ElementOne([5, 4, 3, 1, 2, 6], M_00005_00003)
{3..6}
DISCRETE aux1507 #ElementOne([4, 3, 1, 2, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1507, [1,4,6,6])
**VARIABLES**
DISCRETE aux1508 #ElementOne([5, 4, 3, 1, 2, 6], M_00005_00001)
{5..6}
DISCRETE aux1509 #ElementOne([4, 3, 1, 2, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1509, [1,4,6,6])
**VARIABLES**
DISCRETE aux1510 #ElementOne([5, 4, 3, 1, 2, 6], M_00003_00001)
{5..6}
DISCRETE aux1511 #ElementOne([5, 4, 3, 1, 2, 6], M_00002_00001)
{5..6}
DISCRETE aux1512 #ElementOne([4, 3, 1, 2, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1512, [1,4,6,6])
**VARIABLES**
DISCRETE aux1513 #ElementOne([2, 3, 4, 5, 1, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1513, [2,2,6,6])
**VARIABLES**
DISCRETE aux1514 #ElementOne([3, 4, 5, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1514, [1,1,3,6])
**VARIABLES**
DISCRETE aux1515 #ElementOne([2, 3, 4, 5, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1515, [2,4,6,6])
**VARIABLES**
DISCRETE aux1516 #ElementOne([3, 4, 5, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1516, [1,1,3,6])
**VARIABLES**
DISCRETE aux1517 #ElementOne([3, 4, 5, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1517, [1,1,3,6])
**VARIABLES**
DISCRETE aux1518 #ElementOne([2, 3, 4, 5, 1, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1518, [2,2,6,6])
**VARIABLES**
DISCRETE aux1519 #ElementOne([2, 3, 4, 5, 1, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1519, [2,2,6,6])
**VARIABLES**
DISCRETE aux1520 #ElementOne([3, 4, 5, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1520, [1,1,3,6])
**VARIABLES**
DISCRETE aux1521 #ElementOne([2, 3, 4, 5, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1521, [1,2,6,6])
**VARIABLES**
DISCRETE aux1522 #ElementOne([2, 3, 4, 5, 1, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1522, [2,2,6,6])
**VARIABLES**
DISCRETE aux1523 #ElementOne([3, 4, 5, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1523, [1,1,3,6])
**VARIABLES**
DISCRETE aux1524 #ElementOne([2, 3, 4, 5, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1524, [2,4,6,6])
**VARIABLES**
DISCRETE aux1525 #ElementOne([2, 3, 5, 4, 1, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1525, [2,2,6,6])
**VARIABLES**
DISCRETE aux1526 #ElementOne([3, 5, 4, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1526, [1,1,3,6])
**VARIABLES**
DISCRETE aux1527 #ElementOne([3, 5, 4, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1527, [1,1,3,6])
**VARIABLES**
DISCRETE aux1528 #ElementOne([2, 3, 5, 4, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1528, [2,3,5,6])
**VARIABLES**
DISCRETE aux1529 #ElementOne([3, 5, 4, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1529, [1,1,3,6])
**VARIABLES**
DISCRETE aux1530 #ElementOne([2, 3, 5, 4, 1, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1530, [2,2,6,6])
**VARIABLES**
DISCRETE aux1531 #ElementOne([2, 3, 5, 4, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1531, [1,2,6,6])
**VARIABLES**
DISCRETE aux1532 #ElementOne([2, 3, 5, 4, 1, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1532, [2,2,6,6])
**VARIABLES**
DISCRETE aux1533 #ElementOne([3, 5, 4, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1533, [1,1,3,6])
**VARIABLES**
DISCRETE aux1534 #ElementOne([2, 3, 5, 4, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1534, [2,3,5,6])
**VARIABLES**
DISCRETE aux1535 #ElementOne([2, 3, 5, 4, 1, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1535, [2,2,6,6])
**VARIABLES**
DISCRETE aux1536 #ElementOne([3, 5, 4, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1536, [1,1,3,6])
**VARIABLES**
DISCRETE aux1537 #ElementOne([2, 4, 3, 5, 1, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1537, [2,2,6,6])
**VARIABLES**
DISCRETE aux1538 #ElementOne([2, 4, 3, 5, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1538, [2,4,6,6])
**VARIABLES**
DISCRETE aux1539 #ElementOne([4, 3, 5, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1539, [1,1,3,6])
**VARIABLES**
DISCRETE aux1540 #ElementOne([4, 3, 5, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1540, [1,1,3,6])
**VARIABLES**
DISCRETE aux1541 #ElementOne([4, 3, 5, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1541, [1,1,3,6])
**VARIABLES**
DISCRETE aux1542 #ElementOne([2, 4, 3, 5, 1, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1542, [2,2,6,6])
**VARIABLES**
DISCRETE aux1543 #ElementOne([4, 3, 5, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1543, [1,1,3,6])
**VARIABLES**
DISCRETE aux1544 #ElementOne([2, 4, 3, 5, 1, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1544, [2,2,6,6])
**VARIABLES**
DISCRETE aux1545 #ElementOne([2, 4, 3, 5, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1545, [1,2,6,6])
**VARIABLES**
DISCRETE aux1546 #ElementOne([2, 4, 3, 5, 1, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1546, [2,2,6,6])
**VARIABLES**
DISCRETE aux1547 #ElementOne([2, 4, 3, 5, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1547, [2,4,6,6])
**VARIABLES**
DISCRETE aux1548 #ElementOne([4, 3, 5, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1548, [1,1,3,6])
**VARIABLES**
DISCRETE aux1549 #ElementOne([2, 5, 3, 4, 1, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1549, [2,2,6,6])
**VARIABLES**
DISCRETE aux1550 #ElementOne([2, 5, 3, 4, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1550, [2,3,5,6])
**VARIABLES**
DISCRETE aux1551 #ElementOne([5, 3, 4, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1551, [1,1,3,6])
**VARIABLES**
DISCRETE aux1552 #ElementOne([5, 3, 4, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1552, [1,1,3,6])
**VARIABLES**
DISCRETE aux1553 #ElementOne([5, 3, 4, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1553, [1,1,3,6])
**VARIABLES**
DISCRETE aux1554 #ElementOne([2, 5, 3, 4, 1, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1554, [2,2,6,6])
**VARIABLES**
DISCRETE aux1555 #ElementOne([5, 3, 4, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1555, [1,1,3,6])
**VARIABLES**
DISCRETE aux1556 #ElementOne([2, 5, 3, 4, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1556, [1,2,6,6])
**VARIABLES**
DISCRETE aux1557 #ElementOne([2, 5, 3, 4, 1, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1557, [2,2,6,6])
**VARIABLES**
DISCRETE aux1558 #ElementOne([2, 5, 3, 4, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1558, [2,3,5,6])
**VARIABLES**
DISCRETE aux1559 #ElementOne([5, 3, 4, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1559, [1,1,3,6])
**VARIABLES**
DISCRETE aux1560 #ElementOne([2, 5, 3, 4, 1, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1560, [2,2,6,6])
**VARIABLES**
DISCRETE aux1561 #ElementOne([2, 4, 5, 3, 1, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1561, [2,2,6,6])
**VARIABLES**
DISCRETE aux1562 #ElementOne([4, 5, 3, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1562, [1,1,3,6])
**VARIABLES**
DISCRETE aux1563 #ElementOne([4, 5, 3, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1563, [1,1,3,6])
**VARIABLES**
DISCRETE aux1564 #ElementOne([2, 4, 5, 3, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1564, [2,2,4,6])
**VARIABLES**
DISCRETE aux1565 #ElementOne([4, 5, 3, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1565, [1,1,3,6])
**VARIABLES**
DISCRETE aux1566 #ElementOne([2, 4, 5, 3, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1566, [1,2,6,6])
**VARIABLES**
DISCRETE aux1567 #ElementOne([2, 4, 5, 3, 1, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1567, [2,2,6,6])
**VARIABLES**
DISCRETE aux1568 #ElementOne([4, 5, 3, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1568, [1,1,3,6])
**VARIABLES**
DISCRETE aux1569 #ElementOne([2, 4, 5, 3, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1569, [2,2,4,6])
**VARIABLES**
DISCRETE aux1570 #ElementOne([2, 4, 5, 3, 1, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1570, [2,2,6,6])
**VARIABLES**
DISCRETE aux1571 #ElementOne([2, 4, 5, 3, 1, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1571, [2,2,6,6])
**VARIABLES**
DISCRETE aux1572 #ElementOne([4, 5, 3, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1572, [1,1,3,6])
**VARIABLES**
DISCRETE aux1573 #ElementOne([2, 5, 4, 3, 1, 6], M_00005_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1573, [2,2,6,6])
**VARIABLES**
DISCRETE aux1574 #ElementOne([5, 4, 3, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1574, [1,1,3,6])
**VARIABLES**
DISCRETE aux1575 #ElementOne([2, 5, 4, 3, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1575, [2,2,4,6])
**VARIABLES**
DISCRETE aux1576 #ElementOne([5, 4, 3, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1576, [1,1,3,6])
**VARIABLES**
DISCRETE aux1577 #ElementOne([5, 4, 3, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1577, [1,1,3,6])
**VARIABLES**
DISCRETE aux1578 #ElementOne([2, 5, 4, 3, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1578, [1,2,6,6])
**VARIABLES**
DISCRETE aux1579 #ElementOne([2, 5, 4, 3, 1, 6], M_00004_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1579, [2,2,6,6])
**VARIABLES**
DISCRETE aux1580 #ElementOne([2, 5, 4, 3, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1580, [2,2,4,6])
**VARIABLES**
DISCRETE aux1581 #ElementOne([5, 4, 3, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1581, [1,1,3,6])
**VARIABLES**
DISCRETE aux1582 #ElementOne([2, 5, 4, 3, 1, 6], M_00003_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1582, [2,2,6,6])
**VARIABLES**
DISCRETE aux1583 #ElementOne([5, 4, 3, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1583, [1,1,3,6])
**VARIABLES**
DISCRETE aux1584 #ElementOne([2, 5, 4, 3, 1, 6], M_00002_00001)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1584, [2,2,6,6])
**VARIABLES**
DISCRETE aux1585 #ElementOne([2, 4, 5, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1585, [1,2,4,6])
**VARIABLES**
DISCRETE aux1586 #ElementOne([3, 2, 4, 5, 1, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1586, [3,3,6,6])
**VARIABLES**
DISCRETE aux1587 #ElementOne([3, 2, 4, 5, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1587, [2,4,6,6])
**VARIABLES**
DISCRETE aux1588 #ElementOne([2, 4, 5, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1588, [1,2,4,6])
**VARIABLES**
DISCRETE aux1589 #ElementOne([3, 2, 4, 5, 1, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1589, [3,3,6,6])
**VARIABLES**
DISCRETE aux1590 #ElementOne([2, 4, 5, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1590, [1,2,4,6])
**VARIABLES**
DISCRETE aux1591 #ElementOne([2, 4, 5, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1591, [1,2,4,6])
**VARIABLES**
DISCRETE aux1592 #ElementOne([3, 2, 4, 5, 1, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1592, [3,3,6,6])
**VARIABLES**
DISCRETE aux1593 #ElementOne([3, 2, 4, 5, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1593, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux1594 #ElementOne([2, 4, 5, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1594, [1,2,4,6])
**VARIABLES**
DISCRETE aux1595 #ElementOne([3, 2, 4, 5, 1, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1595, [3,3,6,6])
**VARIABLES**
DISCRETE aux1596 #ElementOne([3, 2, 4, 5, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1596, [2,4,6,6])
**VARIABLES**
DISCRETE aux1597 #ElementOne([2, 5, 4, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1597, [1,2,4,6])
**VARIABLES**
DISCRETE aux1598 #ElementOne([3, 2, 5, 4, 1, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1598, [3,3,6,6])
**VARIABLES**
DISCRETE aux1599 #ElementOne([2, 5, 4, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1599, [1,2,4,6])
**VARIABLES**
DISCRETE aux1600 #ElementOne([3, 2, 5, 4, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1600, [2,3,5,6])
**VARIABLES**
DISCRETE aux1601 #ElementOne([3, 2, 5, 4, 1, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1601, [3,3,6,6])
**VARIABLES**
DISCRETE aux1602 #ElementOne([2, 5, 4, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1602, [1,2,4,6])
**VARIABLES**
DISCRETE aux1603 #ElementOne([3, 2, 5, 4, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1603, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux1604 #ElementOne([2, 5, 4, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1604, [1,2,4,6])
**VARIABLES**
DISCRETE aux1605 #ElementOne([3, 2, 5, 4, 1, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1605, [3,3,6,6])
**VARIABLES**
DISCRETE aux1606 #ElementOne([3, 2, 5, 4, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1606, [2,3,5,6])
**VARIABLES**
DISCRETE aux1607 #ElementOne([2, 5, 4, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1607, [1,2,4,6])
**VARIABLES**
DISCRETE aux1608 #ElementOne([3, 2, 5, 4, 1, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1608, [3,3,6,6])
**VARIABLES**
DISCRETE aux1609 #ElementOne([2, 3, 5, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1609, [1,3,5,6])
**VARIABLES**
DISCRETE aux1610 #ElementOne([4, 2, 3, 5, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1610, [2,4,6,6])
**VARIABLES**
DISCRETE aux1611 #ElementOne([4, 2, 3, 5, 1, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1611, [4,4,6,6])
**VARIABLES**
DISCRETE aux1612 #ElementOne([2, 3, 5, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1612, [1,3,5,6])
**VARIABLES**
DISCRETE aux1613 #ElementOne([4, 2, 3, 5, 1, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1613, [4,4,6,6])
**VARIABLES**
DISCRETE aux1614 #ElementOne([2, 3, 5, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1614, [1,3,5,6])
**VARIABLES**
DISCRETE aux1615 #ElementOne([4, 2, 3, 5, 1, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1615, [4,4,6,6])
**VARIABLES**
DISCRETE aux1616 #ElementOne([2, 3, 5, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1616, [1,3,5,6])
**VARIABLES**
DISCRETE aux1617 #ElementOne([4, 2, 3, 5, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1617, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux1618 #ElementOne([2, 3, 5, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1618, [1,3,5,6])
**VARIABLES**
DISCRETE aux1619 #ElementOne([4, 2, 3, 5, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1619, [2,4,6,6])
**VARIABLES**
DISCRETE aux1620 #ElementOne([4, 2, 3, 5, 1, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1620, [4,4,6,6])
**VARIABLES**
DISCRETE aux1621 #ElementOne([2, 3, 4, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1621, [1,4,6,6])
**VARIABLES**
DISCRETE aux1622 #ElementOne([5, 2, 3, 4, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1622, [2,3,5,6])
**VARIABLES**
DISCRETE aux1623 #ElementOne([2, 3, 4, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1623, [1,4,6,6])
**VARIABLES**
DISCRETE aux1624 #ElementOne([5, 2, 3, 4, 1, 6], M_00005_00001)
{5..6}
DISCRETE aux1625 #ElementOne([5, 2, 3, 4, 1, 6], M_00002_00001)
{5..6}
DISCRETE aux1626 #ElementOne([2, 3, 4, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1626, [1,4,6,6])
**VARIABLES**
DISCRETE aux1627 #ElementOne([5, 2, 3, 4, 1, 6], M_00003_00001)
{5..6}
DISCRETE aux1628 #ElementOne([5, 2, 3, 4, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1628, [1,1,5,6])
**VARIABLES**
DISCRETE aux1629 #ElementOne([2, 3, 4, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1629, [1,4,6,6])
**VARIABLES**
DISCRETE aux1630 #ElementOne([5, 2, 3, 4, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1630, [2,3,5,6])
**VARIABLES**
DISCRETE aux1631 #ElementOne([5, 2, 3, 4, 1, 6], M_00004_00001)
{5..6}
DISCRETE aux1632 #ElementOne([2, 3, 4, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1632, [1,4,6,6])
**VARIABLES**
DISCRETE aux1633 #ElementOne([2, 5, 3, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1633, [1,3,5,6])
**VARIABLES**
DISCRETE aux1634 #ElementOne([2, 5, 3, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1634, [1,3,5,6])
**VARIABLES**
DISCRETE aux1635 #ElementOne([4, 2, 5, 3, 1, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1635, [4,4,6,6])
**VARIABLES**
DISCRETE aux1636 #ElementOne([4, 2, 5, 3, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1636, [2,2,4,6])
**VARIABLES**
DISCRETE aux1637 #ElementOne([4, 2, 5, 3, 1, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1637, [4,4,6,6])
**VARIABLES**
DISCRETE aux1638 #ElementOne([4, 2, 5, 3, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1638, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux1639 #ElementOne([2, 5, 3, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1639, [1,3,5,6])
**VARIABLES**
DISCRETE aux1640 #ElementOne([4, 2, 5, 3, 1, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1640, [4,4,6,6])
**VARIABLES**
DISCRETE aux1641 #ElementOne([4, 2, 5, 3, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1641, [2,2,4,6])
**VARIABLES**
DISCRETE aux1642 #ElementOne([2, 5, 3, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1642, [1,3,5,6])
**VARIABLES**
DISCRETE aux1643 #ElementOne([2, 5, 3, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1643, [1,3,5,6])
**VARIABLES**
DISCRETE aux1644 #ElementOne([4, 2, 5, 3, 1, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1644, [4,4,6,6])
**VARIABLES**
DISCRETE aux1645 #ElementOne([2, 4, 3, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1645, [1,4,6,6])
**VARIABLES**
DISCRETE aux1646 #ElementOne([2, 4, 3, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1646, [1,4,6,6])
**VARIABLES**
DISCRETE aux1647 #ElementOne([5, 2, 4, 3, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1647, [2,2,4,6])
**VARIABLES**
DISCRETE aux1648 #ElementOne([5, 2, 4, 3, 1, 6], M_00005_00001)
{5..6}
DISCRETE aux1649 #ElementOne([5, 2, 4, 3, 1, 6], M_00002_00001)
{5..6}
DISCRETE aux1650 #ElementOne([5, 2, 4, 3, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1650, [1,1,5,6])
**VARIABLES**
DISCRETE aux1651 #ElementOne([2, 4, 3, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1651, [1,4,6,6])
**VARIABLES**
DISCRETE aux1652 #ElementOne([5, 2, 4, 3, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1652, [2,2,4,6])
**VARIABLES**
DISCRETE aux1653 #ElementOne([5, 2, 4, 3, 1, 6], M_00004_00001)
{5..6}
DISCRETE aux1654 #ElementOne([2, 4, 3, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1654, [1,4,6,6])
**VARIABLES**
DISCRETE aux1655 #ElementOne([5, 2, 4, 3, 1, 6], M_00003_00001)
{5..6}
DISCRETE aux1656 #ElementOne([2, 4, 3, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1656, [1,4,6,6])
**VARIABLES**
DISCRETE aux1657 #ElementOne([3, 4, 2, 5, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1657, [2,4,6,6])
**VARIABLES**
DISCRETE aux1658 #ElementOne([3, 4, 2, 5, 1, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1658, [3,3,6,6])
**VARIABLES**
DISCRETE aux1659 #ElementOne([4, 2, 5, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1659, [1,2,4,6])
**VARIABLES**
DISCRETE aux1660 #ElementOne([4, 2, 5, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1660, [1,2,4,6])
**VARIABLES**
DISCRETE aux1661 #ElementOne([3, 4, 2, 5, 1, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1661, [3,3,6,6])
**VARIABLES**
DISCRETE aux1662 #ElementOne([4, 2, 5, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1662, [1,2,4,6])
**VARIABLES**
DISCRETE aux1663 #ElementOne([4, 2, 5, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1663, [1,2,4,6])
**VARIABLES**
DISCRETE aux1664 #ElementOne([3, 4, 2, 5, 1, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1664, [3,3,6,6])
**VARIABLES**
DISCRETE aux1665 #ElementOne([3, 4, 2, 5, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1665, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux1666 #ElementOne([3, 4, 2, 5, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1666, [2,4,6,6])
**VARIABLES**
DISCRETE aux1667 #ElementOne([3, 4, 2, 5, 1, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1667, [3,3,6,6])
**VARIABLES**
DISCRETE aux1668 #ElementOne([4, 2, 5, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1668, [1,2,4,6])
**VARIABLES**
DISCRETE aux1669 #ElementOne([3, 5, 2, 4, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1669, [2,3,5,6])
**VARIABLES**
DISCRETE aux1670 #ElementOne([3, 5, 2, 4, 1, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1670, [3,3,6,6])
**VARIABLES**
DISCRETE aux1671 #ElementOne([5, 2, 4, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1671, [1,2,4,6])
**VARIABLES**
DISCRETE aux1672 #ElementOne([5, 2, 4, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1672, [1,2,4,6])
**VARIABLES**
DISCRETE aux1673 #ElementOne([3, 5, 2, 4, 1, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1673, [3,3,6,6])
**VARIABLES**
DISCRETE aux1674 #ElementOne([5, 2, 4, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1674, [1,2,4,6])
**VARIABLES**
DISCRETE aux1675 #ElementOne([5, 2, 4, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1675, [1,2,4,6])
**VARIABLES**
DISCRETE aux1676 #ElementOne([3, 5, 2, 4, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1676, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux1677 #ElementOne([3, 5, 2, 4, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1677, [2,3,5,6])
**VARIABLES**
DISCRETE aux1678 #ElementOne([3, 5, 2, 4, 1, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1678, [3,3,6,6])
**VARIABLES**
DISCRETE aux1679 #ElementOne([5, 2, 4, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1679, [1,2,4,6])
**VARIABLES**
DISCRETE aux1680 #ElementOne([3, 5, 2, 4, 1, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1680, [3,3,6,6])
**VARIABLES**
DISCRETE aux1681 #ElementOne([4, 3, 2, 5, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1681, [2,4,6,6])
**VARIABLES**
DISCRETE aux1682 #ElementOne([3, 2, 5, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1682, [1,3,5,6])
**VARIABLES**
DISCRETE aux1683 #ElementOne([4, 3, 2, 5, 1, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1683, [4,4,6,6])
**VARIABLES**
DISCRETE aux1684 #ElementOne([3, 2, 5, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1684, [1,3,5,6])
**VARIABLES**
DISCRETE aux1685 #ElementOne([3, 2, 5, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1685, [1,3,5,6])
**VARIABLES**
DISCRETE aux1686 #ElementOne([4, 3, 2, 5, 1, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1686, [4,4,6,6])
**VARIABLES**
DISCRETE aux1687 #ElementOne([4, 3, 2, 5, 1, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1687, [4,4,6,6])
**VARIABLES**
DISCRETE aux1688 #ElementOne([3, 2, 5, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1688, [1,3,5,6])
**VARIABLES**
DISCRETE aux1689 #ElementOne([4, 3, 2, 5, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1689, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux1690 #ElementOne([4, 3, 2, 5, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1690, [2,4,6,6])
**VARIABLES**
DISCRETE aux1691 #ElementOne([3, 2, 5, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1691, [1,3,5,6])
**VARIABLES**
DISCRETE aux1692 #ElementOne([4, 3, 2, 5, 1, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1692, [4,4,6,6])
**VARIABLES**
DISCRETE aux1693 #ElementOne([5, 3, 2, 4, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1693, [2,3,5,6])
**VARIABLES**
DISCRETE aux1694 #ElementOne([3, 2, 4, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1694, [1,4,6,6])
**VARIABLES**
DISCRETE aux1695 #ElementOne([3, 2, 4, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1695, [1,4,6,6])
**VARIABLES**
DISCRETE aux1696 #ElementOne([5, 3, 2, 4, 1, 6], M_00005_00001)
{5..6}
DISCRETE aux1697 #ElementOne([3, 2, 4, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1697, [1,4,6,6])
**VARIABLES**
DISCRETE aux1698 #ElementOne([5, 3, 2, 4, 1, 6], M_00003_00001)
{5..6}
DISCRETE aux1699 #ElementOne([5, 3, 2, 4, 1, 6], M_00002_00001)
{5..6}
DISCRETE aux1700 #ElementOne([5, 3, 2, 4, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1700, [1,1,5,6])
**VARIABLES**
DISCRETE aux1701 #ElementOne([5, 3, 2, 4, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1701, [2,3,5,6])
**VARIABLES**
DISCRETE aux1702 #ElementOne([3, 2, 4, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1702, [1,4,6,6])
**VARIABLES**
DISCRETE aux1703 #ElementOne([5, 3, 2, 4, 1, 6], M_00004_00001)
{5..6}
DISCRETE aux1704 #ElementOne([3, 2, 4, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1704, [1,4,6,6])
**VARIABLES**
DISCRETE aux1705 #ElementOne([4, 5, 2, 3, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1705, [2,2,4,6])
**VARIABLES**
DISCRETE aux1706 #ElementOne([5, 2, 3, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1706, [1,3,5,6])
**VARIABLES**
DISCRETE aux1707 #ElementOne([4, 5, 2, 3, 1, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1707, [4,4,6,6])
**VARIABLES**
DISCRETE aux1708 #ElementOne([5, 2, 3, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1708, [1,3,5,6])
**VARIABLES**
DISCRETE aux1709 #ElementOne([4, 5, 2, 3, 1, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1709, [4,4,6,6])
**VARIABLES**
DISCRETE aux1710 #ElementOne([5, 2, 3, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1710, [1,3,5,6])
**VARIABLES**
DISCRETE aux1711 #ElementOne([4, 5, 2, 3, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1711, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux1712 #ElementOne([4, 5, 2, 3, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1712, [2,2,4,6])
**VARIABLES**
DISCRETE aux1713 #ElementOne([4, 5, 2, 3, 1, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1713, [4,4,6,6])
**VARIABLES**
DISCRETE aux1714 #ElementOne([5, 2, 3, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1714, [1,3,5,6])
**VARIABLES**
DISCRETE aux1715 #ElementOne([5, 2, 3, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1715, [1,3,5,6])
**VARIABLES**
DISCRETE aux1716 #ElementOne([4, 5, 2, 3, 1, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1716, [4,4,6,6])
**VARIABLES**
DISCRETE aux1717 #ElementOne([5, 4, 2, 3, 1, 6], M_00005_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1717, [2,2,4,6])
**VARIABLES**
DISCRETE aux1718 #ElementOne([4, 2, 3, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1718, [1,4,6,6])
**VARIABLES**
DISCRETE aux1719 #ElementOne([4, 2, 3, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1719, [1,4,6,6])
**VARIABLES**
DISCRETE aux1720 #ElementOne([5, 4, 2, 3, 1, 6], M_00005_00001)
{5..6}
DISCRETE aux1721 #ElementOne([4, 2, 3, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1721, [1,4,6,6])
**VARIABLES**
DISCRETE aux1722 #ElementOne([5, 4, 2, 3, 1, 6], M_00003_00001)
{5..6}
DISCRETE aux1723 #ElementOne([5, 4, 2, 3, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1723, [1,1,5,6])
**VARIABLES**
DISCRETE aux1724 #ElementOne([5, 4, 2, 3, 1, 6], M_00004_00003)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux1724, [2,2,4,6])
**VARIABLES**
DISCRETE aux1725 #ElementOne([4, 2, 3, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1725, [1,4,6,6])
**VARIABLES**
DISCRETE aux1726 #ElementOne([5, 4, 2, 3, 1, 6], M_00004_00001)
{5..6}
DISCRETE aux1727 #ElementOne([5, 4, 2, 3, 1, 6], M_00002_00001)
{5..6}
DISCRETE aux1728 #ElementOne([4, 2, 3, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1728, [1,4,6,6])
**VARIABLES**
DISCRETE aux1729 #ElementOne([4, 5, 2, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1729, [1,2,4,6])
**VARIABLES**
DISCRETE aux1730 #ElementOne([3, 4, 5, 2, 1, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1730, [3,3,6,6])
**VARIABLES**
DISCRETE aux1731 #ElementOne([4, 5, 2, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1731, [1,2,4,6])
**VARIABLES**
DISCRETE aux1732 #ElementOne([3, 4, 5, 2, 1, 6], M_00005_00003)
{3..6}
DISCRETE aux1733 #ElementOne([3, 4, 5, 2, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1733, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux1734 #ElementOne([3, 4, 5, 2, 1, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1734, [3,3,6,6])
**VARIABLES**
DISCRETE aux1735 #ElementOne([4, 5, 2, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1735, [1,2,4,6])
**VARIABLES**
DISCRETE aux1736 #ElementOne([3, 4, 5, 2, 1, 6], M_00004_00003)
{3..6}
DISCRETE aux1737 #ElementOne([4, 5, 2, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1737, [1,2,4,6])
**VARIABLES**
DISCRETE aux1738 #ElementOne([3, 4, 5, 2, 1, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1738, [3,3,6,6])
**VARIABLES**
DISCRETE aux1739 #ElementOne([3, 4, 5, 2, 1, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1739, [3,3,6,6])
**VARIABLES**
DISCRETE aux1740 #ElementOne([4, 5, 2, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1740, [1,2,4,6])
**VARIABLES**
DISCRETE aux1741 #ElementOne([5, 4, 2, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1741, [1,2,4,6])
**VARIABLES**
DISCRETE aux1742 #ElementOne([3, 5, 4, 2, 1, 6], M_00005_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1742, [3,3,6,6])
**VARIABLES**
DISCRETE aux1743 #ElementOne([3, 5, 4, 2, 1, 6], M_00005_00003)
{3..6}
DISCRETE aux1744 #ElementOne([5, 4, 2, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1744, [1,2,4,6])
**VARIABLES**
DISCRETE aux1745 #ElementOne([3, 5, 4, 2, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1745, [1,1,3,3,6,6])
**VARIABLES**
DISCRETE aux1746 #ElementOne([3, 5, 4, 2, 1, 6], M_00004_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1746, [3,3,6,6])
**VARIABLES**
DISCRETE aux1747 #ElementOne([3, 5, 4, 2, 1, 6], M_00004_00003)
{3..6}
DISCRETE aux1748 #ElementOne([5, 4, 2, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1748, [1,2,4,6])
**VARIABLES**
DISCRETE aux1749 #ElementOne([5, 4, 2, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1749, [1,2,4,6])
**VARIABLES**
DISCRETE aux1750 #ElementOne([3, 5, 4, 2, 1, 6], M_00003_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1750, [3,3,6,6])
**VARIABLES**
DISCRETE aux1751 #ElementOne([5, 4, 2, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1751, [1,2,4,6])
**VARIABLES**
DISCRETE aux1752 #ElementOne([3, 5, 4, 2, 1, 6], M_00002_00001)
{3..6}
**CONSTRAINTS**
w-inintervalset(aux1752, [3,3,6,6])
**VARIABLES**
DISCRETE aux1753 #ElementOne([3, 5, 2, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1753, [1,3,5,6])
**VARIABLES**
DISCRETE aux1754 #ElementOne([3, 5, 2, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1754, [1,3,5,6])
**VARIABLES**
DISCRETE aux1755 #ElementOne([4, 3, 5, 2, 1, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1755, [4,4,6,6])
**VARIABLES**
DISCRETE aux1756 #ElementOne([4, 3, 5, 2, 1, 6], M_00005_00003)
{3..6}
DISCRETE aux1757 #ElementOne([4, 3, 5, 2, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1757, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux1758 #ElementOne([3, 5, 2, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1758, [1,3,5,6])
**VARIABLES**
DISCRETE aux1759 #ElementOne([4, 3, 5, 2, 1, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1759, [4,4,6,6])
**VARIABLES**
DISCRETE aux1760 #ElementOne([4, 3, 5, 2, 1, 6], M_00004_00003)
{3..6}
DISCRETE aux1761 #ElementOne([4, 3, 5, 2, 1, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1761, [4,4,6,6])
**VARIABLES**
DISCRETE aux1762 #ElementOne([3, 5, 2, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1762, [1,3,5,6])
**VARIABLES**
DISCRETE aux1763 #ElementOne([3, 5, 2, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1763, [1,3,5,6])
**VARIABLES**
DISCRETE aux1764 #ElementOne([4, 3, 5, 2, 1, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1764, [4,4,6,6])
**VARIABLES**
DISCRETE aux1765 #ElementOne([3, 4, 2, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1765, [1,4,6,6])
**VARIABLES**
DISCRETE aux1766 #ElementOne([3, 4, 2, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1766, [1,4,6,6])
**VARIABLES**
DISCRETE aux1767 #ElementOne([5, 3, 4, 2, 1, 6], M_00005_00003)
{3..6}
DISCRETE aux1768 #ElementOne([5, 3, 4, 2, 1, 6], M_00005_00001)
{5..6}
DISCRETE aux1769 #ElementOne([5, 3, 4, 2, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1769, [1,1,5,6])
**VARIABLES**
DISCRETE aux1770 #ElementOne([3, 4, 2, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1770, [1,4,6,6])
**VARIABLES**
DISCRETE aux1771 #ElementOne([5, 3, 4, 2, 1, 6], M_00004_00003)
{3..6}
DISCRETE aux1772 #ElementOne([5, 3, 4, 2, 1, 6], M_00004_00001)
{5..6}
DISCRETE aux1773 #ElementOne([5, 3, 4, 2, 1, 6], M_00002_00001)
{5..6}
DISCRETE aux1774 #ElementOne([3, 4, 2, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1774, [1,4,6,6])
**VARIABLES**
DISCRETE aux1775 #ElementOne([5, 3, 4, 2, 1, 6], M_00003_00001)
{5..6}
DISCRETE aux1776 #ElementOne([3, 4, 2, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1776, [1,4,6,6])
**VARIABLES**
DISCRETE aux1777 #ElementOne([5, 3, 2, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1777, [1,3,5,6])
**VARIABLES**
DISCRETE aux1778 #ElementOne([4, 5, 3, 2, 1, 6], M_00005_00003)
{3..6}
DISCRETE aux1779 #ElementOne([4, 5, 3, 2, 1, 6], M_00005_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1779, [4,4,6,6])
**VARIABLES**
DISCRETE aux1780 #ElementOne([5, 3, 2, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1780, [1,3,5,6])
**VARIABLES**
DISCRETE aux1781 #ElementOne([4, 5, 3, 2, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1781, [1,1,4,4,6,6])
**VARIABLES**
DISCRETE aux1782 #ElementOne([4, 5, 3, 2, 1, 6], M_00004_00003)
{3..6}
DISCRETE aux1783 #ElementOne([4, 5, 3, 2, 1, 6], M_00004_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1783, [4,4,6,6])
**VARIABLES**
DISCRETE aux1784 #ElementOne([5, 3, 2, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1784, [1,3,5,6])
**VARIABLES**
DISCRETE aux1785 #ElementOne([4, 5, 3, 2, 1, 6], M_00003_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1785, [4,4,6,6])
**VARIABLES**
DISCRETE aux1786 #ElementOne([5, 3, 2, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1786, [1,3,5,6])
**VARIABLES**
DISCRETE aux1787 #ElementOne([5, 3, 2, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1787, [1,3,5,6])
**VARIABLES**
DISCRETE aux1788 #ElementOne([4, 5, 3, 2, 1, 6], M_00002_00001)
{4..6}
**CONSTRAINTS**
w-inintervalset(aux1788, [4,4,6,6])
**VARIABLES**
DISCRETE aux1789 #ElementOne([4, 3, 2, 1, 6], aux273)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1789, [1,4,6,6])
**VARIABLES**
DISCRETE aux1790 #ElementOne([5, 4, 3, 2, 1, 6], M_00005_00003)
{3..6}
DISCRETE aux1791 #ElementOne([4, 3, 2, 1, 6], aux278)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1791, [1,4,6,6])
**VARIABLES**
DISCRETE aux1792 #ElementOne([5, 4, 3, 2, 1, 6], M_00005_00001)
{5..6}
DISCRETE aux1793 #ElementOne([5, 4, 3, 2, 1, 6], M_00004_00005)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1793, [1,1,5,6])
**VARIABLES**
DISCRETE aux1794 #ElementOne([5, 4, 3, 2, 1, 6], M_00004_00003)
{3..6}
DISCRETE aux1795 #ElementOne([4, 3, 2, 1, 6], aux280)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1795, [1,4,6,6])
**VARIABLES**
DISCRETE aux1796 #ElementOne([5, 4, 3, 2, 1, 6], M_00004_00001)
{5..6}
DISCRETE aux1797 #ElementOne([4, 3, 2, 1, 6], aux281)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1797, [1,4,6,6])
**VARIABLES**
DISCRETE aux1798 #ElementOne([5, 4, 3, 2, 1, 6], M_00003_00001)
{5..6}
DISCRETE aux1799 #ElementOne([5, 4, 3, 2, 1, 6], M_00002_00001)
{5..6}
DISCRETE aux1800 #ElementOne([4, 3, 2, 1, 6], aux272)
{1..6}
**CONSTRAINTS**
w-inintervalset(aux1800, [1,4,6,6])
**VARIABLES**
**TUPLELIST**
perms 119 6
1 2 3 5 4 6 
1 2 4 3 5 6 
1 2 4 5 3 6 
1 2 5 3 4 6 
1 2 5 4 3 6 
1 3 2 4 5 6 
1 3 2 5 4 6 
1 3 4 2 5 6 
1 3 4 5 2 6 
1 3 5 2 4 6 
1 3 5 4 2 6 
1 4 2 3 5 6 
1 4 2 5 3 6 
1 4 3 2 5 6 
1 4 3 5 2 6 
1 4 5 2 3 6 
1 4 5 3 2 6 
1 5 2 3 4 6 
1 5 2 4 3 6 
1 5 3 2 4 6 
1 5 3 4 2 6 
1 5 4 2 3 6 
1 5 4 3 2 6 
2 1 3 4 5 6 
2 1 3 5 4 6 
2 1 4 3 5 6 
2 1 4 5 3 6 
2 1 5 3 4 6 
2 1 5 4 3 6 
2 3 1 4 5 6 
2 3 1 5 4 6 
2 3 4 1 5 6 
2 3 4 5 1 6 
2 3 5 1 4 6 
2 3 5 4 1 6 
2 4 1 3 5 6 
2 4 1 5 3 6 
2 4 3 1 5 6 
2 4 3 5 1 6 
2 4 5 1 3 6 
2 4 5 3 1 6 
2 5 1 3 4 6 
2 5 1 4 3 6 
2 5 3 1 4 6 
2 5 3 4 1 6 
2 5 4 1 3 6 
2 5 4 3 1 6 
3 1 2 4 5 6 
3 1 2 5 4 6 
3 1 4 2 5 6 
3 1 4 5 2 6 
3 1 5 2 4 6 
3 1 5 4 2 6 
3 2 1 4 5 6 
3 2 1 5 4 6 
3 2 4 1 5 6 
3 2 4 5 1 6 
3 2 5 1 4 6 
3 2 5 4 1 6 
3 4 1 2 5 6 
3 4 1 5 2 6 
3 4 2 1 5 6 
3 4 2 5 1 6 
3 4 5 1 2 6 
3 4 5 2 1 6 
3 5 1 2 4 6 
3 5 1 4 2 6 
3 5 2 1 4 6 
3 5 2 4 1 6 
3 5 4 1 2 6 
3 5 4 2 1 6 
4 1 2 3 5 6 
4 1 2 5 3 6 
4 1 3 2 5 6 
4 1 3 5 2 6 
4 1 5 2 3 6 
4 1 5 3 2 6 
4 2 1 3 5 6 
4 2 1 5 3 6 
4 2 3 1 5 6 
4 2 3 5 1 6 
4 2 5 1 3 6 
4 2 5 3 1 6 
4 3 1 2 5 6 
4 3 1 5 2 6 
4 3 2 1 5 6 
4 3 2 5 1 6 
4 3 5 1 2 6 
4 3 5 2 1 6 
4 5 1 2 3 6 
4 5 1 3 2 6 
4 5 2 1 3 6 
4 5 2 3 1 6 
4 5 3 1 2 6 
4 5 3 2 1 6 
5 1 2 3 4 6 
5 1 2 4 3 6 
5 1 3 2 4 6 
5 1 3 4 2 6 
5 1 4 2 3 6 
5 1 4 3 2 6 
5 2 1 3 4 6 
5 2 1 4 3 6 
5 2 3 1 4 6 
5 2 3 4 1 6 
5 2 4 1 3 6 
5 2 4 3 1 6 
5 3 1 2 4 6 
5 3 1 4 2 6 
5 3 2 1 4 6 
5 3 2 4 1 6 
5 3 4 1 2 6 
5 3 4 2 1 6 
5 4 1 2 3 6 
5 4 1 3 2 6 
5 4 2 1 3 6 
5 4 2 3 1 6 
5 4 3 1 2 6 
5 4 3 2 1 6 
**VARIABLES**
ALIAS perms[119,6]=[[1, 2, 3, 5, 4, 6], [1, 2, 4, 3, 5, 6], [1, 2, 4, 5, 3, 6], [1, 2, 5, 3, 4, 6], [1, 2, 5, 4, 3, 6], [1, 3, 2, 4, 5, 6], [1, 3, 2, 5, 4, 6], [1, 3, 4, 2, 5, 6], [1, 3, 4, 5, 2, 6], [1, 3, 5, 2, 4, 6], [1, 3, 5, 4, 2, 6], [1, 4, 2, 3, 5, 6], [1, 4, 2, 5, 3, 6], [1, 4, 3, 2, 5, 6], [1, 4, 3, 5, 2, 6], [1, 4, 5, 2, 3, 6], [1, 4, 5, 3, 2, 6], [1, 5, 2, 3, 4, 6], [1, 5, 2, 4, 3, 6], [1, 5, 3, 2, 4, 6], [1, 5, 3, 4, 2, 6], [1, 5, 4, 2, 3, 6], [1, 5, 4, 3, 2, 6], [2, 1, 3, 4, 5, 6], [2, 1, 3, 5, 4, 6], [2, 1, 4, 3, 5, 6], [2, 1, 4, 5, 3, 6], [2, 1, 5, 3, 4, 6], [2, 1, 5, 4, 3, 6], [2, 3, 1, 4, 5, 6], [2, 3, 1, 5, 4, 6], [2, 3, 4, 1, 5, 6], [2, 3, 4, 5, 1, 6], [2, 3, 5, 1, 4, 6], [2, 3, 5, 4, 1, 6], [2, 4, 1, 3, 5, 6], [2, 4, 1, 5, 3, 6], [2, 4, 3, 1, 5, 6], [2, 4, 3, 5, 1, 6], [2, 4, 5, 1, 3, 6], [2, 4, 5, 3, 1, 6], [2, 5, 1, 3, 4, 6], [2, 5, 1, 4, 3, 6], [2, 5, 3, 1, 4, 6], [2, 5, 3, 4, 1, 6], [2, 5, 4, 1, 3, 6], [2, 5, 4, 3, 1, 6], [3, 1, 2, 4, 5, 6], [3, 1, 2, 5, 4, 6], [3, 1, 4, 2, 5, 6], [3, 1, 4, 5, 2, 6], [3, 1, 5, 2, 4, 6], [3, 1, 5, 4, 2, 6], [3, 2, 1, 4, 5, 6], [3, 2, 1, 5, 4, 6], [3, 2, 4, 1, 5, 6], [3, 2, 4, 5, 1, 6], [3, 2, 5, 1, 4, 6], [3, 2, 5, 4, 1, 6], [3, 4, 1, 2, 5, 6], [3, 4, 1, 5, 2, 6], [3, 4, 2, 1, 5, 6], [3, 4, 2, 5, 1, 6], [3, 4, 5, 1, 2, 6], [3, 4, 5, 2, 1, 6], [3, 5, 1, 2, 4, 6], [3, 5, 1, 4, 2, 6], [3, 5, 2, 1, 4, 6], [3, 5, 2, 4, 1, 6], [3, 5, 4, 1, 2, 6], [3, 5, 4, 2, 1, 6], [4, 1, 2, 3, 5, 6], [4, 1, 2, 5, 3, 6], [4, 1, 3, 2, 5, 6], [4, 1, 3, 5, 2, 6], [4, 1, 5, 2, 3, 6], [4, 1, 5, 3, 2, 6], [4, 2, 1, 3, 5, 6], [4, 2, 1, 5, 3, 6], [4, 2, 3, 1, 5, 6], [4, 2, 3, 5, 1, 6], [4, 2, 5, 1, 3, 6], [4, 2, 5, 3, 1, 6], [4, 3, 1, 2, 5, 6], [4, 3, 1, 5, 2, 6], [4, 3, 2, 1, 5, 6], [4, 3, 2, 5, 1, 6], [4, 3, 5, 1, 2, 6], [4, 3, 5, 2, 1, 6], [4, 5, 1, 2, 3, 6], [4, 5, 1, 3, 2, 6], [4, 5, 2, 1, 3, 6], [4, 5, 2, 3, 1, 6], [4, 5, 3, 1, 2, 6], [4, 5, 3, 2, 1, 6], [5, 1, 2, 3, 4, 6], [5, 1, 2, 4, 3, 6], [5, 1, 3, 2, 4, 6], [5, 1, 3, 4, 2, 6], [5, 1, 4, 2, 3, 6], [5, 1, 4, 3, 2, 6], [5, 2, 1, 3, 4, 6], [5, 2, 1, 4, 3, 6], [5, 2, 3, 1, 4, 6], [5, 2, 3, 4, 1, 6], [5, 2, 4, 1, 3, 6], [5, 2, 4, 3, 1, 6], [5, 3, 1, 2, 4, 6], [5, 3, 1, 4, 2, 6], [5, 3, 2, 1, 4, 6], [5, 3, 2, 4, 1, 6], [5, 3, 4, 1, 2, 6], [5, 3, 4, 2, 1, 6], [5, 4, 1, 2, 3, 6], [5, 4, 1, 3, 2, 6], [5, 4, 2, 1, 3, 6], [5, 4, 2, 3, 1, 6], [5, 4, 3, 1, 2, 6], [5, 4, 3, 2, 1, 6]]
**TUPLELIST**
inverses 119 6
1 2 3 5 4 6 
1 2 4 3 5 6 
1 2 5 3 4 6 
1 2 4 5 3 6 
1 2 5 4 3 6 
1 3 2 4 5 6 
1 3 2 5 4 6 
1 4 2 3 5 6 
1 5 2 3 4 6 
1 4 2 5 3 6 
1 5 2 4 3 6 
1 3 4 2 5 6 
1 3 5 2 4 6 
1 4 3 2 5 6 
1 5 3 2 4 6 
1 4 5 2 3 6 
1 5 4 2 3 6 
1 3 4 5 2 6 
1 3 5 4 2 6 
1 4 3 5 2 6 
1 5 3 4 2 6 
1 4 5 3 2 6 
1 5 4 3 2 6 
2 1 3 4 5 6 
2 1 3 5 4 6 
2 1 4 3 5 6 
2 1 5 3 4 6 
2 1 4 5 3 6 
2 1 5 4 3 6 
3 1 2 4 5 6 
3 1 2 5 4 6 
4 1 2 3 5 6 
5 1 2 3 4 6 
4 1 2 5 3 6 
5 1 2 4 3 6 
3 1 4 2 5 6 
3 1 5 2 4 6 
4 1 3 2 5 6 
5 1 3 2 4 6 
4 1 5 2 3 6 
5 1 4 2 3 6 
3 1 4 5 2 6 
3 1 5 4 2 6 
4 1 3 5 2 6 
5 1 3 4 2 6 
4 1 5 3 2 6 
5 1 4 3 2 6 
2 3 1 4 5 6 
2 3 1 5 4 6 
2 4 1 3 5 6 
2 5 1 3 4 6 
2 4 1 5 3 6 
2 5 1 4 3 6 
3 2 1 4 5 6 
3 2 1 5 4 6 
4 2 1 3 5 6 
5 2 1 3 4 6 
4 2 1 5 3 6 
5 2 1 4 3 6 
3 4 1 2 5 6 
3 5 1 2 4 6 
4 3 1 2 5 6 
5 3 1 2 4 6 
4 5 1 2 3 6 
5 4 1 2 3 6 
3 4 1 5 2 6 
3 5 1 4 2 6 
4 3 1 5 2 6 
5 3 1 4 2 6 
4 5 1 3 2 6 
5 4 1 3 2 6 
2 3 4 1 5 6 
2 3 5 1 4 6 
2 4 3 1 5 6 
2 5 3 1 4 6 
2 4 5 1 3 6 
2 5 4 1 3 6 
3 2 4 1 5 6 
3 2 5 1 4 6 
4 2 3 1 5 6 
5 2 3 1 4 6 
4 2 5 1 3 6 
5 2 4 1 3 6 
3 4 2 1 5 6 
3 5 2 1 4 6 
4 3 2 1 5 6 
5 3 2 1 4 6 
4 5 2 1 3 6 
5 4 2 1 3 6 
3 4 5 1 2 6 
3 5 4 1 2 6 
4 3 5 1 2 6 
5 3 4 1 2 6 
4 5 3 1 2 6 
5 4 3 1 2 6 
2 3 4 5 1 6 
2 3 5 4 1 6 
2 4 3 5 1 6 
2 5 3 4 1 6 
2 4 5 3 1 6 
2 5 4 3 1 6 
3 2 4 5 1 6 
3 2 5 4 1 6 
4 2 3 5 1 6 
5 2 3 4 1 6 
4 2 5 3 1 6 
5 2 4 3 1 6 
3 4 2 5 1 6 
3 5 2 4 1 6 
4 3 2 5 1 6 
5 3 2 4 1 6 
4 5 2 3 1 6 
5 4 2 3 1 6 
3 4 5 2 1 6 
3 5 4 2 1 6 
4 3 5 2 1 6 
5 3 4 2 1 6 
4 5 3 2 1 6 
5 4 3 2 1 6 
**VARIABLES**
ALIAS inverses[119,6]=[[1, 2, 3, 5, 4, 6], [1, 2, 4, 3, 5, 6], [1, 2, 5, 3, 4, 6], [1, 2, 4, 5, 3, 6], [1, 2, 5, 4, 3, 6], [1, 3, 2, 4, 5, 6], [1, 3, 2, 5, 4, 6], [1, 4, 2, 3, 5, 6], [1, 5, 2, 3, 4, 6], [1, 4, 2, 5, 3, 6], [1, 5, 2, 4, 3, 6], [1, 3, 4, 2, 5, 6], [1, 3, 5, 2, 4, 6], [1, 4, 3, 2, 5, 6], [1, 5, 3, 2, 4, 6], [1, 4, 5, 2, 3, 6], [1, 5, 4, 2, 3, 6], [1, 3, 4, 5, 2, 6], [1, 3, 5, 4, 2, 6], [1, 4, 3, 5, 2, 6], [1, 5, 3, 4, 2, 6], [1, 4, 5, 3, 2, 6], [1, 5, 4, 3, 2, 6], [2, 1, 3, 4, 5, 6], [2, 1, 3, 5, 4, 6], [2, 1, 4, 3, 5, 6], [2, 1, 5, 3, 4, 6], [2, 1, 4, 5, 3, 6], [2, 1, 5, 4, 3, 6], [3, 1, 2, 4, 5, 6], [3, 1, 2, 5, 4, 6], [4, 1, 2, 3, 5, 6], [5, 1, 2, 3, 4, 6], [4, 1, 2, 5, 3, 6], [5, 1, 2, 4, 3, 6], [3, 1, 4, 2, 5, 6], [3, 1, 5, 2, 4, 6], [4, 1, 3, 2, 5, 6], [5, 1, 3, 2, 4, 6], [4, 1, 5, 2, 3, 6], [5, 1, 4, 2, 3, 6], [3, 1, 4, 5, 2, 6], [3, 1, 5, 4, 2, 6], [4, 1, 3, 5, 2, 6], [5, 1, 3, 4, 2, 6], [4, 1, 5, 3, 2, 6], [5, 1, 4, 3, 2, 6], [2, 3, 1, 4, 5, 6], [2, 3, 1, 5, 4, 6], [2, 4, 1, 3, 5, 6], [2, 5, 1, 3, 4, 6], [2, 4, 1, 5, 3, 6], [2, 5, 1, 4, 3, 6], [3, 2, 1, 4, 5, 6], [3, 2, 1, 5, 4, 6], [4, 2, 1, 3, 5, 6], [5, 2, 1, 3, 4, 6], [4, 2, 1, 5, 3, 6], [5, 2, 1, 4, 3, 6], [3, 4, 1, 2, 5, 6], [3, 5, 1, 2, 4, 6], [4, 3, 1, 2, 5, 6], [5, 3, 1, 2, 4, 6], [4, 5, 1, 2, 3, 6], [5, 4, 1, 2, 3, 6], [3, 4, 1, 5, 2, 6], [3, 5, 1, 4, 2, 6], [4, 3, 1, 5, 2, 6], [5, 3, 1, 4, 2, 6], [4, 5, 1, 3, 2, 6], [5, 4, 1, 3, 2, 6], [2, 3, 4, 1, 5, 6], [2, 3, 5, 1, 4, 6], [2, 4, 3, 1, 5, 6], [2, 5, 3, 1, 4, 6], [2, 4, 5, 1, 3, 6], [2, 5, 4, 1, 3, 6], [3, 2, 4, 1, 5, 6], [3, 2, 5, 1, 4, 6], [4, 2, 3, 1, 5, 6], [5, 2, 3, 1, 4, 6], [4, 2, 5, 1, 3, 6], [5, 2, 4, 1, 3, 6], [3, 4, 2, 1, 5, 6], [3, 5, 2, 1, 4, 6], [4, 3, 2, 1, 5, 6], [5, 3, 2, 1, 4, 6], [4, 5, 2, 1, 3, 6], [5, 4, 2, 1, 3, 6], [3, 4, 5, 1, 2, 6], [3, 5, 4, 1, 2, 6], [4, 3, 5, 1, 2, 6], [5, 3, 4, 1, 2, 6], [4, 5, 3, 1, 2, 6], [5, 4, 3, 1, 2, 6], [2, 3, 4, 5, 1, 6], [2, 3, 5, 4, 1, 6], [2, 4, 3, 5, 1, 6], [2, 5, 3, 4, 1, 6], [2, 4, 5, 3, 1, 6], [2, 5, 4, 3, 1, 6], [3, 2, 4, 5, 1, 6], [3, 2, 5, 4, 1, 6], [4, 2, 3, 5, 1, 6], [5, 2, 3, 4, 1, 6], [4, 2, 5, 3, 1, 6], [5, 2, 4, 3, 1, 6], [3, 4, 2, 5, 1, 6], [3, 5, 2, 4, 1, 6], [4, 3, 2, 5, 1, 6], [5, 3, 2, 4, 1, 6], [4, 5, 2, 3, 1, 6], [5, 4, 2, 3, 1, 6], [3, 4, 5, 2, 1, 6], [3, 5, 4, 2, 1, 6], [4, 3, 5, 2, 1, 6], [5, 3, 4, 2, 1, 6], [4, 5, 3, 2, 1, 6], [5, 4, 3, 2, 1, 6]]
**SEARCH**
PRINT[[M_00001_00003],[M_00001_00004],[M_00001_00005],[M_00002_00001],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00003_00001],[M_00003_00002],[M_00003_00004],[M_00003_00005],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00005],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004]]
VARORDER STATIC [M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004]
**CONSTRAINTS**
watchelement_one([2, 3, 5, 4, 6], aux272, aux373)
watchelement_one([1, 2, 3, 5, 4, 6], M_00002_00001, aux374)
watchelement_one([1, 2, 3, 5, 4, 6], M_00003_00001, aux375)
watchelement_one([2, 3, 5, 4, 6], aux281, aux376)
watchelement_one([1, 2, 3, 5, 4, 6], M_00005_00001, aux377)
watchelement_one([2, 3, 5, 4, 6], aux278, aux378)
watchelement_one([1, 2, 3, 5, 4, 6], M_00005_00003, aux379)
watchelement_one([2, 3, 5, 4, 6], aux273, aux380)
watchelement_one([1, 2, 3, 5, 4, 6], M_00004_00001, aux381)
watchelement_one([2, 3, 5, 4, 6], aux280, aux382)
watchelement_one([1, 2, 3, 5, 4, 6], M_00004_00003, aux383)
watchelement_one([1, 2, 3, 5, 4, 6], M_00004_00005, aux384)
watchelement_one([2, 4, 3, 5, 6], aux272, aux385)
watchelement_one([1, 2, 4, 3, 5, 6], M_00002_00001, aux386)
watchelement_one([1, 2, 4, 3, 5, 6], M_00004_00001, aux387)
watchelement_one([2, 4, 3, 5, 6], aux280, aux388)
watchelement_one([1, 2, 4, 3, 5, 6], M_00004_00003, aux389)
watchelement_one([1, 2, 4, 3, 5, 6], M_00004_00005, aux390)
watchelement_one([1, 2, 4, 3, 5, 6], M_00003_00001, aux391)
watchelement_one([2, 4, 3, 5, 6], aux281, aux392)
watchelement_one([1, 2, 4, 3, 5, 6], M_00005_00001, aux393)
watchelement_one([2, 4, 3, 5, 6], aux278, aux394)
watchelement_one([2, 4, 3, 5, 6], aux273, aux395)
watchelement_one([1, 2, 4, 3, 5, 6], M_00005_00003, aux396)
watchelement_one([2, 5, 3, 4, 6], aux272, aux397)
watchelement_one([1, 2, 5, 3, 4, 6], M_00002_00001, aux398)
watchelement_one([1, 2, 5, 3, 4, 6], M_00004_00001, aux399)
watchelement_one([2, 5, 3, 4, 6], aux280, aux400)
watchelement_one([1, 2, 5, 3, 4, 6], M_00004_00005, aux401)
watchelement_one([1, 2, 5, 3, 4, 6], M_00004_00003, aux402)
watchelement_one([1, 2, 5, 3, 4, 6], M_00005_00001, aux403)
watchelement_one([2, 5, 3, 4, 6], aux278, aux404)
watchelement_one([2, 5, 3, 4, 6], aux273, aux405)
watchelement_one([1, 2, 5, 3, 4, 6], M_00005_00003, aux406)
watchelement_one([1, 2, 5, 3, 4, 6], M_00003_00001, aux407)
watchelement_one([2, 5, 3, 4, 6], aux281, aux408)
watchelement_one([2, 4, 5, 3, 6], aux272, aux409)
watchelement_one([1, 2, 4, 5, 3, 6], M_00002_00001, aux410)
watchelement_one([1, 2, 4, 5, 3, 6], M_00005_00001, aux411)
watchelement_one([2, 4, 5, 3, 6], aux278, aux412)
watchelement_one([1, 2, 4, 5, 3, 6], M_00005_00003, aux413)
watchelement_one([2, 4, 5, 3, 6], aux273, aux414)
watchelement_one([1, 2, 4, 5, 3, 6], M_00003_00001, aux415)
watchelement_one([2, 4, 5, 3, 6], aux281, aux416)
watchelement_one([1, 2, 4, 5, 3, 6], M_00004_00001, aux417)
watchelement_one([2, 4, 5, 3, 6], aux280, aux418)
watchelement_one([1, 2, 4, 5, 3, 6], M_00004_00005, aux419)
watchelement_one([1, 2, 4, 5, 3, 6], M_00004_00003, aux420)
watchelement_one([2, 5, 4, 3, 6], aux272, aux421)
watchelement_one([1, 2, 5, 4, 3, 6], M_00002_00001, aux422)
watchelement_one([1, 2, 5, 4, 3, 6], M_00005_00001, aux423)
watchelement_one([2, 5, 4, 3, 6], aux278, aux424)
watchelement_one([2, 5, 4, 3, 6], aux273, aux425)
watchelement_one([1, 2, 5, 4, 3, 6], M_00005_00003, aux426)
watchelement_one([1, 2, 5, 4, 3, 6], M_00004_00001, aux427)
watchelement_one([2, 5, 4, 3, 6], aux280, aux428)
watchelement_one([1, 2, 5, 4, 3, 6], M_00004_00005, aux429)
watchelement_one([1, 2, 5, 4, 3, 6], M_00004_00003, aux430)
watchelement_one([1, 2, 5, 4, 3, 6], M_00003_00001, aux431)
watchelement_one([2, 5, 4, 3, 6], aux281, aux432)
watchelement_one([3, 2, 4, 5, 6], aux272, aux433)
watchelement_one([1, 3, 2, 4, 5, 6], M_00003_00001, aux434)
watchelement_one([3, 2, 4, 5, 6], aux281, aux435)
watchelement_one([1, 3, 2, 4, 5, 6], M_00002_00001, aux436)
watchelement_one([1, 3, 2, 4, 5, 6], M_00004_00001, aux437)
watchelement_one([1, 3, 2, 4, 5, 6], M_00004_00003, aux438)
watchelement_one([3, 2, 4, 5, 6], aux280, aux439)
watchelement_one([1, 3, 2, 4, 5, 6], M_00004_00005, aux440)
watchelement_one([1, 3, 2, 4, 5, 6], M_00005_00001, aux441)
watchelement_one([1, 3, 2, 4, 5, 6], M_00005_00003, aux442)
watchelement_one([3, 2, 4, 5, 6], aux278, aux443)
watchelement_one([3, 2, 4, 5, 6], aux273, aux444)
watchelement_one([3, 2, 5, 4, 6], aux272, aux445)
watchelement_one([1, 3, 2, 5, 4, 6], M_00003_00001, aux446)
watchelement_one([3, 2, 5, 4, 6], aux281, aux447)
watchelement_one([1, 3, 2, 5, 4, 6], M_00002_00001, aux448)
watchelement_one([1, 3, 2, 5, 4, 6], M_00005_00001, aux449)
watchelement_one([1, 3, 2, 5, 4, 6], M_00005_00003, aux450)
watchelement_one([3, 2, 5, 4, 6], aux278, aux451)
watchelement_one([3, 2, 5, 4, 6], aux273, aux452)
watchelement_one([1, 3, 2, 5, 4, 6], M_00004_00001, aux453)
watchelement_one([1, 3, 2, 5, 4, 6], M_00004_00003, aux454)
watchelement_one([3, 2, 5, 4, 6], aux280, aux455)
watchelement_one([1, 3, 2, 5, 4, 6], M_00004_00005, aux456)
watchelement_one([4, 2, 3, 5, 6], aux272, aux457)
watchelement_one([1, 4, 2, 3, 5, 6], M_00003_00001, aux458)
watchelement_one([4, 2, 3, 5, 6], aux281, aux459)
watchelement_one([1, 4, 2, 3, 5, 6], M_00004_00001, aux460)
watchelement_one([1, 4, 2, 3, 5, 6], M_00004_00003, aux461)
watchelement_one([4, 2, 3, 5, 6], aux280, aux462)
watchelement_one([1, 4, 2, 3, 5, 6], M_00004_00005, aux463)
watchelement_one([1, 4, 2, 3, 5, 6], M_00002_00001, aux464)
watchelement_one([1, 4, 2, 3, 5, 6], M_00005_00001, aux465)
watchelement_one([1, 4, 2, 3, 5, 6], M_00005_00003, aux466)
watchelement_one([4, 2, 3, 5, 6], aux273, aux467)
watchelement_one([4, 2, 3, 5, 6], aux278, aux468)
watchelement_one([5, 2, 3, 4, 6], aux272, aux469)
watchelement_one([1, 5, 2, 3, 4, 6], M_00003_00001, aux470)
watchelement_one([5, 2, 3, 4, 6], aux281, aux471)
watchelement_one([1, 5, 2, 3, 4, 6], M_00004_00001, aux472)
watchelement_one([1, 5, 2, 3, 4, 6], M_00004_00003, aux473)
watchelement_one([1, 5, 2, 3, 4, 6], M_00004_00005, aux474)
watchelement_one([5, 2, 3, 4, 6], aux280, aux475)
watchelement_one([1, 5, 2, 3, 4, 6], M_00005_00001, aux476)
watchelement_one([1, 5, 2, 3, 4, 6], M_00005_00003, aux477)
watchelement_one([5, 2, 3, 4, 6], aux273, aux478)
watchelement_one([5, 2, 3, 4, 6], aux278, aux479)
watchelement_one([1, 5, 2, 3, 4, 6], M_00002_00001, aux480)
watchelement_one([4, 2, 5, 3, 6], aux272, aux481)
watchelement_one([1, 4, 2, 5, 3, 6], M_00003_00001, aux482)
watchelement_one([4, 2, 5, 3, 6], aux281, aux483)
watchelement_one([1, 4, 2, 5, 3, 6], M_00005_00001, aux484)
watchelement_one([1, 4, 2, 5, 3, 6], M_00005_00003, aux485)
watchelement_one([4, 2, 5, 3, 6], aux278, aux486)
watchelement_one([4, 2, 5, 3, 6], aux273, aux487)
watchelement_one([1, 4, 2, 5, 3, 6], M_00002_00001, aux488)
watchelement_one([1, 4, 2, 5, 3, 6], M_00004_00001, aux489)
watchelement_one([1, 4, 2, 5, 3, 6], M_00004_00003, aux490)
watchelement_one([1, 4, 2, 5, 3, 6], M_00004_00005, aux491)
watchelement_one([4, 2, 5, 3, 6], aux280, aux492)
watchelement_one([5, 2, 4, 3, 6], aux272, aux493)
watchelement_one([1, 5, 2, 4, 3, 6], M_00003_00001, aux494)
watchelement_one([5, 2, 4, 3, 6], aux281, aux495)
watchelement_one([1, 5, 2, 4, 3, 6], M_00005_00001, aux496)
watchelement_one([1, 5, 2, 4, 3, 6], M_00005_00003, aux497)
watchelement_one([5, 2, 4, 3, 6], aux273, aux498)
watchelement_one([5, 2, 4, 3, 6], aux278, aux499)
watchelement_one([1, 5, 2, 4, 3, 6], M_00004_00001, aux500)
watchelement_one([1, 5, 2, 4, 3, 6], M_00004_00003, aux501)
watchelement_one([1, 5, 2, 4, 3, 6], M_00004_00005, aux502)
watchelement_one([5, 2, 4, 3, 6], aux280, aux503)
watchelement_one([1, 5, 2, 4, 3, 6], M_00002_00001, aux504)
watchelement_one([3, 4, 2, 5, 6], aux272, aux505)
watchelement_one([1, 3, 4, 2, 5, 6], M_00004_00001, aux506)
watchelement_one([3, 4, 2, 5, 6], aux280, aux507)
watchelement_one([1, 3, 4, 2, 5, 6], M_00004_00003, aux508)
watchelement_one([1, 3, 4, 2, 5, 6], M_00004_00005, aux509)
watchelement_one([1, 3, 4, 2, 5, 6], M_00002_00001, aux510)
watchelement_one([1, 3, 4, 2, 5, 6], M_00003_00001, aux511)
watchelement_one([3, 4, 2, 5, 6], aux281, aux512)
watchelement_one([1, 3, 4, 2, 5, 6], M_00005_00001, aux513)
watchelement_one([3, 4, 2, 5, 6], aux273, aux514)
watchelement_one([3, 4, 2, 5, 6], aux278, aux515)
watchelement_one([1, 3, 4, 2, 5, 6], M_00005_00003, aux516)
watchelement_one([3, 5, 2, 4, 6], aux272, aux517)
watchelement_one([1, 3, 5, 2, 4, 6], M_00004_00001, aux518)
watchelement_one([3, 5, 2, 4, 6], aux280, aux519)
watchelement_one([1, 3, 5, 2, 4, 6], M_00004_00005, aux520)
watchelement_one([1, 3, 5, 2, 4, 6], M_00004_00003, aux521)
watchelement_one([1, 3, 5, 2, 4, 6], M_00002_00001, aux522)
watchelement_one([1, 3, 5, 2, 4, 6], M_00005_00001, aux523)
watchelement_one([3, 5, 2, 4, 6], aux273, aux524)
watchelement_one([3, 5, 2, 4, 6], aux278, aux525)
watchelement_one([1, 3, 5, 2, 4, 6], M_00005_00003, aux526)
watchelement_one([1, 3, 5, 2, 4, 6], M_00003_00001, aux527)
watchelement_one([3, 5, 2, 4, 6], aux281, aux528)
watchelement_one([4, 3, 2, 5, 6], aux272, aux529)
watchelement_one([1, 4, 3, 2, 5, 6], M_00004_00001, aux530)
watchelement_one([1, 4, 3, 2, 5, 6], M_00004_00003, aux531)
watchelement_one([4, 3, 2, 5, 6], aux280, aux532)
watchelement_one([1, 4, 3, 2, 5, 6], M_00004_00005, aux533)
watchelement_one([1, 4, 3, 2, 5, 6], M_00003_00001, aux534)
watchelement_one([4, 3, 2, 5, 6], aux281, aux535)
watchelement_one([1, 4, 3, 2, 5, 6], M_00002_00001, aux536)
watchelement_one([1, 4, 3, 2, 5, 6], M_00005_00001, aux537)
watchelement_one([4, 3, 2, 5, 6], aux273, aux538)
watchelement_one([1, 4, 3, 2, 5, 6], M_00005_00003, aux539)
watchelement_one([4, 3, 2, 5, 6], aux278, aux540)
watchelement_one([5, 3, 2, 4, 6], aux272, aux541)
watchelement_one([1, 5, 3, 2, 4, 6], M_00004_00001, aux542)
watchelement_one([1, 5, 3, 2, 4, 6], M_00004_00003, aux543)
watchelement_one([1, 5, 3, 2, 4, 6], M_00004_00005, aux544)
watchelement_one([5, 3, 2, 4, 6], aux280, aux545)
watchelement_one([1, 5, 3, 2, 4, 6], M_00003_00001, aux546)
watchelement_one([5, 3, 2, 4, 6], aux281, aux547)
watchelement_one([1, 5, 3, 2, 4, 6], M_00005_00001, aux548)
watchelement_one([5, 3, 2, 4, 6], aux273, aux549)
watchelement_one([1, 5, 3, 2, 4, 6], M_00005_00003, aux550)
watchelement_one([5, 3, 2, 4, 6], aux278, aux551)
watchelement_one([1, 5, 3, 2, 4, 6], M_00002_00001, aux552)
watchelement_one([4, 5, 2, 3, 6], aux272, aux553)
watchelement_one([1, 4, 5, 2, 3, 6], M_00004_00001, aux554)
watchelement_one([1, 4, 5, 2, 3, 6], M_00004_00005, aux555)
watchelement_one([4, 5, 2, 3, 6], aux280, aux556)
watchelement_one([1, 4, 5, 2, 3, 6], M_00004_00003, aux557)
watchelement_one([1, 4, 5, 2, 3, 6], M_00005_00001, aux558)
watchelement_one([4, 5, 2, 3, 6], aux273, aux559)
watchelement_one([4, 5, 2, 3, 6], aux278, aux560)
watchelement_one([1, 4, 5, 2, 3, 6], M_00005_00003, aux561)
watchelement_one([1, 4, 5, 2, 3, 6], M_00002_00001, aux562)
watchelement_one([1, 4, 5, 2, 3, 6], M_00003_00001, aux563)
watchelement_one([4, 5, 2, 3, 6], aux281, aux564)
watchelement_one([5, 4, 2, 3, 6], aux272, aux565)
watchelement_one([1, 5, 4, 2, 3, 6], M_00004_00001, aux566)
watchelement_one([1, 5, 4, 2, 3, 6], M_00004_00005, aux567)
watchelement_one([1, 5, 4, 2, 3, 6], M_00004_00003, aux568)
watchelement_one([5, 4, 2, 3, 6], aux280, aux569)
watchelement_one([1, 5, 4, 2, 3, 6], M_00005_00001, aux570)
watchelement_one([5, 4, 2, 3, 6], aux273, aux571)
watchelement_one([1, 5, 4, 2, 3, 6], M_00005_00003, aux572)
watchelement_one([5, 4, 2, 3, 6], aux278, aux573)
watchelement_one([1, 5, 4, 2, 3, 6], M_00003_00001, aux574)
watchelement_one([5, 4, 2, 3, 6], aux281, aux575)
watchelement_one([1, 5, 4, 2, 3, 6], M_00002_00001, aux576)
watchelement_one([3, 4, 5, 2, 6], aux272, aux577)
watchelement_one([1, 3, 4, 5, 2, 6], M_00005_00001, aux578)
watchelement_one([3, 4, 5, 2, 6], aux278, aux579)
watchelement_one([1, 3, 4, 5, 2, 6], M_00005_00003, aux580)
watchelement_one([3, 4, 5, 2, 6], aux273, aux581)
watchelement_one([1, 3, 4, 5, 2, 6], M_00002_00001, aux582)
watchelement_one([1, 3, 4, 5, 2, 6], M_00003_00001, aux583)
watchelement_one([3, 4, 5, 2, 6], aux281, aux584)
watchelement_one([1, 3, 4, 5, 2, 6], M_00004_00001, aux585)
watchelement_one([1, 3, 4, 5, 2, 6], M_00004_00005, aux586)
watchelement_one([3, 4, 5, 2, 6], aux280, aux587)
watchelement_one([1, 3, 4, 5, 2, 6], M_00004_00003, aux588)
watchelement_one([3, 5, 4, 2, 6], aux272, aux589)
watchelement_one([1, 3, 5, 4, 2, 6], M_00005_00001, aux590)
watchelement_one([3, 5, 4, 2, 6], aux278, aux591)
watchelement_one([3, 5, 4, 2, 6], aux273, aux592)
watchelement_one([1, 3, 5, 4, 2, 6], M_00005_00003, aux593)
watchelement_one([1, 3, 5, 4, 2, 6], M_00002_00001, aux594)
watchelement_one([1, 3, 5, 4, 2, 6], M_00004_00001, aux595)
watchelement_one([1, 3, 5, 4, 2, 6], M_00004_00005, aux596)
watchelement_one([3, 5, 4, 2, 6], aux280, aux597)
watchelement_one([1, 3, 5, 4, 2, 6], M_00004_00003, aux598)
watchelement_one([1, 3, 5, 4, 2, 6], M_00003_00001, aux599)
watchelement_one([3, 5, 4, 2, 6], aux281, aux600)
watchelement_one([4, 3, 5, 2, 6], aux272, aux601)
watchelement_one([1, 4, 3, 5, 2, 6], M_00005_00001, aux602)
watchelement_one([1, 4, 3, 5, 2, 6], M_00005_00003, aux603)
watchelement_one([4, 3, 5, 2, 6], aux278, aux604)
watchelement_one([4, 3, 5, 2, 6], aux273, aux605)
watchelement_one([1, 4, 3, 5, 2, 6], M_00003_00001, aux606)
watchelement_one([4, 3, 5, 2, 6], aux281, aux607)
watchelement_one([1, 4, 3, 5, 2, 6], M_00002_00001, aux608)
watchelement_one([1, 4, 3, 5, 2, 6], M_00004_00001, aux609)
watchelement_one([1, 4, 3, 5, 2, 6], M_00004_00005, aux610)
watchelement_one([1, 4, 3, 5, 2, 6], M_00004_00003, aux611)
watchelement_one([4, 3, 5, 2, 6], aux280, aux612)
watchelement_one([5, 3, 4, 2, 6], aux272, aux613)
watchelement_one([1, 5, 3, 4, 2, 6], M_00005_00001, aux614)
watchelement_one([1, 5, 3, 4, 2, 6], M_00005_00003, aux615)
watchelement_one([5, 3, 4, 2, 6], aux273, aux616)
watchelement_one([5, 3, 4, 2, 6], aux278, aux617)
watchelement_one([1, 5, 3, 4, 2, 6], M_00003_00001, aux618)
watchelement_one([5, 3, 4, 2, 6], aux281, aux619)
watchelement_one([1, 5, 3, 4, 2, 6], M_00004_00001, aux620)
watchelement_one([1, 5, 3, 4, 2, 6], M_00004_00005, aux621)
watchelement_one([1, 5, 3, 4, 2, 6], M_00004_00003, aux622)
watchelement_one([5, 3, 4, 2, 6], aux280, aux623)
watchelement_one([1, 5, 3, 4, 2, 6], M_00002_00001, aux624)
watchelement_one([4, 5, 3, 2, 6], aux272, aux625)
watchelement_one([1, 4, 5, 3, 2, 6], M_00005_00001, aux626)
watchelement_one([4, 5, 3, 2, 6], aux273, aux627)
watchelement_one([4, 5, 3, 2, 6], aux278, aux628)
watchelement_one([1, 4, 5, 3, 2, 6], M_00005_00003, aux629)
watchelement_one([1, 4, 5, 3, 2, 6], M_00004_00001, aux630)
watchelement_one([1, 4, 5, 3, 2, 6], M_00004_00005, aux631)
watchelement_one([4, 5, 3, 2, 6], aux280, aux632)
watchelement_one([1, 4, 5, 3, 2, 6], M_00004_00003, aux633)
watchelement_one([1, 4, 5, 3, 2, 6], M_00002_00001, aux634)
watchelement_one([1, 4, 5, 3, 2, 6], M_00003_00001, aux635)
watchelement_one([4, 5, 3, 2, 6], aux281, aux636)
watchelement_one([5, 4, 3, 2, 6], aux272, aux637)
watchelement_one([1, 5, 4, 3, 2, 6], M_00005_00001, aux638)
watchelement_one([5, 4, 3, 2, 6], aux273, aux639)
watchelement_one([1, 5, 4, 3, 2, 6], M_00005_00003, aux640)
watchelement_one([5, 4, 3, 2, 6], aux278, aux641)
watchelement_one([1, 5, 4, 3, 2, 6], M_00004_00001, aux642)
watchelement_one([1, 5, 4, 3, 2, 6], M_00004_00005, aux643)
watchelement_one([1, 5, 4, 3, 2, 6], M_00004_00003, aux644)
watchelement_one([5, 4, 3, 2, 6], aux280, aux645)
watchelement_one([1, 5, 4, 3, 2, 6], M_00003_00001, aux646)
watchelement_one([5, 4, 3, 2, 6], aux281, aux647)
watchelement_one([1, 5, 4, 3, 2, 6], M_00002_00001, aux648)
watchelement_one([2, 1, 3, 4, 5, 6], M_00002_00001, aux649)
watchelement_one([1, 3, 4, 5, 6], aux272, aux650)
watchelement_one([1, 3, 4, 5, 6], aux281, aux651)
watchelement_one([2, 1, 3, 4, 5, 6], M_00003_00001, aux652)
watchelement_one([1, 3, 4, 5, 6], aux280, aux653)
watchelement_one([2, 1, 3, 4, 5, 6], M_00004_00001, aux654)
watchelement_one([2, 1, 3, 4, 5, 6], M_00004_00003, aux655)
watchelement_one([2, 1, 3, 4, 5, 6], M_00004_00005, aux656)
watchelement_one([1, 3, 4, 5, 6], aux278, aux657)
watchelement_one([2, 1, 3, 4, 5, 6], M_00005_00001, aux658)
watchelement_one([2, 1, 3, 4, 5, 6], M_00005_00003, aux659)
watchelement_one([1, 3, 4, 5, 6], aux273, aux660)
watchelement_one([2, 1, 3, 5, 4, 6], M_00002_00001, aux661)
watchelement_one([1, 3, 5, 4, 6], aux272, aux662)
watchelement_one([1, 3, 5, 4, 6], aux281, aux663)
watchelement_one([2, 1, 3, 5, 4, 6], M_00003_00001, aux664)
watchelement_one([1, 3, 5, 4, 6], aux278, aux665)
watchelement_one([2, 1, 3, 5, 4, 6], M_00005_00001, aux666)
watchelement_one([2, 1, 3, 5, 4, 6], M_00005_00003, aux667)
watchelement_one([1, 3, 5, 4, 6], aux273, aux668)
watchelement_one([1, 3, 5, 4, 6], aux280, aux669)
watchelement_one([2, 1, 3, 5, 4, 6], M_00004_00001, aux670)
watchelement_one([2, 1, 3, 5, 4, 6], M_00004_00003, aux671)
watchelement_one([2, 1, 3, 5, 4, 6], M_00004_00005, aux672)
watchelement_one([2, 1, 4, 3, 5, 6], M_00002_00001, aux673)
watchelement_one([1, 4, 3, 5, 6], aux272, aux674)
watchelement_one([1, 4, 3, 5, 6], aux280, aux675)
watchelement_one([2, 1, 4, 3, 5, 6], M_00004_00001, aux676)
watchelement_one([2, 1, 4, 3, 5, 6], M_00004_00003, aux677)
watchelement_one([2, 1, 4, 3, 5, 6], M_00004_00005, aux678)
watchelement_one([1, 4, 3, 5, 6], aux281, aux679)
watchelement_one([2, 1, 4, 3, 5, 6], M_00003_00001, aux680)
watchelement_one([1, 4, 3, 5, 6], aux278, aux681)
watchelement_one([2, 1, 4, 3, 5, 6], M_00005_00001, aux682)
watchelement_one([1, 4, 3, 5, 6], aux273, aux683)
watchelement_one([2, 1, 4, 3, 5, 6], M_00005_00003, aux684)
watchelement_one([2, 1, 5, 3, 4, 6], M_00002_00001, aux685)
watchelement_one([1, 5, 3, 4, 6], aux272, aux686)
watchelement_one([1, 5, 3, 4, 6], aux280, aux687)
watchelement_one([2, 1, 5, 3, 4, 6], M_00004_00001, aux688)
watchelement_one([2, 1, 5, 3, 4, 6], M_00004_00005, aux689)
watchelement_one([2, 1, 5, 3, 4, 6], M_00004_00003, aux690)
watchelement_one([1, 5, 3, 4, 6], aux278, aux691)
watchelement_one([2, 1, 5, 3, 4, 6], M_00005_00001, aux692)
watchelement_one([1, 5, 3, 4, 6], aux273, aux693)
watchelement_one([2, 1, 5, 3, 4, 6], M_00005_00003, aux694)
watchelement_one([1, 5, 3, 4, 6], aux281, aux695)
watchelement_one([2, 1, 5, 3, 4, 6], M_00003_00001, aux696)
watchelement_one([2, 1, 4, 5, 3, 6], M_00002_00001, aux697)
watchelement_one([1, 4, 5, 3, 6], aux272, aux698)
watchelement_one([1, 4, 5, 3, 6], aux278, aux699)
watchelement_one([2, 1, 4, 5, 3, 6], M_00005_00001, aux700)
watchelement_one([2, 1, 4, 5, 3, 6], M_00005_00003, aux701)
watchelement_one([1, 4, 5, 3, 6], aux273, aux702)
watchelement_one([1, 4, 5, 3, 6], aux281, aux703)
watchelement_one([2, 1, 4, 5, 3, 6], M_00003_00001, aux704)
watchelement_one([1, 4, 5, 3, 6], aux280, aux705)
watchelement_one([2, 1, 4, 5, 3, 6], M_00004_00001, aux706)
watchelement_one([2, 1, 4, 5, 3, 6], M_00004_00005, aux707)
watchelement_one([2, 1, 4, 5, 3, 6], M_00004_00003, aux708)
watchelement_one([2, 1, 5, 4, 3, 6], M_00002_00001, aux709)
watchelement_one([1, 5, 4, 3, 6], aux272, aux710)
watchelement_one([1, 5, 4, 3, 6], aux278, aux711)
watchelement_one([2, 1, 5, 4, 3, 6], M_00005_00001, aux712)
watchelement_one([1, 5, 4, 3, 6], aux273, aux713)
watchelement_one([2, 1, 5, 4, 3, 6], M_00005_00003, aux714)
watchelement_one([1, 5, 4, 3, 6], aux280, aux715)
watchelement_one([2, 1, 5, 4, 3, 6], M_00004_00001, aux716)
watchelement_one([2, 1, 5, 4, 3, 6], M_00004_00005, aux717)
watchelement_one([2, 1, 5, 4, 3, 6], M_00004_00003, aux718)
watchelement_one([1, 5, 4, 3, 6], aux281, aux719)
watchelement_one([2, 1, 5, 4, 3, 6], M_00003_00001, aux720)
watchelement_one([3, 1, 2, 4, 5, 6], M_00002_00001, aux721)
watchelement_one([1, 2, 4, 5, 6], aux281, aux722)
watchelement_one([3, 1, 2, 4, 5, 6], M_00003_00001, aux723)
watchelement_one([1, 2, 4, 5, 6], aux272, aux724)
watchelement_one([1, 2, 4, 5, 6], aux280, aux725)
watchelement_one([3, 1, 2, 4, 5, 6], M_00004_00003, aux726)
watchelement_one([3, 1, 2, 4, 5, 6], M_00004_00001, aux727)
watchelement_one([3, 1, 2, 4, 5, 6], M_00004_00005, aux728)
watchelement_one([1, 2, 4, 5, 6], aux278, aux729)
watchelement_one([3, 1, 2, 4, 5, 6], M_00005_00003, aux730)
watchelement_one([3, 1, 2, 4, 5, 6], M_00005_00001, aux731)
watchelement_one([1, 2, 4, 5, 6], aux273, aux732)
watchelement_one([3, 1, 2, 5, 4, 6], M_00002_00001, aux733)
watchelement_one([1, 2, 5, 4, 6], aux281, aux734)
watchelement_one([3, 1, 2, 5, 4, 6], M_00003_00001, aux735)
watchelement_one([1, 2, 5, 4, 6], aux272, aux736)
watchelement_one([1, 2, 5, 4, 6], aux278, aux737)
watchelement_one([3, 1, 2, 5, 4, 6], M_00005_00003, aux738)
watchelement_one([3, 1, 2, 5, 4, 6], M_00005_00001, aux739)
watchelement_one([1, 2, 5, 4, 6], aux273, aux740)
watchelement_one([1, 2, 5, 4, 6], aux280, aux741)
watchelement_one([3, 1, 2, 5, 4, 6], M_00004_00003, aux742)
watchelement_one([3, 1, 2, 5, 4, 6], M_00004_00001, aux743)
watchelement_one([3, 1, 2, 5, 4, 6], M_00004_00005, aux744)
watchelement_one([4, 1, 2, 3, 5, 6], M_00002_00001, aux745)
watchelement_one([1, 2, 3, 5, 6], aux281, aux746)
watchelement_one([4, 1, 2, 3, 5, 6], M_00003_00001, aux747)
watchelement_one([1, 2, 3, 5, 6], aux280, aux748)
watchelement_one([4, 1, 2, 3, 5, 6], M_00004_00003, aux749)
watchelement_one([4, 1, 2, 3, 5, 6], M_00004_00001, aux750)
watchelement_one([4, 1, 2, 3, 5, 6], M_00004_00005, aux751)
watchelement_one([1, 2, 3, 5, 6], aux272, aux752)
watchelement_one([1, 2, 3, 5, 6], aux278, aux753)
watchelement_one([4, 1, 2, 3, 5, 6], M_00005_00003, aux754)
watchelement_one([1, 2, 3, 5, 6], aux273, aux755)
watchelement_one([4, 1, 2, 3, 5, 6], M_00005_00001, aux756)
watchelement_one([5, 1, 2, 3, 4, 6], M_00002_00001, aux757)
watchelement_one([1, 2, 3, 4, 6], aux281, aux758)
watchelement_one([5, 1, 2, 3, 4, 6], M_00003_00001, aux759)
watchelement_one([1, 2, 3, 4, 6], aux280, aux760)
watchelement_one([5, 1, 2, 3, 4, 6], M_00004_00003, aux761)
watchelement_one([5, 1, 2, 3, 4, 6], M_00004_00005, aux762)
watchelement_one([5, 1, 2, 3, 4, 6], M_00004_00001, aux763)
watchelement_one([1, 2, 3, 4, 6], aux278, aux764)
watchelement_one([5, 1, 2, 3, 4, 6], M_00005_00003, aux765)
watchelement_one([1, 2, 3, 4, 6], aux273, aux766)
watchelement_one([5, 1, 2, 3, 4, 6], M_00005_00001, aux767)
watchelement_one([1, 2, 3, 4, 6], aux272, aux768)
watchelement_one([4, 1, 2, 5, 3, 6], M_00002_00001, aux769)
watchelement_one([1, 2, 5, 3, 6], aux281, aux770)
watchelement_one([4, 1, 2, 5, 3, 6], M_00003_00001, aux771)
watchelement_one([1, 2, 5, 3, 6], aux278, aux772)
watchelement_one([4, 1, 2, 5, 3, 6], M_00005_00003, aux773)
watchelement_one([4, 1, 2, 5, 3, 6], M_00005_00001, aux774)
watchelement_one([1, 2, 5, 3, 6], aux273, aux775)
watchelement_one([1, 2, 5, 3, 6], aux272, aux776)
watchelement_one([1, 2, 5, 3, 6], aux280, aux777)
watchelement_one([4, 1, 2, 5, 3, 6], M_00004_00003, aux778)
watchelement_one([4, 1, 2, 5, 3, 6], M_00004_00005, aux779)
watchelement_one([4, 1, 2, 5, 3, 6], M_00004_00001, aux780)
watchelement_one([5, 1, 2, 4, 3, 6], M_00002_00001, aux781)
watchelement_one([1, 2, 4, 3, 6], aux281, aux782)
watchelement_one([5, 1, 2, 4, 3, 6], M_00003_00001, aux783)
watchelement_one([1, 2, 4, 3, 6], aux278, aux784)
watchelement_one([5, 1, 2, 4, 3, 6], M_00005_00003, aux785)
watchelement_one([1, 2, 4, 3, 6], aux273, aux786)
watchelement_one([5, 1, 2, 4, 3, 6], M_00005_00001, aux787)
watchelement_one([1, 2, 4, 3, 6], aux280, aux788)
watchelement_one([5, 1, 2, 4, 3, 6], M_00004_00003, aux789)
watchelement_one([5, 1, 2, 4, 3, 6], M_00004_00005, aux790)
watchelement_one([5, 1, 2, 4, 3, 6], M_00004_00001, aux791)
watchelement_one([1, 2, 4, 3, 6], aux272, aux792)
watchelement_one([3, 1, 4, 2, 5, 6], M_00002_00001, aux793)
watchelement_one([1, 4, 2, 5, 6], aux280, aux794)
watchelement_one([3, 1, 4, 2, 5, 6], M_00004_00001, aux795)
watchelement_one([3, 1, 4, 2, 5, 6], M_00004_00003, aux796)
watchelement_one([3, 1, 4, 2, 5, 6], M_00004_00005, aux797)
watchelement_one([1, 4, 2, 5, 6], aux272, aux798)
watchelement_one([1, 4, 2, 5, 6], aux281, aux799)
watchelement_one([3, 1, 4, 2, 5, 6], M_00003_00001, aux800)
watchelement_one([1, 4, 2, 5, 6], aux278, aux801)
watchelement_one([1, 4, 2, 5, 6], aux273, aux802)
watchelement_one([3, 1, 4, 2, 5, 6], M_00005_00001, aux803)
watchelement_one([3, 1, 4, 2, 5, 6], M_00005_00003, aux804)
watchelement_one([3, 1, 5, 2, 4, 6], M_00002_00001, aux805)
watchelement_one([1, 5, 2, 4, 6], aux280, aux806)
watchelement_one([3, 1, 5, 2, 4, 6], M_00004_00001, aux807)
watchelement_one([3, 1, 5, 2, 4, 6], M_00004_00005, aux808)
watchelement_one([3, 1, 5, 2, 4, 6], M_00004_00003, aux809)
watchelement_one([1, 5, 2, 4, 6], aux272, aux810)
watchelement_one([1, 5, 2, 4, 6], aux278, aux811)
watchelement_one([1, 5, 2, 4, 6], aux273, aux812)
watchelement_one([3, 1, 5, 2, 4, 6], M_00005_00001, aux813)
watchelement_one([3, 1, 5, 2, 4, 6], M_00005_00003, aux814)
watchelement_one([1, 5, 2, 4, 6], aux281, aux815)
watchelement_one([3, 1, 5, 2, 4, 6], M_00003_00001, aux816)
watchelement_one([4, 1, 3, 2, 5, 6], M_00002_00001, aux817)
watchelement_one([1, 3, 2, 5, 6], aux280, aux818)
watchelement_one([4, 1, 3, 2, 5, 6], M_00004_00003, aux819)
watchelement_one([4, 1, 3, 2, 5, 6], M_00004_00001, aux820)
watchelement_one([4, 1, 3, 2, 5, 6], M_00004_00005, aux821)
watchelement_one([1, 3, 2, 5, 6], aux281, aux822)
watchelement_one([4, 1, 3, 2, 5, 6], M_00003_00001, aux823)
watchelement_one([1, 3, 2, 5, 6], aux272, aux824)
watchelement_one([1, 3, 2, 5, 6], aux278, aux825)
watchelement_one([1, 3, 2, 5, 6], aux273, aux826)
watchelement_one([4, 1, 3, 2, 5, 6], M_00005_00003, aux827)
watchelement_one([4, 1, 3, 2, 5, 6], M_00005_00001, aux828)
watchelement_one([5, 1, 3, 2, 4, 6], M_00002_00001, aux829)
watchelement_one([1, 3, 2, 4, 6], aux280, aux830)
watchelement_one([5, 1, 3, 2, 4, 6], M_00004_00003, aux831)
watchelement_one([5, 1, 3, 2, 4, 6], M_00004_00005, aux832)
watchelement_one([5, 1, 3, 2, 4, 6], M_00004_00001, aux833)
watchelement_one([1, 3, 2, 4, 6], aux281, aux834)
watchelement_one([5, 1, 3, 2, 4, 6], M_00003_00001, aux835)
watchelement_one([1, 3, 2, 4, 6], aux278, aux836)
watchelement_one([1, 3, 2, 4, 6], aux273, aux837)
watchelement_one([5, 1, 3, 2, 4, 6], M_00005_00003, aux838)
watchelement_one([5, 1, 3, 2, 4, 6], M_00005_00001, aux839)
watchelement_one([1, 3, 2, 4, 6], aux272, aux840)
watchelement_one([4, 1, 5, 2, 3, 6], M_00002_00001, aux841)
watchelement_one([1, 5, 2, 3, 6], aux280, aux842)
watchelement_one([4, 1, 5, 2, 3, 6], M_00004_00005, aux843)
watchelement_one([4, 1, 5, 2, 3, 6], M_00004_00001, aux844)
watchelement_one([4, 1, 5, 2, 3, 6], M_00004_00003, aux845)
watchelement_one([1, 5, 2, 3, 6], aux278, aux846)
watchelement_one([1, 5, 2, 3, 6], aux273, aux847)
watchelement_one([4, 1, 5, 2, 3, 6], M_00005_00001, aux848)
watchelement_one([4, 1, 5, 2, 3, 6], M_00005_00003, aux849)
watchelement_one([1, 5, 2, 3, 6], aux272, aux850)
watchelement_one([1, 5, 2, 3, 6], aux281, aux851)
watchelement_one([4, 1, 5, 2, 3, 6], M_00003_00001, aux852)
watchelement_one([5, 1, 4, 2, 3, 6], M_00002_00001, aux853)
watchelement_one([1, 4, 2, 3, 6], aux280, aux854)
watchelement_one([5, 1, 4, 2, 3, 6], M_00004_00005, aux855)
watchelement_one([5, 1, 4, 2, 3, 6], M_00004_00003, aux856)
watchelement_one([5, 1, 4, 2, 3, 6], M_00004_00001, aux857)
watchelement_one([1, 4, 2, 3, 6], aux278, aux858)
watchelement_one([1, 4, 2, 3, 6], aux273, aux859)
watchelement_one([5, 1, 4, 2, 3, 6], M_00005_00003, aux860)
watchelement_one([5, 1, 4, 2, 3, 6], M_00005_00001, aux861)
watchelement_one([1, 4, 2, 3, 6], aux281, aux862)
watchelement_one([5, 1, 4, 2, 3, 6], M_00003_00001, aux863)
watchelement_one([1, 4, 2, 3, 6], aux272, aux864)
watchelement_one([3, 1, 4, 5, 2, 6], M_00002_00001, aux865)
watchelement_one([1, 4, 5, 2, 6], aux278, aux866)
watchelement_one([3, 1, 4, 5, 2, 6], M_00005_00001, aux867)
watchelement_one([3, 1, 4, 5, 2, 6], M_00005_00003, aux868)
watchelement_one([1, 4, 5, 2, 6], aux273, aux869)
watchelement_one([1, 4, 5, 2, 6], aux272, aux870)
watchelement_one([1, 4, 5, 2, 6], aux281, aux871)
watchelement_one([3, 1, 4, 5, 2, 6], M_00003_00001, aux872)
watchelement_one([1, 4, 5, 2, 6], aux280, aux873)
watchelement_one([3, 1, 4, 5, 2, 6], M_00004_00005, aux874)
watchelement_one([3, 1, 4, 5, 2, 6], M_00004_00001, aux875)
watchelement_one([3, 1, 4, 5, 2, 6], M_00004_00003, aux876)
watchelement_one([3, 1, 5, 4, 2, 6], M_00002_00001, aux877)
watchelement_one([1, 5, 4, 2, 6], aux278, aux878)
watchelement_one([3, 1, 5, 4, 2, 6], M_00005_00001, aux879)
watchelement_one([1, 5, 4, 2, 6], aux273, aux880)
watchelement_one([3, 1, 5, 4, 2, 6], M_00005_00003, aux881)
watchelement_one([1, 5, 4, 2, 6], aux272, aux882)
watchelement_one([1, 5, 4, 2, 6], aux280, aux883)
watchelement_one([3, 1, 5, 4, 2, 6], M_00004_00005, aux884)
watchelement_one([3, 1, 5, 4, 2, 6], M_00004_00001, aux885)
watchelement_one([3, 1, 5, 4, 2, 6], M_00004_00003, aux886)
watchelement_one([1, 5, 4, 2, 6], aux281, aux887)
watchelement_one([3, 1, 5, 4, 2, 6], M_00003_00001, aux888)
watchelement_one([4, 1, 3, 5, 2, 6], M_00002_00001, aux889)
watchelement_one([1, 3, 5, 2, 6], aux278, aux890)
watchelement_one([4, 1, 3, 5, 2, 6], M_00005_00003, aux891)
watchelement_one([4, 1, 3, 5, 2, 6], M_00005_00001, aux892)
watchelement_one([1, 3, 5, 2, 6], aux273, aux893)
watchelement_one([1, 3, 5, 2, 6], aux281, aux894)
watchelement_one([4, 1, 3, 5, 2, 6], M_00003_00001, aux895)
watchelement_one([1, 3, 5, 2, 6], aux272, aux896)
watchelement_one([1, 3, 5, 2, 6], aux280, aux897)
watchelement_one([4, 1, 3, 5, 2, 6], M_00004_00005, aux898)
watchelement_one([4, 1, 3, 5, 2, 6], M_00004_00003, aux899)
watchelement_one([4, 1, 3, 5, 2, 6], M_00004_00001, aux900)
watchelement_one([5, 1, 3, 4, 2, 6], M_00002_00001, aux901)
watchelement_one([1, 3, 4, 2, 6], aux278, aux902)
watchelement_one([5, 1, 3, 4, 2, 6], M_00005_00003, aux903)
watchelement_one([1, 3, 4, 2, 6], aux273, aux904)
watchelement_one([5, 1, 3, 4, 2, 6], M_00005_00001, aux905)
watchelement_one([1, 3, 4, 2, 6], aux281, aux906)
watchelement_one([5, 1, 3, 4, 2, 6], M_00003_00001, aux907)
watchelement_one([1, 3, 4, 2, 6], aux280, aux908)
watchelement_one([5, 1, 3, 4, 2, 6], M_00004_00005, aux909)
watchelement_one([5, 1, 3, 4, 2, 6], M_00004_00003, aux910)
watchelement_one([5, 1, 3, 4, 2, 6], M_00004_00001, aux911)
watchelement_one([1, 3, 4, 2, 6], aux272, aux912)
watchelement_one([4, 1, 5, 3, 2, 6], M_00002_00001, aux913)
watchelement_one([1, 5, 3, 2, 6], aux278, aux914)
watchelement_one([1, 5, 3, 2, 6], aux273, aux915)
watchelement_one([4, 1, 5, 3, 2, 6], M_00005_00001, aux916)
watchelement_one([4, 1, 5, 3, 2, 6], M_00005_00003, aux917)
watchelement_one([1, 5, 3, 2, 6], aux280, aux918)
watchelement_one([4, 1, 5, 3, 2, 6], M_00004_00005, aux919)
watchelement_one([4, 1, 5, 3, 2, 6], M_00004_00001, aux920)
watchelement_one([4, 1, 5, 3, 2, 6], M_00004_00003, aux921)
watchelement_one([1, 5, 3, 2, 6], aux272, aux922)
watchelement_one([1, 5, 3, 2, 6], aux281, aux923)
watchelement_one([4, 1, 5, 3, 2, 6], M_00003_00001, aux924)
watchelement_one([5, 1, 4, 3, 2, 6], M_00002_00001, aux925)
watchelement_one([1, 4, 3, 2, 6], aux278, aux926)
watchelement_one([1, 4, 3, 2, 6], aux273, aux927)
watchelement_one([5, 1, 4, 3, 2, 6], M_00005_00003, aux928)
watchelement_one([5, 1, 4, 3, 2, 6], M_00005_00001, aux929)
watchelement_one([1, 4, 3, 2, 6], aux280, aux930)
watchelement_one([5, 1, 4, 3, 2, 6], M_00004_00005, aux931)
watchelement_one([5, 1, 4, 3, 2, 6], M_00004_00003, aux932)
watchelement_one([5, 1, 4, 3, 2, 6], M_00004_00001, aux933)
watchelement_one([1, 4, 3, 2, 6], aux281, aux934)
watchelement_one([5, 1, 4, 3, 2, 6], M_00003_00001, aux935)
watchelement_one([1, 4, 3, 2, 6], aux272, aux936)
watchelement_one([2, 3, 1, 4, 5, 6], M_00003_00001, aux937)
watchelement_one([3, 1, 4, 5, 6], aux281, aux938)
watchelement_one([3, 1, 4, 5, 6], aux272, aux939)
watchelement_one([2, 3, 1, 4, 5, 6], M_00002_00001, aux940)
watchelement_one([2, 3, 1, 4, 5, 6], M_00004_00003, aux941)
watchelement_one([2, 3, 1, 4, 5, 6], M_00004_00001, aux942)
watchelement_one([3, 1, 4, 5, 6], aux280, aux943)
watchelement_one([2, 3, 1, 4, 5, 6], M_00004_00005, aux944)
watchelement_one([2, 3, 1, 4, 5, 6], M_00005_00003, aux945)
watchelement_one([2, 3, 1, 4, 5, 6], M_00005_00001, aux946)
watchelement_one([3, 1, 4, 5, 6], aux278, aux947)
watchelement_one([3, 1, 4, 5, 6], aux273, aux948)
watchelement_one([2, 3, 1, 5, 4, 6], M_00003_00001, aux949)
watchelement_one([3, 1, 5, 4, 6], aux281, aux950)
watchelement_one([3, 1, 5, 4, 6], aux272, aux951)
watchelement_one([2, 3, 1, 5, 4, 6], M_00002_00001, aux952)
watchelement_one([2, 3, 1, 5, 4, 6], M_00005_00003, aux953)
watchelement_one([2, 3, 1, 5, 4, 6], M_00005_00001, aux954)
watchelement_one([3, 1, 5, 4, 6], aux278, aux955)
watchelement_one([3, 1, 5, 4, 6], aux273, aux956)
watchelement_one([2, 3, 1, 5, 4, 6], M_00004_00003, aux957)
watchelement_one([2, 3, 1, 5, 4, 6], M_00004_00001, aux958)
watchelement_one([3, 1, 5, 4, 6], aux280, aux959)
watchelement_one([2, 3, 1, 5, 4, 6], M_00004_00005, aux960)
watchelement_one([2, 4, 1, 3, 5, 6], M_00003_00001, aux961)
watchelement_one([4, 1, 3, 5, 6], aux281, aux962)
watchelement_one([4, 1, 3, 5, 6], aux272, aux963)
watchelement_one([2, 4, 1, 3, 5, 6], M_00004_00003, aux964)
watchelement_one([2, 4, 1, 3, 5, 6], M_00004_00001, aux965)
watchelement_one([4, 1, 3, 5, 6], aux280, aux966)
watchelement_one([2, 4, 1, 3, 5, 6], M_00004_00005, aux967)
watchelement_one([2, 4, 1, 3, 5, 6], M_00002_00001, aux968)
watchelement_one([2, 4, 1, 3, 5, 6], M_00005_00003, aux969)
watchelement_one([2, 4, 1, 3, 5, 6], M_00005_00001, aux970)
watchelement_one([4, 1, 3, 5, 6], aux273, aux971)
watchelement_one([4, 1, 3, 5, 6], aux278, aux972)
watchelement_one([2, 5, 1, 3, 4, 6], M_00003_00001, aux973)
watchelement_one([5, 1, 3, 4, 6], aux281, aux974)
watchelement_one([5, 1, 3, 4, 6], aux272, aux975)
watchelement_one([2, 5, 1, 3, 4, 6], M_00004_00003, aux976)
watchelement_one([2, 5, 1, 3, 4, 6], M_00004_00001, aux977)
watchelement_one([2, 5, 1, 3, 4, 6], M_00004_00005, aux978)
watchelement_one([5, 1, 3, 4, 6], aux280, aux979)
watchelement_one([2, 5, 1, 3, 4, 6], M_00005_00003, aux980)
watchelement_one([2, 5, 1, 3, 4, 6], M_00005_00001, aux981)
watchelement_one([5, 1, 3, 4, 6], aux273, aux982)
watchelement_one([5, 1, 3, 4, 6], aux278, aux983)
watchelement_one([2, 5, 1, 3, 4, 6], M_00002_00001, aux984)
watchelement_one([2, 4, 1, 5, 3, 6], M_00003_00001, aux985)
watchelement_one([4, 1, 5, 3, 6], aux281, aux986)
watchelement_one([4, 1, 5, 3, 6], aux272, aux987)
watchelement_one([2, 4, 1, 5, 3, 6], M_00005_00003, aux988)
watchelement_one([2, 4, 1, 5, 3, 6], M_00005_00001, aux989)
watchelement_one([4, 1, 5, 3, 6], aux278, aux990)
watchelement_one([4, 1, 5, 3, 6], aux273, aux991)
watchelement_one([2, 4, 1, 5, 3, 6], M_00002_00001, aux992)
watchelement_one([2, 4, 1, 5, 3, 6], M_00004_00003, aux993)
watchelement_one([2, 4, 1, 5, 3, 6], M_00004_00001, aux994)
watchelement_one([2, 4, 1, 5, 3, 6], M_00004_00005, aux995)
watchelement_one([4, 1, 5, 3, 6], aux280, aux996)
watchelement_one([2, 5, 1, 4, 3, 6], M_00003_00001, aux997)
watchelement_one([5, 1, 4, 3, 6], aux281, aux998)
watchelement_one([5, 1, 4, 3, 6], aux272, aux999)
watchelement_one([2, 5, 1, 4, 3, 6], M_00005_00003, aux1000)
watchelement_one([2, 5, 1, 4, 3, 6], M_00005_00001, aux1001)
watchelement_one([5, 1, 4, 3, 6], aux273, aux1002)
watchelement_one([5, 1, 4, 3, 6], aux278, aux1003)
watchelement_one([2, 5, 1, 4, 3, 6], M_00004_00003, aux1004)
watchelement_one([2, 5, 1, 4, 3, 6], M_00004_00001, aux1005)
watchelement_one([2, 5, 1, 4, 3, 6], M_00004_00005, aux1006)
watchelement_one([5, 1, 4, 3, 6], aux280, aux1007)
watchelement_one([2, 5, 1, 4, 3, 6], M_00002_00001, aux1008)
watchelement_one([2, 1, 4, 5, 6], aux281, aux1009)
watchelement_one([3, 2, 1, 4, 5, 6], M_00003_00001, aux1010)
watchelement_one([3, 2, 1, 4, 5, 6], M_00002_00001, aux1011)
watchelement_one([2, 1, 4, 5, 6], aux272, aux1012)
watchelement_one([3, 2, 1, 4, 5, 6], M_00004_00003, aux1013)
watchelement_one([2, 1, 4, 5, 6], aux280, aux1014)
watchelement_one([3, 2, 1, 4, 5, 6], M_00004_00001, aux1015)
watchelement_one([3, 2, 1, 4, 5, 6], M_00004_00005, aux1016)
watchelement_one([3, 2, 1, 4, 5, 6], M_00005_00003, aux1017)
watchelement_one([2, 1, 4, 5, 6], aux278, aux1018)
watchelement_one([3, 2, 1, 4, 5, 6], M_00005_00001, aux1019)
watchelement_one([2, 1, 4, 5, 6], aux273, aux1020)
watchelement_one([2, 1, 5, 4, 6], aux281, aux1021)
watchelement_one([3, 2, 1, 5, 4, 6], M_00003_00001, aux1022)
watchelement_one([3, 2, 1, 5, 4, 6], M_00002_00001, aux1023)
watchelement_one([2, 1, 5, 4, 6], aux272, aux1024)
watchelement_one([3, 2, 1, 5, 4, 6], M_00005_00003, aux1025)
watchelement_one([2, 1, 5, 4, 6], aux278, aux1026)
watchelement_one([3, 2, 1, 5, 4, 6], M_00005_00001, aux1027)
watchelement_one([2, 1, 5, 4, 6], aux273, aux1028)
watchelement_one([3, 2, 1, 5, 4, 6], M_00004_00003, aux1029)
watchelement_one([2, 1, 5, 4, 6], aux280, aux1030)
watchelement_one([3, 2, 1, 5, 4, 6], M_00004_00001, aux1031)
watchelement_one([3, 2, 1, 5, 4, 6], M_00004_00005, aux1032)
watchelement_one([2, 1, 3, 5, 6], aux281, aux1033)
watchelement_one([4, 2, 1, 3, 5, 6], M_00003_00001, aux1034)
watchelement_one([4, 2, 1, 3, 5, 6], M_00002_00001, aux1035)
watchelement_one([4, 2, 1, 3, 5, 6], M_00004_00003, aux1036)
watchelement_one([2, 1, 3, 5, 6], aux280, aux1037)
watchelement_one([4, 2, 1, 3, 5, 6], M_00004_00001, aux1038)
watchelement_one([4, 2, 1, 3, 5, 6], M_00004_00005, aux1039)
watchelement_one([2, 1, 3, 5, 6], aux272, aux1040)
watchelement_one([4, 2, 1, 3, 5, 6], M_00005_00003, aux1041)
watchelement_one([2, 1, 3, 5, 6], aux278, aux1042)
watchelement_one([2, 1, 3, 5, 6], aux273, aux1043)
watchelement_one([4, 2, 1, 3, 5, 6], M_00005_00001, aux1044)
watchelement_one([2, 1, 3, 4, 6], aux281, aux1045)
watchelement_one([5, 2, 1, 3, 4, 6], M_00003_00001, aux1046)
watchelement_one([5, 2, 1, 3, 4, 6], M_00002_00001, aux1047)
watchelement_one([5, 2, 1, 3, 4, 6], M_00004_00003, aux1048)
watchelement_one([2, 1, 3, 4, 6], aux280, aux1049)
watchelement_one([5, 2, 1, 3, 4, 6], M_00004_00005, aux1050)
watchelement_one([5, 2, 1, 3, 4, 6], M_00004_00001, aux1051)
watchelement_one([5, 2, 1, 3, 4, 6], M_00005_00003, aux1052)
watchelement_one([2, 1, 3, 4, 6], aux278, aux1053)
watchelement_one([2, 1, 3, 4, 6], aux273, aux1054)
watchelement_one([5, 2, 1, 3, 4, 6], M_00005_00001, aux1055)
watchelement_one([2, 1, 3, 4, 6], aux272, aux1056)
watchelement_one([2, 1, 5, 3, 6], aux281, aux1057)
watchelement_one([4, 2, 1, 5, 3, 6], M_00003_00001, aux1058)
watchelement_one([4, 2, 1, 5, 3, 6], M_00002_00001, aux1059)
watchelement_one([4, 2, 1, 5, 3, 6], M_00005_00003, aux1060)
watchelement_one([2, 1, 5, 3, 6], aux278, aux1061)
watchelement_one([4, 2, 1, 5, 3, 6], M_00005_00001, aux1062)
watchelement_one([2, 1, 5, 3, 6], aux273, aux1063)
watchelement_one([2, 1, 5, 3, 6], aux272, aux1064)
watchelement_one([4, 2, 1, 5, 3, 6], M_00004_00003, aux1065)
watchelement_one([2, 1, 5, 3, 6], aux280, aux1066)
watchelement_one([4, 2, 1, 5, 3, 6], M_00004_00005, aux1067)
watchelement_one([4, 2, 1, 5, 3, 6], M_00004_00001, aux1068)
watchelement_one([2, 1, 4, 3, 6], aux281, aux1069)
watchelement_one([5, 2, 1, 4, 3, 6], M_00003_00001, aux1070)
watchelement_one([5, 2, 1, 4, 3, 6], M_00002_00001, aux1071)
watchelement_one([5, 2, 1, 4, 3, 6], M_00005_00003, aux1072)
watchelement_one([2, 1, 4, 3, 6], aux278, aux1073)
watchelement_one([2, 1, 4, 3, 6], aux273, aux1074)
watchelement_one([5, 2, 1, 4, 3, 6], M_00005_00001, aux1075)
watchelement_one([5, 2, 1, 4, 3, 6], M_00004_00003, aux1076)
watchelement_one([2, 1, 4, 3, 6], aux280, aux1077)
watchelement_one([5, 2, 1, 4, 3, 6], M_00004_00005, aux1078)
watchelement_one([5, 2, 1, 4, 3, 6], M_00004_00001, aux1079)
watchelement_one([2, 1, 4, 3, 6], aux272, aux1080)
watchelement_one([3, 4, 1, 2, 5, 6], M_00003_00001, aux1081)
watchelement_one([4, 1, 2, 5, 6], aux281, aux1082)
watchelement_one([3, 4, 1, 2, 5, 6], M_00004_00003, aux1083)
watchelement_one([3, 4, 1, 2, 5, 6], M_00004_00001, aux1084)
watchelement_one([4, 1, 2, 5, 6], aux280, aux1085)
watchelement_one([3, 4, 1, 2, 5, 6], M_00004_00005, aux1086)
watchelement_one([4, 1, 2, 5, 6], aux272, aux1087)
watchelement_one([3, 4, 1, 2, 5, 6], M_00002_00001, aux1088)
watchelement_one([3, 4, 1, 2, 5, 6], M_00005_00003, aux1089)
watchelement_one([4, 1, 2, 5, 6], aux273, aux1090)
watchelement_one([3, 4, 1, 2, 5, 6], M_00005_00001, aux1091)
watchelement_one([4, 1, 2, 5, 6], aux278, aux1092)
watchelement_one([3, 5, 1, 2, 4, 6], M_00003_00001, aux1093)
watchelement_one([5, 1, 2, 4, 6], aux281, aux1094)
watchelement_one([3, 5, 1, 2, 4, 6], M_00004_00003, aux1095)
watchelement_one([3, 5, 1, 2, 4, 6], M_00004_00001, aux1096)
watchelement_one([3, 5, 1, 2, 4, 6], M_00004_00005, aux1097)
watchelement_one([5, 1, 2, 4, 6], aux280, aux1098)
watchelement_one([5, 1, 2, 4, 6], aux272, aux1099)
watchelement_one([3, 5, 1, 2, 4, 6], M_00005_00003, aux1100)
watchelement_one([5, 1, 2, 4, 6], aux273, aux1101)
watchelement_one([3, 5, 1, 2, 4, 6], M_00005_00001, aux1102)
watchelement_one([5, 1, 2, 4, 6], aux278, aux1103)
watchelement_one([3, 5, 1, 2, 4, 6], M_00002_00001, aux1104)
watchelement_one([3, 1, 2, 5, 6], aux281, aux1105)
watchelement_one([4, 3, 1, 2, 5, 6], M_00003_00001, aux1106)
watchelement_one([4, 3, 1, 2, 5, 6], M_00004_00003, aux1107)
watchelement_one([3, 1, 2, 5, 6], aux280, aux1108)
watchelement_one([4, 3, 1, 2, 5, 6], M_00004_00001, aux1109)
watchelement_one([4, 3, 1, 2, 5, 6], M_00004_00005, aux1110)
watchelement_one([4, 3, 1, 2, 5, 6], M_00002_00001, aux1111)
watchelement_one([3, 1, 2, 5, 6], aux272, aux1112)
watchelement_one([4, 3, 1, 2, 5, 6], M_00005_00003, aux1113)
watchelement_one([3, 1, 2, 5, 6], aux273, aux1114)
watchelement_one([3, 1, 2, 5, 6], aux278, aux1115)
watchelement_one([4, 3, 1, 2, 5, 6], M_00005_00001, aux1116)
watchelement_one([3, 1, 2, 4, 6], aux281, aux1117)
watchelement_one([5, 3, 1, 2, 4, 6], M_00003_00001, aux1118)
watchelement_one([5, 3, 1, 2, 4, 6], M_00004_00003, aux1119)
watchelement_one([3, 1, 2, 4, 6], aux280, aux1120)
watchelement_one([5, 3, 1, 2, 4, 6], M_00004_00005, aux1121)
watchelement_one([5, 3, 1, 2, 4, 6], M_00004_00001, aux1122)
watchelement_one([5, 3, 1, 2, 4, 6], M_00002_00001, aux1123)
watchelement_one([5, 3, 1, 2, 4, 6], M_00005_00003, aux1124)
watchelement_one([3, 1, 2, 4, 6], aux273, aux1125)
watchelement_one([3, 1, 2, 4, 6], aux278, aux1126)
watchelement_one([5, 3, 1, 2, 4, 6], M_00005_00001, aux1127)
watchelement_one([3, 1, 2, 4, 6], aux272, aux1128)
watchelement_one([4, 5, 1, 2, 3, 6], M_00003_00001, aux1129)
watchelement_one([5, 1, 2, 3, 6], aux281, aux1130)
watchelement_one([4, 5, 1, 2, 3, 6], M_00004_00003, aux1131)
watchelement_one([4, 5, 1, 2, 3, 6], M_00004_00005, aux1132)
watchelement_one([4, 5, 1, 2, 3, 6], M_00004_00001, aux1133)
watchelement_one([5, 1, 2, 3, 6], aux280, aux1134)
watchelement_one([4, 5, 1, 2, 3, 6], M_00005_00003, aux1135)
watchelement_one([5, 1, 2, 3, 6], aux273, aux1136)
watchelement_one([4, 5, 1, 2, 3, 6], M_00005_00001, aux1137)
watchelement_one([5, 1, 2, 3, 6], aux278, aux1138)
watchelement_one([5, 1, 2, 3, 6], aux272, aux1139)
watchelement_one([4, 5, 1, 2, 3, 6], M_00002_00001, aux1140)
watchelement_one([4, 1, 2, 3, 6], aux281, aux1141)
watchelement_one([5, 4, 1, 2, 3, 6], M_00003_00001, aux1142)
watchelement_one([5, 4, 1, 2, 3, 6], M_00004_00003, aux1143)
watchelement_one([5, 4, 1, 2, 3, 6], M_00004_00005, aux1144)
watchelement_one([4, 1, 2, 3, 6], aux280, aux1145)
watchelement_one([5, 4, 1, 2, 3, 6], M_00004_00001, aux1146)
watchelement_one([5, 4, 1, 2, 3, 6], M_00005_00003, aux1147)
watchelement_one([4, 1, 2, 3, 6], aux273, aux1148)
watchelement_one([4, 1, 2, 3, 6], aux278, aux1149)
watchelement_one([5, 4, 1, 2, 3, 6], M_00005_00001, aux1150)
watchelement_one([5, 4, 1, 2, 3, 6], M_00002_00001, aux1151)
watchelement_one([4, 1, 2, 3, 6], aux272, aux1152)
watchelement_one([3, 4, 1, 5, 2, 6], M_00003_00001, aux1153)
watchelement_one([4, 1, 5, 2, 6], aux281, aux1154)
watchelement_one([3, 4, 1, 5, 2, 6], M_00005_00003, aux1155)
watchelement_one([3, 4, 1, 5, 2, 6], M_00005_00001, aux1156)
watchelement_one([4, 1, 5, 2, 6], aux278, aux1157)
watchelement_one([4, 1, 5, 2, 6], aux273, aux1158)
watchelement_one([4, 1, 5, 2, 6], aux272, aux1159)
watchelement_one([3, 4, 1, 5, 2, 6], M_00002_00001, aux1160)
watchelement_one([3, 4, 1, 5, 2, 6], M_00004_00003, aux1161)
watchelement_one([3, 4, 1, 5, 2, 6], M_00004_00005, aux1162)
watchelement_one([3, 4, 1, 5, 2, 6], M_00004_00001, aux1163)
watchelement_one([4, 1, 5, 2, 6], aux280, aux1164)
watchelement_one([3, 5, 1, 4, 2, 6], M_00003_00001, aux1165)
watchelement_one([5, 1, 4, 2, 6], aux281, aux1166)
watchelement_one([3, 5, 1, 4, 2, 6], M_00005_00003, aux1167)
watchelement_one([3, 5, 1, 4, 2, 6], M_00005_00001, aux1168)
watchelement_one([5, 1, 4, 2, 6], aux273, aux1169)
watchelement_one([5, 1, 4, 2, 6], aux278, aux1170)
watchelement_one([5, 1, 4, 2, 6], aux272, aux1171)
watchelement_one([3, 5, 1, 4, 2, 6], M_00004_00003, aux1172)
watchelement_one([3, 5, 1, 4, 2, 6], M_00004_00005, aux1173)
watchelement_one([3, 5, 1, 4, 2, 6], M_00004_00001, aux1174)
watchelement_one([5, 1, 4, 2, 6], aux280, aux1175)
watchelement_one([3, 5, 1, 4, 2, 6], M_00002_00001, aux1176)
watchelement_one([3, 1, 5, 2, 6], aux281, aux1177)
watchelement_one([4, 3, 1, 5, 2, 6], M_00003_00001, aux1178)
watchelement_one([4, 3, 1, 5, 2, 6], M_00005_00003, aux1179)
watchelement_one([3, 1, 5, 2, 6], aux278, aux1180)
watchelement_one([4, 3, 1, 5, 2, 6], M_00005_00001, aux1181)
watchelement_one([3, 1, 5, 2, 6], aux273, aux1182)
watchelement_one([4, 3, 1, 5, 2, 6], M_00002_00001, aux1183)
watchelement_one([3, 1, 5, 2, 6], aux272, aux1184)
watchelement_one([4, 3, 1, 5, 2, 6], M_00004_00003, aux1185)
watchelement_one([4, 3, 1, 5, 2, 6], M_00004_00005, aux1186)
watchelement_one([3, 1, 5, 2, 6], aux280, aux1187)
watchelement_one([4, 3, 1, 5, 2, 6], M_00004_00001, aux1188)
watchelement_one([3, 1, 4, 2, 6], aux281, aux1189)
watchelement_one([5, 3, 1, 4, 2, 6], M_00003_00001, aux1190)
watchelement_one([5, 3, 1, 4, 2, 6], M_00005_00003, aux1191)
watchelement_one([3, 1, 4, 2, 6], aux278, aux1192)
watchelement_one([3, 1, 4, 2, 6], aux273, aux1193)
watchelement_one([5, 3, 1, 4, 2, 6], M_00005_00001, aux1194)
watchelement_one([5, 3, 1, 4, 2, 6], M_00002_00001, aux1195)
watchelement_one([5, 3, 1, 4, 2, 6], M_00004_00003, aux1196)
watchelement_one([5, 3, 1, 4, 2, 6], M_00004_00005, aux1197)
watchelement_one([3, 1, 4, 2, 6], aux280, aux1198)
watchelement_one([5, 3, 1, 4, 2, 6], M_00004_00001, aux1199)
watchelement_one([3, 1, 4, 2, 6], aux272, aux1200)
watchelement_one([4, 5, 1, 3, 2, 6], M_00003_00001, aux1201)
watchelement_one([5, 1, 3, 2, 6], aux281, aux1202)
watchelement_one([4, 5, 1, 3, 2, 6], M_00005_00003, aux1203)
watchelement_one([5, 1, 3, 2, 6], aux273, aux1204)
watchelement_one([4, 5, 1, 3, 2, 6], M_00005_00001, aux1205)
watchelement_one([5, 1, 3, 2, 6], aux278, aux1206)
watchelement_one([4, 5, 1, 3, 2, 6], M_00004_00003, aux1207)
watchelement_one([4, 5, 1, 3, 2, 6], M_00004_00005, aux1208)
watchelement_one([4, 5, 1, 3, 2, 6], M_00004_00001, aux1209)
watchelement_one([5, 1, 3, 2, 6], aux280, aux1210)
watchelement_one([5, 1, 3, 2, 6], aux272, aux1211)
watchelement_one([4, 5, 1, 3, 2, 6], M_00002_00001, aux1212)
watchelement_one([4, 1, 3, 2, 6], aux281, aux1213)
watchelement_one([5, 4, 1, 3, 2, 6], M_00003_00001, aux1214)
watchelement_one([5, 4, 1, 3, 2, 6], M_00005_00003, aux1215)
watchelement_one([4, 1, 3, 2, 6], aux273, aux1216)
watchelement_one([4, 1, 3, 2, 6], aux278, aux1217)
watchelement_one([5, 4, 1, 3, 2, 6], M_00005_00001, aux1218)
watchelement_one([5, 4, 1, 3, 2, 6], M_00004_00003, aux1219)
watchelement_one([5, 4, 1, 3, 2, 6], M_00004_00005, aux1220)
watchelement_one([4, 1, 3, 2, 6], aux280, aux1221)
watchelement_one([5, 4, 1, 3, 2, 6], M_00004_00001, aux1222)
watchelement_one([5, 4, 1, 3, 2, 6], M_00002_00001, aux1223)
watchelement_one([4, 1, 3, 2, 6], aux272, aux1224)
watchelement_one([2, 3, 4, 1, 5, 6], M_00004_00001, aux1225)
watchelement_one([3, 4, 1, 5, 6], aux280, aux1226)
watchelement_one([2, 3, 4, 1, 5, 6], M_00004_00003, aux1227)
watchelement_one([2, 3, 4, 1, 5, 6], M_00004_00005, aux1228)
watchelement_one([3, 4, 1, 5, 6], aux272, aux1229)
watchelement_one([2, 3, 4, 1, 5, 6], M_00002_00001, aux1230)
watchelement_one([2, 3, 4, 1, 5, 6], M_00003_00001, aux1231)
watchelement_one([3, 4, 1, 5, 6], aux281, aux1232)
watchelement_one([3, 4, 1, 5, 6], aux273, aux1233)
watchelement_one([2, 3, 4, 1, 5, 6], M_00005_00001, aux1234)
watchelement_one([3, 4, 1, 5, 6], aux278, aux1235)
watchelement_one([2, 3, 4, 1, 5, 6], M_00005_00003, aux1236)
watchelement_one([2, 3, 5, 1, 4, 6], M_00004_00001, aux1237)
watchelement_one([3, 5, 1, 4, 6], aux280, aux1238)
watchelement_one([2, 3, 5, 1, 4, 6], M_00004_00005, aux1239)
watchelement_one([2, 3, 5, 1, 4, 6], M_00004_00003, aux1240)
watchelement_one([3, 5, 1, 4, 6], aux272, aux1241)
watchelement_one([2, 3, 5, 1, 4, 6], M_00002_00001, aux1242)
watchelement_one([3, 5, 1, 4, 6], aux273, aux1243)
watchelement_one([2, 3, 5, 1, 4, 6], M_00005_00001, aux1244)
watchelement_one([3, 5, 1, 4, 6], aux278, aux1245)
watchelement_one([2, 3, 5, 1, 4, 6], M_00005_00003, aux1246)
watchelement_one([2, 3, 5, 1, 4, 6], M_00003_00001, aux1247)
watchelement_one([3, 5, 1, 4, 6], aux281, aux1248)
watchelement_one([2, 4, 3, 1, 5, 6], M_00004_00001, aux1249)
watchelement_one([2, 4, 3, 1, 5, 6], M_00004_00003, aux1250)
watchelement_one([4, 3, 1, 5, 6], aux280, aux1251)
watchelement_one([2, 4, 3, 1, 5, 6], M_00004_00005, aux1252)
watchelement_one([4, 3, 1, 5, 6], aux272, aux1253)
watchelement_one([2, 4, 3, 1, 5, 6], M_00003_00001, aux1254)
watchelement_one([4, 3, 1, 5, 6], aux281, aux1255)
watchelement_one([2, 4, 3, 1, 5, 6], M_00002_00001, aux1256)
watchelement_one([4, 3, 1, 5, 6], aux273, aux1257)
watchelement_one([2, 4, 3, 1, 5, 6], M_00005_00001, aux1258)
watchelement_one([2, 4, 3, 1, 5, 6], M_00005_00003, aux1259)
watchelement_one([4, 3, 1, 5, 6], aux278, aux1260)
watchelement_one([2, 5, 3, 1, 4, 6], M_00004_00001, aux1261)
watchelement_one([2, 5, 3, 1, 4, 6], M_00004_00003, aux1262)
watchelement_one([2, 5, 3, 1, 4, 6], M_00004_00005, aux1263)
watchelement_one([5, 3, 1, 4, 6], aux280, aux1264)
watchelement_one([5, 3, 1, 4, 6], aux272, aux1265)
watchelement_one([2, 5, 3, 1, 4, 6], M_00003_00001, aux1266)
watchelement_one([5, 3, 1, 4, 6], aux281, aux1267)
watchelement_one([5, 3, 1, 4, 6], aux273, aux1268)
watchelement_one([2, 5, 3, 1, 4, 6], M_00005_00001, aux1269)
watchelement_one([2, 5, 3, 1, 4, 6], M_00005_00003, aux1270)
watchelement_one([5, 3, 1, 4, 6], aux278, aux1271)
watchelement_one([2, 5, 3, 1, 4, 6], M_00002_00001, aux1272)
watchelement_one([2, 4, 5, 1, 3, 6], M_00004_00001, aux1273)
watchelement_one([2, 4, 5, 1, 3, 6], M_00004_00005, aux1274)
watchelement_one([4, 5, 1, 3, 6], aux280, aux1275)
watchelement_one([2, 4, 5, 1, 3, 6], M_00004_00003, aux1276)
watchelement_one([4, 5, 1, 3, 6], aux272, aux1277)
watchelement_one([4, 5, 1, 3, 6], aux273, aux1278)
watchelement_one([2, 4, 5, 1, 3, 6], M_00005_00001, aux1279)
watchelement_one([4, 5, 1, 3, 6], aux278, aux1280)
watchelement_one([2, 4, 5, 1, 3, 6], M_00005_00003, aux1281)
watchelement_one([2, 4, 5, 1, 3, 6], M_00002_00001, aux1282)
watchelement_one([2, 4, 5, 1, 3, 6], M_00003_00001, aux1283)
watchelement_one([4, 5, 1, 3, 6], aux281, aux1284)
watchelement_one([2, 5, 4, 1, 3, 6], M_00004_00001, aux1285)
watchelement_one([2, 5, 4, 1, 3, 6], M_00004_00005, aux1286)
watchelement_one([2, 5, 4, 1, 3, 6], M_00004_00003, aux1287)
watchelement_one([5, 4, 1, 3, 6], aux280, aux1288)
watchelement_one([5, 4, 1, 3, 6], aux272, aux1289)
watchelement_one([5, 4, 1, 3, 6], aux273, aux1290)
watchelement_one([2, 5, 4, 1, 3, 6], M_00005_00001, aux1291)
watchelement_one([2, 5, 4, 1, 3, 6], M_00005_00003, aux1292)
watchelement_one([5, 4, 1, 3, 6], aux278, aux1293)
watchelement_one([2, 5, 4, 1, 3, 6], M_00003_00001, aux1294)
watchelement_one([5, 4, 1, 3, 6], aux281, aux1295)
watchelement_one([2, 5, 4, 1, 3, 6], M_00002_00001, aux1296)
watchelement_one([2, 4, 1, 5, 6], aux280, aux1297)
watchelement_one([3, 2, 4, 1, 5, 6], M_00004_00001, aux1298)
watchelement_one([3, 2, 4, 1, 5, 6], M_00004_00003, aux1299)
watchelement_one([3, 2, 4, 1, 5, 6], M_00004_00005, aux1300)
watchelement_one([3, 2, 4, 1, 5, 6], M_00002_00001, aux1301)
watchelement_one([2, 4, 1, 5, 6], aux272, aux1302)
watchelement_one([2, 4, 1, 5, 6], aux281, aux1303)
watchelement_one([3, 2, 4, 1, 5, 6], M_00003_00001, aux1304)
watchelement_one([2, 4, 1, 5, 6], aux273, aux1305)
watchelement_one([2, 4, 1, 5, 6], aux278, aux1306)
watchelement_one([3, 2, 4, 1, 5, 6], M_00005_00001, aux1307)
watchelement_one([3, 2, 4, 1, 5, 6], M_00005_00003, aux1308)
watchelement_one([2, 5, 1, 4, 6], aux280, aux1309)
watchelement_one([3, 2, 5, 1, 4, 6], M_00004_00001, aux1310)
watchelement_one([3, 2, 5, 1, 4, 6], M_00004_00005, aux1311)
watchelement_one([3, 2, 5, 1, 4, 6], M_00004_00003, aux1312)
watchelement_one([3, 2, 5, 1, 4, 6], M_00002_00001, aux1313)
watchelement_one([2, 5, 1, 4, 6], aux272, aux1314)
watchelement_one([2, 5, 1, 4, 6], aux273, aux1315)
watchelement_one([2, 5, 1, 4, 6], aux278, aux1316)
watchelement_one([3, 2, 5, 1, 4, 6], M_00005_00001, aux1317)
watchelement_one([3, 2, 5, 1, 4, 6], M_00005_00003, aux1318)
watchelement_one([2, 5, 1, 4, 6], aux281, aux1319)
watchelement_one([3, 2, 5, 1, 4, 6], M_00003_00001, aux1320)
watchelement_one([2, 3, 1, 5, 6], aux280, aux1321)
watchelement_one([4, 2, 3, 1, 5, 6], M_00004_00003, aux1322)
watchelement_one([4, 2, 3, 1, 5, 6], M_00004_00001, aux1323)
watchelement_one([4, 2, 3, 1, 5, 6], M_00004_00005, aux1324)
watchelement_one([4, 2, 3, 1, 5, 6], M_00002_00001, aux1325)
watchelement_one([2, 3, 1, 5, 6], aux281, aux1326)
watchelement_one([4, 2, 3, 1, 5, 6], M_00003_00001, aux1327)
watchelement_one([2, 3, 1, 5, 6], aux272, aux1328)
watchelement_one([2, 3, 1, 5, 6], aux273, aux1329)
watchelement_one([2, 3, 1, 5, 6], aux278, aux1330)
watchelement_one([4, 2, 3, 1, 5, 6], M_00005_00003, aux1331)
watchelement_one([4, 2, 3, 1, 5, 6], M_00005_00001, aux1332)
watchelement_one([2, 3, 1, 4, 6], aux280, aux1333)
watchelement_one([5, 2, 3, 1, 4, 6], M_00004_00003, aux1334)
watchelement_one([5, 2, 3, 1, 4, 6], M_00004_00005, aux1335)
watchelement_one([5, 2, 3, 1, 4, 6], M_00004_00001, aux1336)
watchelement_one([5, 2, 3, 1, 4, 6], M_00002_00001, aux1337)
watchelement_one([2, 3, 1, 4, 6], aux281, aux1338)
watchelement_one([5, 2, 3, 1, 4, 6], M_00003_00001, aux1339)
watchelement_one([2, 3, 1, 4, 6], aux273, aux1340)
watchelement_one([2, 3, 1, 4, 6], aux278, aux1341)
watchelement_one([5, 2, 3, 1, 4, 6], M_00005_00003, aux1342)
watchelement_one([5, 2, 3, 1, 4, 6], M_00005_00001, aux1343)
watchelement_one([2, 3, 1, 4, 6], aux272, aux1344)
watchelement_one([2, 5, 1, 3, 6], aux280, aux1345)
watchelement_one([4, 2, 5, 1, 3, 6], M_00004_00005, aux1346)
watchelement_one([4, 2, 5, 1, 3, 6], M_00004_00001, aux1347)
watchelement_one([4, 2, 5, 1, 3, 6], M_00004_00003, aux1348)
watchelement_one([4, 2, 5, 1, 3, 6], M_00002_00001, aux1349)
watchelement_one([2, 5, 1, 3, 6], aux273, aux1350)
watchelement_one([2, 5, 1, 3, 6], aux278, aux1351)
watchelement_one([4, 2, 5, 1, 3, 6], M_00005_00001, aux1352)
watchelement_one([4, 2, 5, 1, 3, 6], M_00005_00003, aux1353)
watchelement_one([2, 5, 1, 3, 6], aux272, aux1354)
watchelement_one([2, 5, 1, 3, 6], aux281, aux1355)
watchelement_one([4, 2, 5, 1, 3, 6], M_00003_00001, aux1356)
watchelement_one([2, 4, 1, 3, 6], aux280, aux1357)
watchelement_one([5, 2, 4, 1, 3, 6], M_00004_00005, aux1358)
watchelement_one([5, 2, 4, 1, 3, 6], M_00004_00003, aux1359)
watchelement_one([5, 2, 4, 1, 3, 6], M_00004_00001, aux1360)
watchelement_one([5, 2, 4, 1, 3, 6], M_00002_00001, aux1361)
watchelement_one([2, 4, 1, 3, 6], aux273, aux1362)
watchelement_one([2, 4, 1, 3, 6], aux278, aux1363)
watchelement_one([5, 2, 4, 1, 3, 6], M_00005_00003, aux1364)
watchelement_one([5, 2, 4, 1, 3, 6], M_00005_00001, aux1365)
watchelement_one([2, 4, 1, 3, 6], aux281, aux1366)
watchelement_one([5, 2, 4, 1, 3, 6], M_00003_00001, aux1367)
watchelement_one([2, 4, 1, 3, 6], aux272, aux1368)
watchelement_one([3, 4, 2, 1, 5, 6], M_00004_00003, aux1369)
watchelement_one([3, 4, 2, 1, 5, 6], M_00004_00001, aux1370)
watchelement_one([4, 2, 1, 5, 6], aux280, aux1371)
watchelement_one([3, 4, 2, 1, 5, 6], M_00004_00005, aux1372)
watchelement_one([3, 4, 2, 1, 5, 6], M_00003_00001, aux1373)
watchelement_one([4, 2, 1, 5, 6], aux281, aux1374)
watchelement_one([4, 2, 1, 5, 6], aux272, aux1375)
watchelement_one([3, 4, 2, 1, 5, 6], M_00002_00001, aux1376)
watchelement_one([4, 2, 1, 5, 6], aux273, aux1377)
watchelement_one([3, 4, 2, 1, 5, 6], M_00005_00003, aux1378)
watchelement_one([3, 4, 2, 1, 5, 6], M_00005_00001, aux1379)
watchelement_one([4, 2, 1, 5, 6], aux278, aux1380)
watchelement_one([3, 5, 2, 1, 4, 6], M_00004_00003, aux1381)
watchelement_one([3, 5, 2, 1, 4, 6], M_00004_00001, aux1382)
watchelement_one([3, 5, 2, 1, 4, 6], M_00004_00005, aux1383)
watchelement_one([5, 2, 1, 4, 6], aux280, aux1384)
watchelement_one([3, 5, 2, 1, 4, 6], M_00003_00001, aux1385)
watchelement_one([5, 2, 1, 4, 6], aux281, aux1386)
watchelement_one([5, 2, 1, 4, 6], aux272, aux1387)
watchelement_one([5, 2, 1, 4, 6], aux273, aux1388)
watchelement_one([3, 5, 2, 1, 4, 6], M_00005_00003, aux1389)
watchelement_one([3, 5, 2, 1, 4, 6], M_00005_00001, aux1390)
watchelement_one([5, 2, 1, 4, 6], aux278, aux1391)
watchelement_one([3, 5, 2, 1, 4, 6], M_00002_00001, aux1392)
watchelement_one([4, 3, 2, 1, 5, 6], M_00004_00003, aux1393)
watchelement_one([3, 2, 1, 5, 6], aux280, aux1394)
watchelement_one([4, 3, 2, 1, 5, 6], M_00004_00001, aux1395)
watchelement_one([4, 3, 2, 1, 5, 6], M_00004_00005, aux1396)
watchelement_one([3, 2, 1, 5, 6], aux281, aux1397)
watchelement_one([4, 3, 2, 1, 5, 6], M_00003_00001, aux1398)
watchelement_one([4, 3, 2, 1, 5, 6], M_00002_00001, aux1399)
watchelement_one([3, 2, 1, 5, 6], aux272, aux1400)
watchelement_one([3, 2, 1, 5, 6], aux273, aux1401)
watchelement_one([4, 3, 2, 1, 5, 6], M_00005_00003, aux1402)
watchelement_one([3, 2, 1, 5, 6], aux278, aux1403)
watchelement_one([4, 3, 2, 1, 5, 6], M_00005_00001, aux1404)
watchelement_one([5, 3, 2, 1, 4, 6], M_00004_00003, aux1405)
watchelement_one([3, 2, 1, 4, 6], aux280, aux1406)
watchelement_one([5, 3, 2, 1, 4, 6], M_00004_00005, aux1407)
watchelement_one([5, 3, 2, 1, 4, 6], M_00004_00001, aux1408)
watchelement_one([3, 2, 1, 4, 6], aux281, aux1409)
watchelement_one([5, 3, 2, 1, 4, 6], M_00003_00001, aux1410)
watchelement_one([5, 3, 2, 1, 4, 6], M_00002_00001, aux1411)
watchelement_one([3, 2, 1, 4, 6], aux273, aux1412)
watchelement_one([5, 3, 2, 1, 4, 6], M_00005_00003, aux1413)
watchelement_one([3, 2, 1, 4, 6], aux278, aux1414)
watchelement_one([5, 3, 2, 1, 4, 6], M_00005_00001, aux1415)
watchelement_one([3, 2, 1, 4, 6], aux272, aux1416)
watchelement_one([4, 5, 2, 1, 3, 6], M_00004_00003, aux1417)
watchelement_one([4, 5, 2, 1, 3, 6], M_00004_00005, aux1418)
watchelement_one([4, 5, 2, 1, 3, 6], M_00004_00001, aux1419)
watchelement_one([5, 2, 1, 3, 6], aux280, aux1420)
watchelement_one([4, 5, 2, 1, 3, 6], M_00003_00001, aux1421)
watchelement_one([5, 2, 1, 3, 6], aux281, aux1422)
watchelement_one([5, 2, 1, 3, 6], aux273, aux1423)
watchelement_one([4, 5, 2, 1, 3, 6], M_00005_00003, aux1424)
watchelement_one([4, 5, 2, 1, 3, 6], M_00005_00001, aux1425)
watchelement_one([5, 2, 1, 3, 6], aux278, aux1426)
watchelement_one([5, 2, 1, 3, 6], aux272, aux1427)
watchelement_one([4, 5, 2, 1, 3, 6], M_00002_00001, aux1428)
watchelement_one([5, 4, 2, 1, 3, 6], M_00004_00003, aux1429)
watchelement_one([5, 4, 2, 1, 3, 6], M_00004_00005, aux1430)
watchelement_one([4, 2, 1, 3, 6], aux280, aux1431)
watchelement_one([5, 4, 2, 1, 3, 6], M_00004_00001, aux1432)
watchelement_one([4, 2, 1, 3, 6], aux281, aux1433)
watchelement_one([5, 4, 2, 1, 3, 6], M_00003_00001, aux1434)
watchelement_one([4, 2, 1, 3, 6], aux273, aux1435)
watchelement_one([5, 4, 2, 1, 3, 6], M_00005_00003, aux1436)
watchelement_one([4, 2, 1, 3, 6], aux278, aux1437)
watchelement_one([5, 4, 2, 1, 3, 6], M_00005_00001, aux1438)
watchelement_one([5, 4, 2, 1, 3, 6], M_00002_00001, aux1439)
watchelement_one([4, 2, 1, 3, 6], aux272, aux1440)
watchelement_one([3, 4, 5, 1, 2, 6], M_00004_00005, aux1441)
watchelement_one([3, 4, 5, 1, 2, 6], M_00004_00001, aux1442)
watchelement_one([4, 5, 1, 2, 6], aux280, aux1443)
watchelement_one([3, 4, 5, 1, 2, 6], M_00004_00003, aux1444)
watchelement_one([4, 5, 1, 2, 6], aux273, aux1445)
watchelement_one([3, 4, 5, 1, 2, 6], M_00005_00001, aux1446)
watchelement_one([4, 5, 1, 2, 6], aux278, aux1447)
watchelement_one([3, 4, 5, 1, 2, 6], M_00005_00003, aux1448)
watchelement_one([4, 5, 1, 2, 6], aux272, aux1449)
watchelement_one([3, 4, 5, 1, 2, 6], M_00002_00001, aux1450)
watchelement_one([3, 4, 5, 1, 2, 6], M_00003_00001, aux1451)
watchelement_one([4, 5, 1, 2, 6], aux281, aux1452)
watchelement_one([3, 5, 4, 1, 2, 6], M_00004_00005, aux1453)
watchelement_one([3, 5, 4, 1, 2, 6], M_00004_00001, aux1454)
watchelement_one([3, 5, 4, 1, 2, 6], M_00004_00003, aux1455)
watchelement_one([5, 4, 1, 2, 6], aux280, aux1456)
watchelement_one([5, 4, 1, 2, 6], aux273, aux1457)
watchelement_one([3, 5, 4, 1, 2, 6], M_00005_00001, aux1458)
watchelement_one([3, 5, 4, 1, 2, 6], M_00005_00003, aux1459)
watchelement_one([5, 4, 1, 2, 6], aux278, aux1460)
watchelement_one([5, 4, 1, 2, 6], aux272, aux1461)
watchelement_one([3, 5, 4, 1, 2, 6], M_00003_00001, aux1462)
watchelement_one([5, 4, 1, 2, 6], aux281, aux1463)
watchelement_one([3, 5, 4, 1, 2, 6], M_00002_00001, aux1464)
watchelement_one([4, 3, 5, 1, 2, 6], M_00004_00005, aux1465)
watchelement_one([3, 5, 1, 2, 6], aux280, aux1466)
watchelement_one([4, 3, 5, 1, 2, 6], M_00004_00001, aux1467)
watchelement_one([4, 3, 5, 1, 2, 6], M_00004_00003, aux1468)
watchelement_one([3, 5, 1, 2, 6], aux273, aux1469)
watchelement_one([3, 5, 1, 2, 6], aux278, aux1470)
watchelement_one([4, 3, 5, 1, 2, 6], M_00005_00001, aux1471)
watchelement_one([4, 3, 5, 1, 2, 6], M_00005_00003, aux1472)
watchelement_one([4, 3, 5, 1, 2, 6], M_00002_00001, aux1473)
watchelement_one([3, 5, 1, 2, 6], aux272, aux1474)
watchelement_one([3, 5, 1, 2, 6], aux281, aux1475)
watchelement_one([4, 3, 5, 1, 2, 6], M_00003_00001, aux1476)
watchelement_one([5, 3, 4, 1, 2, 6], M_00004_00005, aux1477)
watchelement_one([3, 4, 1, 2, 6], aux280, aux1478)
watchelement_one([5, 3, 4, 1, 2, 6], M_00004_00003, aux1479)
watchelement_one([5, 3, 4, 1, 2, 6], M_00004_00001, aux1480)
watchelement_one([3, 4, 1, 2, 6], aux273, aux1481)
watchelement_one([3, 4, 1, 2, 6], aux278, aux1482)
watchelement_one([5, 3, 4, 1, 2, 6], M_00005_00003, aux1483)
watchelement_one([5, 3, 4, 1, 2, 6], M_00005_00001, aux1484)
watchelement_one([5, 3, 4, 1, 2, 6], M_00002_00001, aux1485)
watchelement_one([3, 4, 1, 2, 6], aux281, aux1486)
watchelement_one([5, 3, 4, 1, 2, 6], M_00003_00001, aux1487)
watchelement_one([3, 4, 1, 2, 6], aux272, aux1488)
watchelement_one([4, 5, 3, 1, 2, 6], M_00004_00005, aux1489)
watchelement_one([4, 5, 3, 1, 2, 6], M_00004_00003, aux1490)
watchelement_one([4, 5, 3, 1, 2, 6], M_00004_00001, aux1491)
watchelement_one([5, 3, 1, 2, 6], aux280, aux1492)
watchelement_one([5, 3, 1, 2, 6], aux273, aux1493)
watchelement_one([4, 5, 3, 1, 2, 6], M_00005_00003, aux1494)
watchelement_one([4, 5, 3, 1, 2, 6], M_00005_00001, aux1495)
watchelement_one([5, 3, 1, 2, 6], aux278, aux1496)
watchelement_one([4, 5, 3, 1, 2, 6], M_00003_00001, aux1497)
watchelement_one([5, 3, 1, 2, 6], aux281, aux1498)
watchelement_one([5, 3, 1, 2, 6], aux272, aux1499)
watchelement_one([4, 5, 3, 1, 2, 6], M_00002_00001, aux1500)
watchelement_one([5, 4, 3, 1, 2, 6], M_00004_00005, aux1501)
watchelement_one([5, 4, 3, 1, 2, 6], M_00004_00003, aux1502)
watchelement_one([4, 3, 1, 2, 6], aux280, aux1503)
watchelement_one([5, 4, 3, 1, 2, 6], M_00004_00001, aux1504)
watchelement_one([4, 3, 1, 2, 6], aux273, aux1505)
watchelement_one([5, 4, 3, 1, 2, 6], M_00005_00003, aux1506)
watchelement_one([4, 3, 1, 2, 6], aux278, aux1507)
watchelement_one([5, 4, 3, 1, 2, 6], M_00005_00001, aux1508)
watchelement_one([4, 3, 1, 2, 6], aux281, aux1509)
watchelement_one([5, 4, 3, 1, 2, 6], M_00003_00001, aux1510)
watchelement_one([5, 4, 3, 1, 2, 6], M_00002_00001, aux1511)
watchelement_one([4, 3, 1, 2, 6], aux272, aux1512)
watchelement_one([2, 3, 4, 5, 1, 6], M_00005_00001, aux1513)
watchelement_one([3, 4, 5, 1, 6], aux278, aux1514)
watchelement_one([2, 3, 4, 5, 1, 6], M_00005_00003, aux1515)
watchelement_one([3, 4, 5, 1, 6], aux273, aux1516)
watchelement_one([3, 4, 5, 1, 6], aux272, aux1517)
watchelement_one([2, 3, 4, 5, 1, 6], M_00002_00001, aux1518)
watchelement_one([2, 3, 4, 5, 1, 6], M_00003_00001, aux1519)
watchelement_one([3, 4, 5, 1, 6], aux281, aux1520)
watchelement_one([2, 3, 4, 5, 1, 6], M_00004_00005, aux1521)
watchelement_one([2, 3, 4, 5, 1, 6], M_00004_00001, aux1522)
watchelement_one([3, 4, 5, 1, 6], aux280, aux1523)
watchelement_one([2, 3, 4, 5, 1, 6], M_00004_00003, aux1524)
watchelement_one([2, 3, 5, 4, 1, 6], M_00005_00001, aux1525)
watchelement_one([3, 5, 4, 1, 6], aux278, aux1526)
watchelement_one([3, 5, 4, 1, 6], aux273, aux1527)
watchelement_one([2, 3, 5, 4, 1, 6], M_00005_00003, aux1528)
watchelement_one([3, 5, 4, 1, 6], aux272, aux1529)
watchelement_one([2, 3, 5, 4, 1, 6], M_00002_00001, aux1530)
watchelement_one([2, 3, 5, 4, 1, 6], M_00004_00005, aux1531)
watchelement_one([2, 3, 5, 4, 1, 6], M_00004_00001, aux1532)
watchelement_one([3, 5, 4, 1, 6], aux280, aux1533)
watchelement_one([2, 3, 5, 4, 1, 6], M_00004_00003, aux1534)
watchelement_one([2, 3, 5, 4, 1, 6], M_00003_00001, aux1535)
watchelement_one([3, 5, 4, 1, 6], aux281, aux1536)
watchelement_one([2, 4, 3, 5, 1, 6], M_00005_00001, aux1537)
watchelement_one([2, 4, 3, 5, 1, 6], M_00005_00003, aux1538)
watchelement_one([4, 3, 5, 1, 6], aux278, aux1539)
watchelement_one([4, 3, 5, 1, 6], aux273, aux1540)
watchelement_one([4, 3, 5, 1, 6], aux272, aux1541)
watchelement_one([2, 4, 3, 5, 1, 6], M_00003_00001, aux1542)
watchelement_one([4, 3, 5, 1, 6], aux281, aux1543)
watchelement_one([2, 4, 3, 5, 1, 6], M_00002_00001, aux1544)
watchelement_one([2, 4, 3, 5, 1, 6], M_00004_00005, aux1545)
watchelement_one([2, 4, 3, 5, 1, 6], M_00004_00001, aux1546)
watchelement_one([2, 4, 3, 5, 1, 6], M_00004_00003, aux1547)
watchelement_one([4, 3, 5, 1, 6], aux280, aux1548)
watchelement_one([2, 5, 3, 4, 1, 6], M_00005_00001, aux1549)
watchelement_one([2, 5, 3, 4, 1, 6], M_00005_00003, aux1550)
watchelement_one([5, 3, 4, 1, 6], aux273, aux1551)
watchelement_one([5, 3, 4, 1, 6], aux278, aux1552)
watchelement_one([5, 3, 4, 1, 6], aux272, aux1553)
watchelement_one([2, 5, 3, 4, 1, 6], M_00003_00001, aux1554)
watchelement_one([5, 3, 4, 1, 6], aux281, aux1555)
watchelement_one([2, 5, 3, 4, 1, 6], M_00004_00005, aux1556)
watchelement_one([2, 5, 3, 4, 1, 6], M_00004_00001, aux1557)
watchelement_one([2, 5, 3, 4, 1, 6], M_00004_00003, aux1558)
watchelement_one([5, 3, 4, 1, 6], aux280, aux1559)
watchelement_one([2, 5, 3, 4, 1, 6], M_00002_00001, aux1560)
watchelement_one([2, 4, 5, 3, 1, 6], M_00005_00001, aux1561)
watchelement_one([4, 5, 3, 1, 6], aux273, aux1562)
watchelement_one([4, 5, 3, 1, 6], aux278, aux1563)
watchelement_one([2, 4, 5, 3, 1, 6], M_00005_00003, aux1564)
watchelement_one([4, 5, 3, 1, 6], aux272, aux1565)
watchelement_one([2, 4, 5, 3, 1, 6], M_00004_00005, aux1566)
watchelement_one([2, 4, 5, 3, 1, 6], M_00004_00001, aux1567)
watchelement_one([4, 5, 3, 1, 6], aux280, aux1568)
watchelement_one([2, 4, 5, 3, 1, 6], M_00004_00003, aux1569)
watchelement_one([2, 4, 5, 3, 1, 6], M_00002_00001, aux1570)
watchelement_one([2, 4, 5, 3, 1, 6], M_00003_00001, aux1571)
watchelement_one([4, 5, 3, 1, 6], aux281, aux1572)
watchelement_one([2, 5, 4, 3, 1, 6], M_00005_00001, aux1573)
watchelement_one([5, 4, 3, 1, 6], aux273, aux1574)
watchelement_one([2, 5, 4, 3, 1, 6], M_00005_00003, aux1575)
watchelement_one([5, 4, 3, 1, 6], aux278, aux1576)
watchelement_one([5, 4, 3, 1, 6], aux272, aux1577)
watchelement_one([2, 5, 4, 3, 1, 6], M_00004_00005, aux1578)
watchelement_one([2, 5, 4, 3, 1, 6], M_00004_00001, aux1579)
watchelement_one([2, 5, 4, 3, 1, 6], M_00004_00003, aux1580)
watchelement_one([5, 4, 3, 1, 6], aux280, aux1581)
watchelement_one([2, 5, 4, 3, 1, 6], M_00003_00001, aux1582)
watchelement_one([5, 4, 3, 1, 6], aux281, aux1583)
watchelement_one([2, 5, 4, 3, 1, 6], M_00002_00001, aux1584)
watchelement_one([2, 4, 5, 1, 6], aux278, aux1585)
watchelement_one([3, 2, 4, 5, 1, 6], M_00005_00001, aux1586)
watchelement_one([3, 2, 4, 5, 1, 6], M_00005_00003, aux1587)
watchelement_one([2, 4, 5, 1, 6], aux273, aux1588)
watchelement_one([3, 2, 4, 5, 1, 6], M_00002_00001, aux1589)
watchelement_one([2, 4, 5, 1, 6], aux272, aux1590)
watchelement_one([2, 4, 5, 1, 6], aux281, aux1591)
watchelement_one([3, 2, 4, 5, 1, 6], M_00003_00001, aux1592)
watchelement_one([3, 2, 4, 5, 1, 6], M_00004_00005, aux1593)
watchelement_one([2, 4, 5, 1, 6], aux280, aux1594)
watchelement_one([3, 2, 4, 5, 1, 6], M_00004_00001, aux1595)
watchelement_one([3, 2, 4, 5, 1, 6], M_00004_00003, aux1596)
watchelement_one([2, 5, 4, 1, 6], aux278, aux1597)
watchelement_one([3, 2, 5, 4, 1, 6], M_00005_00001, aux1598)
watchelement_one([2, 5, 4, 1, 6], aux273, aux1599)
watchelement_one([3, 2, 5, 4, 1, 6], M_00005_00003, aux1600)
watchelement_one([3, 2, 5, 4, 1, 6], M_00002_00001, aux1601)
watchelement_one([2, 5, 4, 1, 6], aux272, aux1602)
watchelement_one([3, 2, 5, 4, 1, 6], M_00004_00005, aux1603)
watchelement_one([2, 5, 4, 1, 6], aux280, aux1604)
watchelement_one([3, 2, 5, 4, 1, 6], M_00004_00001, aux1605)
watchelement_one([3, 2, 5, 4, 1, 6], M_00004_00003, aux1606)
watchelement_one([2, 5, 4, 1, 6], aux281, aux1607)
watchelement_one([3, 2, 5, 4, 1, 6], M_00003_00001, aux1608)
watchelement_one([2, 3, 5, 1, 6], aux278, aux1609)
watchelement_one([4, 2, 3, 5, 1, 6], M_00005_00003, aux1610)
watchelement_one([4, 2, 3, 5, 1, 6], M_00005_00001, aux1611)
watchelement_one([2, 3, 5, 1, 6], aux273, aux1612)
watchelement_one([4, 2, 3, 5, 1, 6], M_00002_00001, aux1613)
watchelement_one([2, 3, 5, 1, 6], aux281, aux1614)
watchelement_one([4, 2, 3, 5, 1, 6], M_00003_00001, aux1615)
watchelement_one([2, 3, 5, 1, 6], aux272, aux1616)
watchelement_one([4, 2, 3, 5, 1, 6], M_00004_00005, aux1617)
watchelement_one([2, 3, 5, 1, 6], aux280, aux1618)
watchelement_one([4, 2, 3, 5, 1, 6], M_00004_00003, aux1619)
watchelement_one([4, 2, 3, 5, 1, 6], M_00004_00001, aux1620)
watchelement_one([2, 3, 4, 1, 6], aux278, aux1621)
watchelement_one([5, 2, 3, 4, 1, 6], M_00005_00003, aux1622)
watchelement_one([2, 3, 4, 1, 6], aux273, aux1623)
watchelement_one([5, 2, 3, 4, 1, 6], M_00005_00001, aux1624)
watchelement_one([5, 2, 3, 4, 1, 6], M_00002_00001, aux1625)
watchelement_one([2, 3, 4, 1, 6], aux281, aux1626)
watchelement_one([5, 2, 3, 4, 1, 6], M_00003_00001, aux1627)
watchelement_one([5, 2, 3, 4, 1, 6], M_00004_00005, aux1628)
watchelement_one([2, 3, 4, 1, 6], aux280, aux1629)
watchelement_one([5, 2, 3, 4, 1, 6], M_00004_00003, aux1630)
watchelement_one([5, 2, 3, 4, 1, 6], M_00004_00001, aux1631)
watchelement_one([2, 3, 4, 1, 6], aux272, aux1632)
watchelement_one([2, 5, 3, 1, 6], aux278, aux1633)
watchelement_one([2, 5, 3, 1, 6], aux273, aux1634)
watchelement_one([4, 2, 5, 3, 1, 6], M_00005_00001, aux1635)
watchelement_one([4, 2, 5, 3, 1, 6], M_00005_00003, aux1636)
watchelement_one([4, 2, 5, 3, 1, 6], M_00002_00001, aux1637)
watchelement_one([4, 2, 5, 3, 1, 6], M_00004_00005, aux1638)
watchelement_one([2, 5, 3, 1, 6], aux280, aux1639)
watchelement_one([4, 2, 5, 3, 1, 6], M_00004_00001, aux1640)
watchelement_one([4, 2, 5, 3, 1, 6], M_00004_00003, aux1641)
watchelement_one([2, 5, 3, 1, 6], aux272, aux1642)
watchelement_one([2, 5, 3, 1, 6], aux281, aux1643)
watchelement_one([4, 2, 5, 3, 1, 6], M_00003_00001, aux1644)
watchelement_one([2, 4, 3, 1, 6], aux278, aux1645)
watchelement_one([2, 4, 3, 1, 6], aux273, aux1646)
watchelement_one([5, 2, 4, 3, 1, 6], M_00005_00003, aux1647)
watchelement_one([5, 2, 4, 3, 1, 6], M_00005_00001, aux1648)
watchelement_one([5, 2, 4, 3, 1, 6], M_00002_00001, aux1649)
watchelement_one([5, 2, 4, 3, 1, 6], M_00004_00005, aux1650)
watchelement_one([2, 4, 3, 1, 6], aux280, aux1651)
watchelement_one([5, 2, 4, 3, 1, 6], M_00004_00003, aux1652)
watchelement_one([5, 2, 4, 3, 1, 6], M_00004_00001, aux1653)
watchelement_one([2, 4, 3, 1, 6], aux281, aux1654)
watchelement_one([5, 2, 4, 3, 1, 6], M_00003_00001, aux1655)
watchelement_one([2, 4, 3, 1, 6], aux272, aux1656)
watchelement_one([3, 4, 2, 5, 1, 6], M_00005_00003, aux1657)
watchelement_one([3, 4, 2, 5, 1, 6], M_00005_00001, aux1658)
watchelement_one([4, 2, 5, 1, 6], aux278, aux1659)
watchelement_one([4, 2, 5, 1, 6], aux273, aux1660)
watchelement_one([3, 4, 2, 5, 1, 6], M_00003_00001, aux1661)
watchelement_one([4, 2, 5, 1, 6], aux281, aux1662)
watchelement_one([4, 2, 5, 1, 6], aux272, aux1663)
watchelement_one([3, 4, 2, 5, 1, 6], M_00002_00001, aux1664)
watchelement_one([3, 4, 2, 5, 1, 6], M_00004_00005, aux1665)
watchelement_one([3, 4, 2, 5, 1, 6], M_00004_00003, aux1666)
watchelement_one([3, 4, 2, 5, 1, 6], M_00004_00001, aux1667)
watchelement_one([4, 2, 5, 1, 6], aux280, aux1668)
watchelement_one([3, 5, 2, 4, 1, 6], M_00005_00003, aux1669)
watchelement_one([3, 5, 2, 4, 1, 6], M_00005_00001, aux1670)
watchelement_one([5, 2, 4, 1, 6], aux273, aux1671)
watchelement_one([5, 2, 4, 1, 6], aux278, aux1672)
watchelement_one([3, 5, 2, 4, 1, 6], M_00003_00001, aux1673)
watchelement_one([5, 2, 4, 1, 6], aux281, aux1674)
watchelement_one([5, 2, 4, 1, 6], aux272, aux1675)
watchelement_one([3, 5, 2, 4, 1, 6], M_00004_00005, aux1676)
watchelement_one([3, 5, 2, 4, 1, 6], M_00004_00003, aux1677)
watchelement_one([3, 5, 2, 4, 1, 6], M_00004_00001, aux1678)
watchelement_one([5, 2, 4, 1, 6], aux280, aux1679)
watchelement_one([3, 5, 2, 4, 1, 6], M_00002_00001, aux1680)
watchelement_one([4, 3, 2, 5, 1, 6], M_00005_00003, aux1681)
watchelement_one([3, 2, 5, 1, 6], aux278, aux1682)
watchelement_one([4, 3, 2, 5, 1, 6], M_00005_00001, aux1683)
watchelement_one([3, 2, 5, 1, 6], aux273, aux1684)
watchelement_one([3, 2, 5, 1, 6], aux281, aux1685)
watchelement_one([4, 3, 2, 5, 1, 6], M_00003_00001, aux1686)
watchelement_one([4, 3, 2, 5, 1, 6], M_00002_00001, aux1687)
watchelement_one([3, 2, 5, 1, 6], aux272, aux1688)
watchelement_one([4, 3, 2, 5, 1, 6], M_00004_00005, aux1689)
watchelement_one([4, 3, 2, 5, 1, 6], M_00004_00003, aux1690)
watchelement_one([3, 2, 5, 1, 6], aux280, aux1691)
watchelement_one([4, 3, 2, 5, 1, 6], M_00004_00001, aux1692)
watchelement_one([5, 3, 2, 4, 1, 6], M_00005_00003, aux1693)
watchelement_one([3, 2, 4, 1, 6], aux278, aux1694)
watchelement_one([3, 2, 4, 1, 6], aux273, aux1695)
watchelement_one([5, 3, 2, 4, 1, 6], M_00005_00001, aux1696)
watchelement_one([3, 2, 4, 1, 6], aux281, aux1697)
watchelement_one([5, 3, 2, 4, 1, 6], M_00003_00001, aux1698)
watchelement_one([5, 3, 2, 4, 1, 6], M_00002_00001, aux1699)
watchelement_one([5, 3, 2, 4, 1, 6], M_00004_00005, aux1700)
watchelement_one([5, 3, 2, 4, 1, 6], M_00004_00003, aux1701)
watchelement_one([3, 2, 4, 1, 6], aux280, aux1702)
watchelement_one([5, 3, 2, 4, 1, 6], M_00004_00001, aux1703)
watchelement_one([3, 2, 4, 1, 6], aux272, aux1704)
watchelement_one([4, 5, 2, 3, 1, 6], M_00005_00003, aux1705)
watchelement_one([5, 2, 3, 1, 6], aux273, aux1706)
watchelement_one([4, 5, 2, 3, 1, 6], M_00005_00001, aux1707)
watchelement_one([5, 2, 3, 1, 6], aux278, aux1708)
watchelement_one([4, 5, 2, 3, 1, 6], M_00003_00001, aux1709)
watchelement_one([5, 2, 3, 1, 6], aux281, aux1710)
watchelement_one([4, 5, 2, 3, 1, 6], M_00004_00005, aux1711)
watchelement_one([4, 5, 2, 3, 1, 6], M_00004_00003, aux1712)
watchelement_one([4, 5, 2, 3, 1, 6], M_00004_00001, aux1713)
watchelement_one([5, 2, 3, 1, 6], aux280, aux1714)
watchelement_one([5, 2, 3, 1, 6], aux272, aux1715)
watchelement_one([4, 5, 2, 3, 1, 6], M_00002_00001, aux1716)
watchelement_one([5, 4, 2, 3, 1, 6], M_00005_00003, aux1717)
watchelement_one([4, 2, 3, 1, 6], aux273, aux1718)
watchelement_one([4, 2, 3, 1, 6], aux278, aux1719)
watchelement_one([5, 4, 2, 3, 1, 6], M_00005_00001, aux1720)
watchelement_one([4, 2, 3, 1, 6], aux281, aux1721)
watchelement_one([5, 4, 2, 3, 1, 6], M_00003_00001, aux1722)
watchelement_one([5, 4, 2, 3, 1, 6], M_00004_00005, aux1723)
watchelement_one([5, 4, 2, 3, 1, 6], M_00004_00003, aux1724)
watchelement_one([4, 2, 3, 1, 6], aux280, aux1725)
watchelement_one([5, 4, 2, 3, 1, 6], M_00004_00001, aux1726)
watchelement_one([5, 4, 2, 3, 1, 6], M_00002_00001, aux1727)
watchelement_one([4, 2, 3, 1, 6], aux272, aux1728)
watchelement_one([4, 5, 2, 1, 6], aux273, aux1729)
watchelement_one([3, 4, 5, 2, 1, 6], M_00005_00001, aux1730)
watchelement_one([4, 5, 2, 1, 6], aux278, aux1731)
watchelement_one([3, 4, 5, 2, 1, 6], M_00005_00003, aux1732)
watchelement_one([3, 4, 5, 2, 1, 6], M_00004_00005, aux1733)
watchelement_one([3, 4, 5, 2, 1, 6], M_00004_00001, aux1734)
watchelement_one([4, 5, 2, 1, 6], aux280, aux1735)
watchelement_one([3, 4, 5, 2, 1, 6], M_00004_00003, aux1736)
watchelement_one([4, 5, 2, 1, 6], aux272, aux1737)
watchelement_one([3, 4, 5, 2, 1, 6], M_00002_00001, aux1738)
watchelement_one([3, 4, 5, 2, 1, 6], M_00003_00001, aux1739)
watchelement_one([4, 5, 2, 1, 6], aux281, aux1740)
watchelement_one([5, 4, 2, 1, 6], aux273, aux1741)
watchelement_one([3, 5, 4, 2, 1, 6], M_00005_00001, aux1742)
watchelement_one([3, 5, 4, 2, 1, 6], M_00005_00003, aux1743)
watchelement_one([5, 4, 2, 1, 6], aux278, aux1744)
watchelement_one([3, 5, 4, 2, 1, 6], M_00004_00005, aux1745)
watchelement_one([3, 5, 4, 2, 1, 6], M_00004_00001, aux1746)
watchelement_one([3, 5, 4, 2, 1, 6], M_00004_00003, aux1747)
watchelement_one([5, 4, 2, 1, 6], aux280, aux1748)
watchelement_one([5, 4, 2, 1, 6], aux272, aux1749)
watchelement_one([3, 5, 4, 2, 1, 6], M_00003_00001, aux1750)
watchelement_one([5, 4, 2, 1, 6], aux281, aux1751)
watchelement_one([3, 5, 4, 2, 1, 6], M_00002_00001, aux1752)
watchelement_one([3, 5, 2, 1, 6], aux273, aux1753)
watchelement_one([3, 5, 2, 1, 6], aux278, aux1754)
watchelement_one([4, 3, 5, 2, 1, 6], M_00005_00001, aux1755)
watchelement_one([4, 3, 5, 2, 1, 6], M_00005_00003, aux1756)
watchelement_one([4, 3, 5, 2, 1, 6], M_00004_00005, aux1757)
watchelement_one([3, 5, 2, 1, 6], aux280, aux1758)
watchelement_one([4, 3, 5, 2, 1, 6], M_00004_00001, aux1759)
watchelement_one([4, 3, 5, 2, 1, 6], M_00004_00003, aux1760)
watchelement_one([4, 3, 5, 2, 1, 6], M_00002_00001, aux1761)
watchelement_one([3, 5, 2, 1, 6], aux272, aux1762)
watchelement_one([3, 5, 2, 1, 6], aux281, aux1763)
watchelement_one([4, 3, 5, 2, 1, 6], M_00003_00001, aux1764)
watchelement_one([3, 4, 2, 1, 6], aux273, aux1765)
watchelement_one([3, 4, 2, 1, 6], aux278, aux1766)
watchelement_one([5, 3, 4, 2, 1, 6], M_00005_00003, aux1767)
watchelement_one([5, 3, 4, 2, 1, 6], M_00005_00001, aux1768)
watchelement_one([5, 3, 4, 2, 1, 6], M_00004_00005, aux1769)
watchelement_one([3, 4, 2, 1, 6], aux280, aux1770)
watchelement_one([5, 3, 4, 2, 1, 6], M_00004_00003, aux1771)
watchelement_one([5, 3, 4, 2, 1, 6], M_00004_00001, aux1772)
watchelement_one([5, 3, 4, 2, 1, 6], M_00002_00001, aux1773)
watchelement_one([3, 4, 2, 1, 6], aux281, aux1774)
watchelement_one([5, 3, 4, 2, 1, 6], M_00003_00001, aux1775)
watchelement_one([3, 4, 2, 1, 6], aux272, aux1776)
watchelement_one([5, 3, 2, 1, 6], aux273, aux1777)
watchelement_one([4, 5, 3, 2, 1, 6], M_00005_00003, aux1778)
watchelement_one([4, 5, 3, 2, 1, 6], M_00005_00001, aux1779)
watchelement_one([5, 3, 2, 1, 6], aux278, aux1780)
watchelement_one([4, 5, 3, 2, 1, 6], M_00004_00005, aux1781)
watchelement_one([4, 5, 3, 2, 1, 6], M_00004_00003, aux1782)
watchelement_one([4, 5, 3, 2, 1, 6], M_00004_00001, aux1783)
watchelement_one([5, 3, 2, 1, 6], aux280, aux1784)
watchelement_one([4, 5, 3, 2, 1, 6], M_00003_00001, aux1785)
watchelement_one([5, 3, 2, 1, 6], aux281, aux1786)
watchelement_one([5, 3, 2, 1, 6], aux272, aux1787)
watchelement_one([4, 5, 3, 2, 1, 6], M_00002_00001, aux1788)
watchelement_one([4, 3, 2, 1, 6], aux273, aux1789)
watchelement_one([5, 4, 3, 2, 1, 6], M_00005_00003, aux1790)
watchelement_one([4, 3, 2, 1, 6], aux278, aux1791)
watchelement_one([5, 4, 3, 2, 1, 6], M_00005_00001, aux1792)
watchelement_one([5, 4, 3, 2, 1, 6], M_00004_00005, aux1793)
watchelement_one([5, 4, 3, 2, 1, 6], M_00004_00003, aux1794)
watchelement_one([4, 3, 2, 1, 6], aux280, aux1795)
watchelement_one([5, 4, 3, 2, 1, 6], M_00004_00001, aux1796)
watchelement_one([4, 3, 2, 1, 6], aux281, aux1797)
watchelement_one([5, 4, 3, 2, 1, 6], M_00003_00001, aux1798)
watchelement_one([5, 4, 3, 2, 1, 6], M_00002_00001, aux1799)
watchelement_one([4, 3, 2, 1, 6], aux272, aux1800)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux284, aux58)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux285, aux68)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux286, aux64)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux287, aux45)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux288, aux48)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux289, aux31)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux290, aux57)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux291, aux33)
watchelement_one([2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux292, aux61)
watchelement_one([2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux293, M_00005_00002)
watchelement_one([2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux294, aux10)
watchelement_one([2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux295, aux11)
watchelement_one([2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux296, M_00003_00002)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux297, 6)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux298, 6)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux299, 6)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux300, 6)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux301, 6)
watchelement_one([2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux302, aux38)
watchelement_one([2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux303, aux19)
watchelement_one([2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux304, M_00004_00002)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux305, 6)
watchelement_one([M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux306, aux22)
watchelement_one([M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux307, aux23)
watchelement_one([6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux308, 6)
watchelement_one([6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux309, 6)
watchelement_one([6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux310, 6)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux311, aux27)
watchelement_one([6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux312, 6)
watchelement_one([6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux313, 6)
watchelement_one([6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux314, 6)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux315, aux31)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux316, aux32)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux317, aux33)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux318, aux34)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux319, aux35)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux320, aux36)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux321, aux37)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux322, aux38)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux323, aux39)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux324, 6)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux325, 6)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux326, 6)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux327, 6)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux328, 6)
watchelement_one([M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux329, aux45)
watchelement_one([M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux330, aux46)
watchelement_one([M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux331, aux47)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3], aux332, aux48)
watchelement_one([6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux333, 6)
watchelement_one([6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux334, 6)
watchelement_one([6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux271, 6)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2], aux271, M_00004_00002)
watchelement_one([6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux335, 6)
watchelement_one([6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux336, 6)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux337, aux37)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], aux338, aux27)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux339, aux57)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux340, aux58)
watchelement_one([M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux341, aux19)
watchelement_one([M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux342, aux11)
watchelement_one([M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux343, aux61)
watchelement_one([M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], aux344, aux47)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3], aux345, aux36)
watchelement_one([6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux346, aux64)
watchelement_one([6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux347, aux10)
watchelement_one([M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], aux348, aux46)
watchelement_one([6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux349, 6)
watchelement_one([M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3], aux350, aux68)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6], aux351, 6)
watchelement_one([6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux352, 6)
watchelement_one([6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux353, 6)
watchelement_one([6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux354, 6)
watchelement_one([M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux355, aux35)
watchelement_one([M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2], aux276, M_00005_00002)
watchelement_one([6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux276, 6)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux356, aux32)
watchelement_one([6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux357, 6)
watchelement_one([6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], aux358, 6)
watchelement_one([6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux359, 6)
watchelement_one([6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux360, 6)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], aux361, aux22)
watchelement_one([M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux362, aux39)
watchelement_one([M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], aux363, aux23)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3], aux364, aux34)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6], aux365, 6)
watchelement_one([6, 6, 1, 2, 3, 4, 5, 6], aux366, 6)
watchelement_one([6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], aux270, 6)
watchelement_one([6, 1, 2, 3, 4, 5, 6], aux367, 6)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002], aux270, M_00003_00002)
watchelement_one([2, 3, 4, 5, 6], aux280, M_00004_00002)
watchelement_one([2, 3, 4, 5, 6], aux273, M_00005_00004)
watchelement_one([2, 3, 4, 5, 6], aux278, M_00005_00002)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6], aux272, aux93)
watchelement_one([2, 3, 4, 5, 6], aux281, M_00003_00002)
watchelement_one([2, 3, 4, 5, 6], aux272, M_00001_00004)
watchelement_one([1, 2, 3, 4, 5, 6], M_00003_00001, M_00003_00001)
watchelement_one([1, 2, 3, 4, 5, 6], M_00002_00001, M_00002_00001)
watchelement_one([1, 2, 3, 4, 5, 6], M_00005_00001, M_00005_00001)
watchelement_one([1, 2, 3, 4, 5, 6], M_00005_00003, M_00005_00003)
watchelement_one([1, 2, 3, 4, 5, 6], M_00004_00005, M_00004_00005)
watchelement_one([1, 2, 3, 4, 5, 6], M_00004_00003, M_00004_00003)
watchelement_one([1, 2, 3, 4, 5, 6], M_00004_00001, M_00004_00001)
watchelement_one([4, 1, 6], aux274, aux103)
watchelement_one([2, 5, 6], aux283, aux104)
watchelement_one([5, 4, 6], aux283, aux105)
watchelement_one([4, 5, 6], aux275, M_00003_00005)
watchelement_one([1, 5, 6], aux274, aux107)
watchelement_one([4, 1, 6], aux277, aux108)
watchelement_one([3, 1, 6], aux275, aux109)
watchelement_one([4, 5, 6], aux283, M_00001_00005)
watchelement_one([5, 2, 6], aux274, aux111)
watchelement_one([3, 1, 6], aux277, aux112)
watchelement_one([5, 2, 6], aux277, aux113)
watchelement_one([2, 1, 6], aux275, aux114)
watchelement_one([M_00002_00004, M_00002_00005, 6], aux283, aux115)
watchelement_one([2, 3, 6], aux274, aux116)
watchelement_one([4, 2, 6], aux275, aux117)
watchelement_one([1, 2, 6], aux283, aux118)
watchelement_one([2, 3, 6], aux277, aux119)
watchelement_one([3, 1, 6], aux274, aux120)
watchelement_one([1, 3, 6], aux275, aux121)
watchelement_one([3, 4, 6], aux275, aux122)
watchelement_one([4, 1, 6], aux283, aux123)
watchelement_one([1, 5, 6], aux277, aux124)
watchelement_one([2, 3, 6], aux283, aux125)
watchelement_one([5, 2, 6], aux283, aux126)
watchelement_one([4, 3, 6], aux274, aux127)
watchelement_one([3, 1, 6], aux283, aux128)
watchelement_one([5, 1, 6], aux274, aux129)
watchelement_one([5, 1, 6], aux277, aux130)
watchelement_one([4, 1, 6], aux275, aux131)
watchelement_one([1, 5, 6], aux283, aux132)
watchelement_one([1, 2, 6], aux275, aux133)
watchelement_one([4, 3, 6], aux277, aux134)
watchelement_one([1, 4, 6], aux277, aux135)
watchelement_one([1, 2, 6], aux277, aux136)
watchelement_one([5, 2, 6], aux275, aux137)
watchelement_one([5, 4, 6], aux277, aux138)
watchelement_one([2, 3, 6], aux275, aux139)
watchelement_one([3, 4, 6], aux283, aux140)
watchelement_one([2, 5, 6], aux274, aux141)
watchelement_one([2, 5, 6], aux277, aux142)
watchelement_one([1, 5, 6], aux275, aux143)
watchelement_one([5, 4, 6], aux274, aux144)
watchelement_one([1, 2, 6], aux274, aux145)
watchelement_one([5, 1, 6], aux275, aux146)
watchelement_one([3, 2, 6], aux277, aux147)
watchelement_one([5, 3, 6], aux277, aux148)
watchelement_one([2, 4, 6], aux274, aux149)
watchelement_one([4, 3, 6], aux275, aux150)
watchelement_one([4, 5, 6], aux274, M_00002_00004)
watchelement_one([2, 4, 6], aux277, aux152)
watchelement_one([3, 2, 6], aux274, aux153)
watchelement_one([1, 4, 6], aux275, aux154)
watchelement_one([1, 3, 6], aux283, aux155)
watchelement_one([5, 3, 6], aux274, aux156)
watchelement_one([4, 2, 6], aux283, aux157)
watchelement_one([3, 5, 6], aux275, aux158)
watchelement_one([2, 1, 6], aux283, aux159)
watchelement_one([5, 4, 6], aux275, aux160)
watchelement_one([2, 4, 6], aux283, aux161)
watchelement_one([3, 5, 6], aux277, aux162)
watchelement_one([2, 5, 6], aux275, aux163)
watchelement_one([5, 3, 6], aux283, aux164)
watchelement_one([3, 2, 6], aux283, aux165)
watchelement_one([4, 5, 6], aux277, M_00003_00004)
watchelement_one([1, 4, 6], aux274, aux167)
watchelement_one([3, 5, 6], aux274, aux168)
watchelement_one([5, 3, 6], aux275, aux169)
watchelement_one([3, 4, 6], aux277, aux170)
watchelement_one([2, 4, 6], aux275, aux171)
watchelement_one([3, 4, 6], aux274, aux172)
watchelement_one([1, 3, 6], aux274, aux173)
watchelement_one([2, 1, 6], aux274, aux174)
watchelement_one([5, 1, 6], aux283, aux175)
watchelement_one([4, 2, 6], aux274, aux176)
watchelement_one([3, 5, 6], aux283, aux177)
watchelement_one([2, 1, 6], aux277, aux178)
watchelement_one([1, 4, 6], aux283, aux179)
watchelement_one([4, 3, 6], aux283, aux180)
watchelement_one([4, 2, 6], aux277, aux181)
watchelement_one([3, 2, 6], aux275, aux182)
watchelement_one([1, 3, 6], aux277, aux183)
watchelement_one([5, 2], aux279, aux184)
watchelement_one([4, 5], aux279, aux185)
watchelement_one([1, 5], aux279, aux186)
watchelement_one([3, 4], aux279, aux187)
watchelement_one([4, 1], aux279, aux188)
watchelement_one([5, 3], aux279, aux189)
watchelement_one([1, 3], aux279, aux190)
watchelement_one([2, 5], aux279, aux191)
watchelement_one([5, 1], aux279, aux192)
watchelement_one([3, 2], aux279, aux193)
watchelement_one([2, 1], aux279, aux194)
watchelement_one([1, 4], aux279, aux195)
watchelement_one([2, 3], aux279, M_00001_00003)
watchelement_one([6, M_00002_00003], aux279, aux197)
watchelement_one([1, 2], aux279, aux198)
watchelement_one([2, 4], aux279, aux199)
watchelement_one([3, 1], aux279, aux200)
watchelement_one([4, 3], aux279, aux201)
watchelement_one([4, 6], aux282, aux202)
watchelement_one([3, 6], aux282, aux203)
watchelement_one([2, 6], aux282, aux204)
watchelement_one([1, 6], aux282, aux205)
watchelement_one([4, 2], aux279, aux206)
watchelement_one([3, 5], aux279, aux207)
watchelement_one([5, 6], aux282, M_00002_00005)
watchelement_one([5, 4], aux279, aux209)
watchelement_one([1, 2, 3], M_00002_00003, M_00002_00003)
watchelement_one([2, 3, 5], M_00002_00003, aux211)
watchelement_one([2, 3, 4], M_00002_00003, aux212)
watchelement_one([2, 3, 1], M_00002_00003, aux213)
watchelement_one([2, 4, 5], M_00002_00003, aux214)
watchelement_one([2, 4, 3], M_00002_00003, aux215)
watchelement_one([2, 4, 1], M_00002_00003, aux216)
watchelement_one([2, 1, 3], M_00002_00003, aux217)
watchelement_one([2, 1, 4], M_00002_00003, aux218)
watchelement_one([2, 1, 5], M_00002_00003, aux219)
watchelement_one([1, 4, 5], M_00002_00003, aux220)
watchelement_one([1, 4, 3], M_00002_00003, aux221)
watchelement_one([1, 4, 2], M_00002_00003, aux222)
watchelement_one([1, 5, 2], M_00002_00003, aux223)
watchelement_one([1, 5, 4], M_00002_00003, aux224)
watchelement_one([1, 5, 3], M_00002_00003, aux225)
watchelement_one([1, 2, 4], M_00002_00003, aux226)
watchelement_one([1, 2, 5], M_00002_00003, aux227)
watchelement_one([1, 3, 2], M_00002_00003, aux228)
watchelement_one([1, 3, 5], M_00002_00003, aux229)
watchelement_one([1, 3, 4], M_00002_00003, aux230)
watchelement_one([3, 2, 4], M_00002_00003, aux231)
watchelement_one([3, 2, 5], M_00002_00003, aux232)
watchelement_one([3, 2, 1], M_00002_00003, aux233)
watchelement_one([3, 1, 4], M_00002_00003, aux234)
watchelement_one([3, 1, 2], M_00002_00003, aux235)
watchelement_one([3, 1, 5], M_00002_00003, aux236)
watchelement_one([3, 5, 2], M_00002_00003, aux237)
watchelement_one([3, 5, 1], M_00002_00003, aux238)
watchelement_one([3, 5, 4], M_00002_00003, aux239)
watchelement_one([3, 4, 5], M_00002_00003, aux240)
watchelement_one([3, 4, 1], M_00002_00003, aux241)
watchelement_one([3, 4, 2], M_00002_00003, aux242)
watchelement_one([2, 5, 1], M_00002_00003, aux243)
watchelement_one([2, 5, 3], M_00002_00003, aux244)
watchelement_one([2, 5, 4], M_00002_00003, aux245)
watchelement_one([4, 3, 1], M_00002_00003, aux246)
watchelement_one([4, 3, 2], M_00002_00003, aux247)
watchelement_one([4, 2, 1], M_00002_00003, aux248)
watchelement_one([4, 2, 3], M_00002_00003, aux249)
watchelement_one([4, 2, 5], M_00002_00003, aux250)
watchelement_one([4, 3, 5], M_00002_00003, aux251)
watchelement_one([4, 5, 1], M_00002_00003, aux252)
watchelement_one([4, 5, 2], M_00002_00003, aux253)
watchelement_one([4, 5, 3], M_00002_00003, aux254)
watchelement_one([4, 1, 5], M_00002_00003, aux255)
watchelement_one([4, 1, 3], M_00002_00003, aux256)
watchelement_one([4, 1, 2], M_00002_00003, aux257)
watchelement_one([5, 2, 3], M_00002_00003, aux258)
watchelement_one([5, 2, 4], M_00002_00003, aux259)
watchelement_one([5, 2, 1], M_00002_00003, aux260)
watchelement_one([5, 1, 2], M_00002_00003, aux261)
watchelement_one([5, 1, 3], M_00002_00003, aux262)
watchelement_one([5, 1, 4], M_00002_00003, aux263)
watchelement_one([5, 4, 2], M_00002_00003, aux264)
watchelement_one([5, 4, 3], M_00002_00003, aux265)
watchelement_one([5, 4, 1], M_00002_00003, aux266)
watchelement_one([5, 3, 4], M_00002_00003, aux267)
watchelement_one([5, 3, 2], M_00002_00003, aux268)
watchelement_one([5, 3, 1], M_00002_00003, aux269)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux368, 6)
watchelement_one([6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux369, 6)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3], aux370, aux197)
watchelement_one([M_00001_00004, M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux371, aux93)
watchelement_one([M_00001_00005, 6, M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6, M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6, M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6, 1, 2, 3, 4, 5, 6], aux372, aux115)
watchelement_one([2, M_00001_00003], aux279, M_00001_00003)
watchelement_one([2, M_00001_00003, M_00001_00004, M_00001_00005, 6], aux272, M_00001_00004)
watchelement_one([M_00001_00004, M_00001_00005, 6], aux283, M_00001_00005)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6], M_00002_00001, 6)
watchelement_one([6, 2, M_00001_00003], M_00002_00003, aux197)
watchelement_one([M_00001_00004, M_00001_00005, 6], aux274, aux93)
watchelement_one([M_00001_00005, 6], aux282, aux115)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6], M_00003_00001, 6)
watchelement_one([2, M_00001_00003, M_00001_00004, M_00001_00005, 6], aux281, M_00003_00002)
watchelement_one([M_00001_00004, M_00001_00005, 6], aux277, aux22)
watchelement_one([M_00001_00004, M_00001_00005, 6], aux275, aux23)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6], M_00004_00001, 6)
watchelement_one([2, M_00001_00003, M_00001_00004, M_00001_00005, 6], aux280, M_00004_00002)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6], M_00004_00003, aux48)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6], M_00004_00005, aux45)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6], M_00005_00001, 6)
watchelement_one([2, M_00001_00003, M_00001_00004, M_00001_00005, 6], aux278, M_00005_00002)
watchelement_one([6, 2, M_00001_00003, M_00001_00004, M_00001_00005, 6], M_00005_00003, aux68)
watchelement_one([2, M_00001_00003, M_00001_00004, M_00001_00005, 6], aux273, aux61)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6], M_00002_00001, M_00002_00001)
watchelement_one([M_00002_00001, 6, M_00002_00003], M_00002_00003, M_00002_00003)
watchelement_one([M_00002_00004, M_00002_00005, 6], aux274, M_00002_00004)
watchelement_one([M_00002_00005, 6], aux282, M_00002_00005)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6], M_00003_00001, aux27)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6], aux281, 6)
watchelement_one([M_00002_00004, M_00002_00005, 6], aux277, aux47)
watchelement_one([M_00002_00004, M_00002_00005, 6], aux275, aux46)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6], M_00004_00001, aux37)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6], aux280, 6)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6], M_00004_00003, aux36)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6], M_00004_00005, aux35)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6], M_00005_00001, aux32)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6], aux278, 6)
watchelement_one([M_00002_00001, 6, M_00002_00003, M_00002_00004, M_00002_00005, 6], M_00005_00003, aux34)
watchelement_one([6, M_00002_00003, M_00002_00004, M_00002_00005, 6], aux273, aux39)
watchelement_one([M_00003_00002, 6], aux279, 6)
watchelement_one([M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], aux272, aux22)
watchelement_one([M_00003_00004, M_00003_00005, 6], aux283, aux23)
watchelement_one([M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], M_00002_00001, aux27)
watchelement_one([M_00003_00001, M_00003_00002, 6], M_00002_00003, 6)
watchelement_one([M_00003_00004, M_00003_00005, 6], aux274, aux47)
watchelement_one([M_00003_00005, 6], aux282, aux46)
watchelement_one([M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], M_00003_00001, M_00003_00001)
watchelement_one([M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], aux281, M_00003_00002)
watchelement_one([M_00003_00004, M_00003_00005, 6], aux277, M_00003_00004)
watchelement_one([M_00003_00004, M_00003_00005, 6], aux275, M_00003_00005)
watchelement_one([M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], M_00004_00001, aux57)
watchelement_one([M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], aux280, aux19)
watchelement_one([M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], M_00004_00003, 6)
watchelement_one([M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], M_00004_00005, aux64)
watchelement_one([M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], M_00005_00001, aux58)
watchelement_one([M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], aux278, aux11)
watchelement_one([M_00003_00001, M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], M_00005_00003, 6)
watchelement_one([M_00003_00002, 6, M_00003_00004, M_00003_00005, 6], aux273, aux10)
watchelement_one([M_00004_00002, M_00004_00003], aux279, aux48)
watchelement_one([M_00004_00002, M_00004_00003, 6, M_00004_00005, 6], aux272, 6)
watchelement_one([6, M_00004_00005, 6], aux283, aux45)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6], M_00002_00001, aux37)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003], M_00002_00003, aux36)
watchelement_one([6, M_00004_00005, 6], aux274, 6)
watchelement_one([M_00004_00005, 6], aux282, aux35)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6], M_00003_00001, aux57)
watchelement_one([M_00004_00002, M_00004_00003, 6, M_00004_00005, 6], aux281, aux19)
watchelement_one([6, M_00004_00005, 6], aux277, 6)
watchelement_one([6, M_00004_00005, 6], aux275, aux64)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6], M_00004_00001, M_00004_00001)
watchelement_one([M_00004_00002, M_00004_00003, 6, M_00004_00005, 6], aux280, M_00004_00002)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6], M_00004_00003, M_00004_00003)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6], M_00004_00005, M_00004_00005)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6], M_00005_00001, aux33)
watchelement_one([M_00004_00002, M_00004_00003, 6, M_00004_00005, 6], aux278, aux38)
watchelement_one([M_00004_00001, M_00004_00002, M_00004_00003, 6, M_00004_00005, 6], M_00005_00003, aux31)
watchelement_one([M_00004_00002, M_00004_00003, 6, M_00004_00005, 6], aux273, 6)
watchelement_one([M_00005_00002, M_00005_00003], aux279, aux68)
watchelement_one([M_00005_00002, M_00005_00003, M_00005_00004, 6, 6], aux272, aux61)
watchelement_one([M_00005_00004, 6, 6], aux283, 6)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6], M_00002_00001, aux32)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003], M_00002_00003, aux34)
watchelement_one([M_00005_00004, 6, 6], aux274, aux39)
watchelement_one([6, 6], aux282, 6)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6], M_00003_00001, aux58)
watchelement_one([M_00005_00002, M_00005_00003, M_00005_00004, 6, 6], aux281, aux11)
watchelement_one([M_00005_00004, 6, 6], aux277, aux10)
watchelement_one([M_00005_00004, 6, 6], aux275, 6)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6], M_00004_00001, aux33)
watchelement_one([M_00005_00002, M_00005_00003, M_00005_00004, 6, 6], aux280, aux38)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6], M_00004_00003, aux31)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6], M_00004_00005, 6)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6], M_00005_00001, M_00005_00001)
watchelement_one([M_00005_00002, M_00005_00003, M_00005_00004, 6, 6], aux278, M_00005_00002)
watchelement_one([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, 6, 6], M_00005_00003, M_00005_00003)
watchelement_one([M_00005_00002, M_00005_00003, M_00005_00004, 6, 6], aux273, M_00005_00004)
sumleq([M_00004_00001,M_00001_00004],11)
sumleq([M_00005_00001,M_00001_00005],11)
sumleq([M_00002_00004,M_00004_00002],11)
sumleq([M_00002_00005,M_00005_00002],11)
sumleq([M_00003_00004,M_00004_00003],11)
sumleq([M_00003_00005,M_00005_00003],11)
sumleq([M_00004_00005,M_00005_00004],11)
lexleq([M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux105, aux373, aux374, aux202, aux144, aux375, aux376, aux160, aux138, aux377, aux378, aux379, aux380, aux381, aux382, aux383, aux384])
lexleq([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux385, aux199, aux177, aux386, aux168, aux226, aux387, aux388, aux389, aux390, aux391, aux392, aux162, aux158, aux393, aux394, aux395, aux396])
lexleq([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux397, aux140, aux191, aux398, aux172, aux202, aux227, aux399, aux400, aux401, aux402, aux403, aux404, aux405, aux406, aux407, aux408, aux170, aux122])
lexleq([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux164, aux199, aux409, aux410, aux203, aux226, aux156, aux411, aux412, aux413, aux414, aux415, aux416, aux169, aux148, aux417, aux418, aux419, aux420])
lexleq([M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux180, aux421, aux191, aux422, aux203, aux127, aux227, aux423, aux424, aux425, aux426, aux427, aux428, aux429, aux430, aux431, aux432, aux150, aux134])
lexleq([2, M_00001_00003, M_00001_00004, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux193, 3, aux433, aux434, aux435, M_00003_00004, M_00003_00005, aux436, aux228, aux437, aux438, aux439, aux440, aux441, aux442, aux443, aux444])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux193, 3, aux105, aux445, aux446, aux447, aux160, aux138, aux448, aux228, aux202, aux144, aux449, aux450, aux451, aux452, aux453, aux454, aux455, aux456])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux206, aux457, 4, aux177, aux458, aux162, aux459, aux158, aux460, aux461, aux462, aux463, aux464, aux222, aux168, M_00002_00005, aux465, aux466, aux467, aux468])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux184, aux469, aux140, 5, aux470, aux170, aux122, aux471, aux472, aux473, aux474, aux475, aux476, aux477, aux478, aux479, aux480, aux223, aux172, aux202])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux206, aux164, 4, aux481, aux482, aux169, aux483, aux148, aux484, aux485, aux486, aux487, aux488, aux222, aux203, aux156, aux489, aux490, aux491, aux492])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux184, aux180, aux493, 5, aux494, aux150, aux134, aux495, aux496, aux497, aux498, aux499, aux500, aux501, aux502, aux503, aux504, aux223, aux203, aux127])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux505, 3, aux187, aux104, aux506, aux507, aux508, aux509, aux510, aux141, aux230, M_00002_00005, aux511, aux142, aux512, aux163, aux513, aux514, aux515, aux516])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux517, 3, aux161, aux207, aux518, aux519, aux520, aux521, aux522, aux149, aux202, aux229, aux523, aux524, aux525, aux526, aux527, aux152, aux528, aux171])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux529, aux201, 4, aux104, aux530, aux531, aux532, aux533, aux534, aux142, aux535, aux163, aux536, aux141, aux221, M_00002_00005, aux537, aux538, aux539, aux540])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux541, aux189, aux161, 5, aux542, aux543, aux544, aux545, aux546, aux152, aux171, aux547, aux548, aux549, aux550, aux551, aux552, aux149, aux225, aux202])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux553, aux125, 4, aux185, aux554, aux555, aux556, aux557, aux558, aux559, aux560, aux561, aux562, aux116, aux203, aux220, aux563, aux119, aux139, aux564])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux565, aux125, aux209, 5, aux566, aux567, aux568, aux569, aux570, aux571, aux572, aux573, aux574, aux119, aux139, aux575, aux576, aux116, aux203, aux224])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux126, 3, aux187, aux577, aux578, aux579, aux580, aux581, aux582, aux204, aux230, aux111, aux583, aux137, aux584, aux113, aux585, aux586, aux587, aux588])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux157, 3, aux589, aux207, aux590, aux591, aux592, aux593, aux594, aux204, aux176, aux229, aux595, aux596, aux597, aux598, aux599, aux117, aux600, aux181])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux126, aux201, 4, aux601, aux602, aux603, aux604, aux605, aux606, aux137, aux607, aux113, aux608, aux204, aux221, aux111, aux609, aux610, aux611, aux612])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux157, aux189, aux613, 5, aux614, aux615, aux616, aux617, aux618, aux117, aux181, aux619, aux620, aux621, aux622, aux623, aux624, aux204, aux225, aux176])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux165, aux625, 4, aux185, aux626, aux627, aux628, aux629, aux630, aux631, aux632, aux633, aux634, aux204, aux153, aux220, aux635, aux182, aux147, aux636])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux165, aux637, aux209, 5, aux638, aux639, aux640, aux641, aux642, aux643, aux644, aux645, aux646, aux182, aux147, aux647, aux648, aux204, aux153, aux224])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux649, aux217, M_00002_00004, M_00002_00005, 1, aux190, aux650, aux651, aux652, aux653, aux654, aux655, aux656, aux657, aux658, aux659, aux660])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux661, aux217, aux202, aux144, 1, aux190, aux105, aux662, aux663, aux664, aux160, aux138, aux665, aux666, aux667, aux668, aux669, aux670, aux671, aux672])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux673, aux168, aux218, M_00002_00005, 1, aux674, aux195, aux177, aux675, aux676, aux677, aux678, aux679, aux680, aux162, aux158, aux681, aux682, aux683, aux684])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux685, aux172, aux202, aux219, 1, aux686, aux140, aux186, aux687, aux688, aux689, aux690, aux691, aux692, aux693, aux694, aux695, aux696, aux170, aux122])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux697, aux203, aux218, aux156, 1, aux164, aux195, aux698, aux699, aux700, aux701, aux702, aux703, aux704, aux169, aux148, aux705, aux706, aux707, aux708])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux709, aux203, aux127, aux219, 1, aux180, aux710, aux186, aux711, aux712, aux713, aux714, aux715, aux716, aux717, aux718, aux719, aux720, aux150, aux134])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux235, aux721, M_00002_00004, M_00002_00005, aux722, aux723, M_00003_00004, M_00003_00005, 1, aux198, aux724, aux725, aux726, aux727, aux728, aux729, aux730, aux731, aux732])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux235, aux733, aux202, aux144, aux734, aux735, aux160, aux138, 1, aux198, aux105, aux736, aux737, aux738, aux739, aux740, aux741, aux742, aux743, aux744])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux257, aux168, aux745, M_00002_00005, aux746, aux162, aux747, aux158, aux748, aux749, aux750, aux751, 1, aux198, aux752, aux177, aux753, aux754, aux755, aux756])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux261, aux172, aux202, aux757, aux758, aux170, aux122, aux759, aux760, aux761, aux762, aux763, aux764, aux765, aux766, aux767, 1, aux198, aux768, aux140])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux257, aux203, aux769, aux156, aux770, aux169, aux771, aux148, aux772, aux773, aux774, aux775, 1, aux198, aux164, aux776, aux777, aux778, aux779, aux780])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux261, aux203, aux127, aux781, aux782, aux150, aux134, aux783, aux784, aux785, aux786, aux787, aux788, aux789, aux790, aux791, 1, aux198, aux180, aux792])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux141, aux793, aux234, M_00002_00005, aux794, aux795, aux796, aux797, 1, aux798, aux195, aux104, aux799, aux142, aux800, aux163, aux801, aux802, aux803, aux804])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux149, aux805, aux202, aux236, aux806, aux807, aux808, aux809, 1, aux810, aux161, aux186, aux811, aux812, aux813, aux814, aux815, aux152, aux816, aux171])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux141, aux256, aux817, M_00002_00005, aux818, aux819, aux820, aux821, aux822, aux142, aux823, aux163, 1, aux824, aux190, aux104, aux825, aux826, aux827, aux828])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux149, aux262, aux202, aux829, aux830, aux831, aux832, aux833, aux834, aux152, aux171, aux835, aux836, aux837, aux838, aux839, 1, aux840, aux190, aux161])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux116, aux203, aux841, aux255, aux842, aux843, aux844, aux845, aux846, aux847, aux848, aux849, 1, aux850, aux125, aux186, aux851, aux119, aux139, aux852])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux116, aux203, aux263, aux853, aux854, aux855, aux856, aux857, aux858, aux859, aux860, aux861, aux862, aux119, aux139, aux863, 1, aux864, aux125, aux195])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux204, aux865, aux234, aux111, aux866, aux867, aux868, aux869, 1, aux126, aux195, aux870, aux871, aux137, aux872, aux113, aux873, aux874, aux875, aux876])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux204, aux877, aux176, aux236, aux878, aux879, aux880, aux881, 1, aux157, aux882, aux186, aux883, aux884, aux885, aux886, aux887, aux117, aux888, aux181])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux204, aux256, aux889, aux111, aux890, aux891, aux892, aux893, aux894, aux137, aux895, aux113, 1, aux126, aux190, aux896, aux897, aux898, aux899, aux900])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux204, aux262, aux176, aux901, aux902, aux903, aux904, aux905, aux906, aux117, aux181, aux907, aux908, aux909, aux910, aux911, 1, aux157, aux190, aux912])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux204, aux153, aux913, aux255, aux914, aux915, aux916, aux917, aux918, aux919, aux920, aux921, 1, aux165, aux922, aux186, aux923, aux182, aux147, aux924])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux204, aux153, aux263, aux925, aux926, aux927, aux928, aux929, aux930, aux931, aux932, aux933, aux934, aux182, aux147, aux935, 1, aux165, aux936, aux195])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux937, aux938, M_00003_00004, M_00003_00005, aux200, 3, aux939, M_00001_00005, aux213, aux940, M_00002_00004, aux941, aux942, aux943, aux944, aux945, aux946, aux947, aux948])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux949, aux950, aux160, aux138, aux200, 3, aux105, aux951, aux213, aux952, aux202, aux144, aux953, aux954, aux955, aux956, aux957, aux958, aux959, aux960])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux961, aux162, aux962, aux158, aux188, aux963, 4, aux177, aux964, aux965, aux966, aux967, aux216, aux968, aux168, M_00002_00005, aux969, aux970, aux971, aux972])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux973, aux170, aux122, aux974, aux192, aux975, aux140, 5, aux976, aux977, aux978, aux979, aux980, aux981, aux982, aux983, aux243, aux984, aux172, aux202])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux985, aux169, aux986, aux148, aux188, aux164, 4, aux987, aux988, aux989, aux990, aux991, aux216, aux992, aux203, aux156, aux993, aux994, aux995, aux996])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux997, aux150, aux134, aux998, aux192, aux180, aux999, 5, aux1000, aux1001, aux1002, aux1003, aux1004, aux1005, aux1006, aux1007, aux243, aux1008, aux203, aux127])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00003_00001, M_00003_00002, M_00003_00004, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1009, aux1010, M_00003_00004, M_00003_00005, aux233, aux1011, aux194, 2, aux1012, aux1013, aux1014, aux1015, aux1016, aux1017, aux1018, aux1019, aux1020])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1021, aux1022, aux160, aux138, aux233, aux1023, aux202, aux144, aux194, 2, aux105, aux1024, aux1025, aux1026, aux1027, aux1028, aux1029, aux1030, aux1031, aux1032])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1033, aux162, aux1034, aux158, aux248, aux168, aux1035, aux1036, aux1037, aux1038, aux1039, aux194, 2, aux1040, aux177, aux1041, aux1042, aux1043, aux1044])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1045, aux170, aux122, aux1046, aux260, aux172, aux202, aux1047, aux1048, aux1049, aux1050, aux1051, aux1052, aux1053, aux1054, aux1055, aux194, 2, aux1056, aux140])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1057, aux169, aux1058, aux148, aux248, aux203, aux1059, aux156, aux1060, aux1061, aux1062, aux1063, aux194, 2, aux164, aux1064, aux1065, aux1066, aux1067, aux1068])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1069, aux150, aux134, aux1070, aux260, aux203, aux127, aux1071, aux1072, aux1073, aux1074, aux1075, aux1076, aux1077, aux1078, aux1079, aux194, 2, aux180, aux1080])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux142, aux1081, aux1082, aux163, aux1083, aux1084, aux1085, aux1086, aux188, aux1087, 4, aux104, aux241, aux141, aux1088, M_00002_00005, aux1089, aux1090, aux1091, aux1092])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux152, aux1093, aux171, aux1094, aux1095, aux1096, aux1097, aux1098, aux192, aux1099, aux161, 5, aux1100, aux1101, aux1102, aux1103, aux238, aux149, aux1104, aux202])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux142, aux1105, aux1106, aux163, aux1107, aux1108, aux1109, aux1110, aux246, aux141, aux1111, M_00002_00005, aux200, aux1112, 3, aux104, aux1113, aux1114, aux1115, aux1116])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux152, aux1117, aux171, aux1118, aux1119, aux1120, aux1121, aux1122, aux269, aux149, aux202, aux1123, aux1124, aux1125, aux1126, aux1127, aux200, aux1128, 3, aux161])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux119, aux139, aux1129, aux1130, aux1131, aux1132, aux1133, aux1134, aux1135, aux1136, aux1137, aux1138, aux192, aux1139, aux125, 5, aux252, aux116, aux203, aux1140])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux119, aux139, aux1141, aux1142, aux1143, aux1144, aux1145, aux1146, aux1147, aux1148, aux1149, aux1150, aux266, aux116, aux203, aux1151, aux188, aux1152, aux125, 4])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux137, aux1153, aux1154, aux113, aux1155, aux1156, aux1157, aux1158, aux188, aux126, 4, aux1159, aux241, aux204, aux1160, aux111, aux1161, aux1162, aux1163, aux1164])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux117, aux1165, aux181, aux1166, aux1167, aux1168, aux1169, aux1170, aux192, aux157, aux1171, 5, aux1172, aux1173, aux1174, aux1175, aux238, aux204, aux1176, aux176])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux137, aux1177, aux1178, aux113, aux1179, aux1180, aux1181, aux1182, aux246, aux204, aux1183, aux111, aux200, aux126, 3, aux1184, aux1185, aux1186, aux1187, aux1188])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux117, aux1189, aux181, aux1190, aux1191, aux1192, aux1193, aux1194, aux269, aux204, aux176, aux1195, aux1196, aux1197, aux1198, aux1199, aux200, aux157, 3, aux1200])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux182, aux147, aux1201, aux1202, aux1203, aux1204, aux1205, aux1206, aux1207, aux1208, aux1209, aux1210, aux192, aux165, aux1211, 5, aux252, aux204, aux153, aux1212])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux182, aux147, aux1213, aux1214, aux1215, aux1216, aux1217, aux1218, aux1219, aux1220, aux1221, aux1222, aux266, aux204, aux153, aux1223, aux188, aux165, aux1224, 4])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1225, aux1226, aux1227, aux1228, aux1229, 3, aux187, aux132, aux107, aux1230, aux212, M_00002_00005, aux124, aux1231, aux1232, aux143, aux1233, aux1234, aux1235, aux1236])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1237, aux1238, aux1239, aux1240, aux1241, 3, aux179, aux207, aux167, aux1242, aux202, aux211, aux1243, aux1244, aux1245, aux1246, aux135, aux1247, aux1248, aux154])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1249, aux1250, aux1251, aux1252, aux1253, aux201, 4, aux132, aux124, aux1254, aux1255, aux143, aux107, aux1256, aux215, M_00002_00005, aux1257, aux1258, aux1259, aux1260])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1261, aux1262, aux1263, aux1264, aux1265, aux189, aux179, 5, aux135, aux1266, aux154, aux1267, aux1268, aux1269, aux1270, aux1271, aux167, aux1272, aux244, aux202])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1273, aux1274, aux1275, aux1276, aux1277, aux155, 4, aux185, aux1278, aux1279, aux1280, aux1281, aux173, aux1282, aux203, aux214, aux183, aux1283, aux121, aux1284])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1285, aux1286, aux1287, aux1288, aux1289, aux155, aux209, 5, aux1290, aux1291, aux1292, aux1293, aux183, aux1294, aux121, aux1295, aux173, aux1296, aux203, aux245])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1297, aux1298, aux1299, aux1300, aux107, aux1301, aux231, aux1302, 2, aux199, aux132, aux124, aux1303, aux1304, aux143, aux1305, aux1306, aux1307, aux1308])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1309, aux1310, aux1311, aux1312, aux167, aux1313, aux202, aux232, aux1314, 2, aux179, aux191, aux1315, aux1316, aux1317, aux1318, aux135, aux1319, aux1320, aux154])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1321, aux1322, aux1323, aux1324, aux107, aux249, aux1325, aux124, aux1326, aux1327, aux143, aux1328, 2, M_00001_00003, aux132, aux1329, aux1330, aux1331, aux1332])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1333, aux1334, aux1335, aux1336, aux167, aux258, aux202, aux1337, aux135, aux1338, aux154, aux1339, aux1340, aux1341, aux1342, aux1343, aux1344, 2, M_00001_00003, aux179])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1345, aux1346, aux1347, aux1348, aux173, aux203, aux1349, aux250, aux1350, aux1351, aux1352, aux1353, aux1354, 2, aux155, aux191, aux183, aux1355, aux121, aux1356])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1357, aux1358, aux1359, aux1360, aux173, aux203, aux259, aux1361, aux1362, aux1363, aux1364, aux1365, aux183, aux1366, aux121, aux1367, aux1368, 2, aux155, aux199])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1369, aux1370, aux1371, aux1372, aux124, aux1373, aux1374, aux143, aux1375, aux206, 4, aux132, aux107, aux242, aux1376, M_00002_00005, aux1377, aux1378, aux1379, aux1380])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1381, aux1382, aux1383, aux1384, aux135, aux1385, aux154, aux1386, aux1387, aux184, aux179, 5, aux1388, aux1389, aux1390, aux1391, aux167, aux237, aux1392, aux202])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1393, aux1394, aux1395, aux1396, aux124, aux1397, aux1398, aux143, aux107, aux247, aux1399, M_00002_00005, aux1400, aux193, 3, aux132, aux1401, aux1402, aux1403, aux1404])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1405, aux1406, aux1407, aux1408, aux135, aux1409, aux154, aux1410, aux167, aux268, aux202, aux1411, aux1412, aux1413, aux1414, aux1415, aux1416, aux193, 3, aux179])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1417, aux1418, aux1419, aux1420, aux183, aux121, aux1421, aux1422, aux1423, aux1424, aux1425, aux1426, aux1427, aux184, aux155, 5, aux173, aux253, aux203, aux1428])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1429, aux1430, aux1431, aux1432, aux183, aux121, aux1433, aux1434, aux1435, aux1436, aux1437, aux1438, aux173, aux264, aux203, aux1439, aux1440, aux206, aux155, 4])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1441, aux1442, aux1443, aux1444, aux1445, aux1446, aux1447, aux1448, aux1449, aux118, 4, aux185, aux145, aux204, aux1450, aux240, aux136, aux133, aux1451, aux1452])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1453, aux1454, aux1455, aux1456, aux1457, aux1458, aux1459, aux1460, aux1461, aux118, aux209, 5, aux136, aux133, aux1462, aux1463, aux145, aux204, aux1464, aux239])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1465, aux1466, aux1467, aux1468, aux1469, aux1470, aux1471, aux1472, aux145, aux204, aux1473, aux251, aux1474, aux118, 3, aux207, aux136, aux133, aux1475, aux1476])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1477, aux1478, aux1479, aux1480, aux1481, aux1482, aux1483, aux1484, aux145, aux204, aux267, aux1485, aux136, aux133, aux1486, aux1487, aux1488, aux118, 3, aux187])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1489, aux1490, aux1491, aux1492, aux1493, aux1494, aux1495, aux1496, aux136, aux133, aux1497, aux1498, aux1499, aux118, aux189, 5, aux145, aux204, aux254, aux1500])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1501, aux1502, aux1503, aux1504, aux1505, aux1506, aux1507, aux1508, aux136, aux133, aux1509, aux1510, aux145, aux204, aux265, aux1511, aux1512, aux118, aux201, 4])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1513, aux1514, aux1515, aux1516, aux175, 3, aux187, aux1517, aux205, aux1518, aux212, aux129, aux146, aux1519, aux1520, aux130, aux1521, aux1522, aux1523, aux1524])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1525, aux1526, aux1527, aux1528, aux123, 3, aux1529, aux207, aux205, aux1530, aux103, aux211, aux1531, aux1532, aux1533, aux1534, aux131, aux1535, aux1536, aux108])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1537, aux1538, aux1539, aux1540, aux175, aux201, 4, aux1541, aux146, aux1542, aux1543, aux130, aux205, aux1544, aux215, aux129, aux1545, aux1546, aux1547, aux1548])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1549, aux1550, aux1551, aux1552, aux123, aux189, aux1553, 5, aux131, aux1554, aux108, aux1555, aux1556, aux1557, aux1558, aux1559, aux205, aux1560, aux244, aux103])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1561, aux1562, aux1563, aux1564, aux128, aux1565, 4, aux185, aux1566, aux1567, aux1568, aux1569, aux205, aux1570, aux120, aux214, aux109, aux1571, aux112, aux1572])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1573, aux1574, aux1575, aux1576, aux128, aux1577, aux209, 5, aux1578, aux1579, aux1580, aux1581, aux109, aux1582, aux112, aux1583, aux205, aux1584, aux120, aux245])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1585, aux1586, aux1587, aux1588, aux205, aux1589, aux231, aux129, aux175, 2, aux199, aux1590, aux146, aux1591, aux1592, aux130, aux1593, aux1594, aux1595, aux1596])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1597, aux1598, aux1599, aux1600, aux205, aux1601, aux103, aux232, aux123, 2, aux1602, aux191, aux1603, aux1604, aux1605, aux1606, aux131, aux1607, aux1608, aux108])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1609, aux1610, aux1611, aux1612, aux205, aux249, aux1613, aux129, aux146, aux1614, aux1615, aux130, aux175, 2, M_00001_00003, aux1616, aux1617, aux1618, aux1619, aux1620])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1621, aux1622, aux1623, aux1624, aux205, aux258, aux103, aux1625, aux131, aux1626, aux108, aux1627, aux1628, aux1629, aux1630, aux1631, aux123, 2, M_00001_00003, aux1632])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1633, aux1634, aux1635, aux1636, aux205, aux120, aux1637, aux250, aux1638, aux1639, aux1640, aux1641, aux128, 2, aux1642, aux191, aux109, aux1643, aux112, aux1644])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1645, aux1646, aux1647, aux1648, aux205, aux120, aux259, aux1649, aux1650, aux1651, aux1652, aux1653, aux109, aux1654, aux112, aux1655, aux128, 2, aux1656, aux199])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1657, aux1658, aux1659, aux1660, aux146, aux1661, aux1662, aux130, aux175, aux206, 4, aux1663, aux205, aux242, aux1664, aux129, aux1665, aux1666, aux1667, aux1668])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1669, aux1670, aux1671, aux1672, aux131, aux1673, aux108, aux1674, aux123, aux184, aux1675, 5, aux1676, aux1677, aux1678, aux1679, aux205, aux237, aux1680, aux103])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1681, aux1682, aux1683, aux1684, aux146, aux1685, aux1686, aux130, aux205, aux247, aux1687, aux129, aux175, aux193, 3, aux1688, aux1689, aux1690, aux1691, aux1692])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1693, aux1694, aux1695, aux1696, aux131, aux1697, aux108, aux1698, aux205, aux268, aux103, aux1699, aux1700, aux1701, aux1702, aux1703, aux123, aux193, 3, aux1704])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1705, aux1706, aux1707, aux1708, aux109, aux112, aux1709, aux1710, aux1711, aux1712, aux1713, aux1714, aux128, aux184, aux1715, 5, aux205, aux253, aux120, aux1716])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1717, aux1718, aux1719, aux1720, aux109, aux112, aux1721, aux1722, aux1723, aux1724, aux1725, aux1726, aux205, aux264, aux120, aux1727, aux128, aux206, aux1728, 4])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1729, aux1730, aux1731, aux1732, aux1733, aux1734, aux1735, aux1736, aux159, aux1737, 4, aux185, aux205, aux174, aux1738, aux240, aux114, aux178, aux1739, aux1740])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1741, aux1742, aux1743, aux1744, aux1745, aux1746, aux1747, aux1748, aux159, aux1749, aux209, 5, aux114, aux178, aux1750, aux1751, aux205, aux174, aux1752, aux239])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1753, aux1754, aux1755, aux1756, aux1757, aux1758, aux1759, aux1760, aux205, aux174, aux1761, aux251, aux159, aux1762, 3, aux207, aux114, aux178, aux1763, aux1764])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1765, aux1766, aux1767, aux1768, aux1769, aux1770, aux1771, aux1772, aux205, aux174, aux267, aux1773, aux114, aux178, aux1774, aux1775, aux159, aux1776, 3, aux187])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1777, aux1778, aux1779, aux1780, aux1781, aux1782, aux1783, aux1784, aux114, aux178, aux1785, aux1786, aux159, aux1787, aux189, 5, aux205, aux174, aux254, aux1788])
lexleq([2, M_00001_00003, M_00001_00004, M_00001_00005, M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00003_00001, M_00003_00002, M_00003_00004, M_00003_00005, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004],[aux1789, aux1790, aux1791, aux1792, aux1793, aux1794, aux1795, aux1796, aux114, aux178, aux1797, aux1798, aux205, aux174, aux265, aux1799, aux159, aux1800, aux201, 4])
weightedsumleq([1,1,6],[-6,M_00005_00001,M_00005_00003],aux284)
weightedsumgeq([1,1,6],[-6,M_00005_00001,M_00005_00003],aux284)
weightedsumleq([1,6,1],[-6,M_00005_00001,M_00005_00003],aux285)
weightedsumgeq([1,6,1],[-6,M_00005_00001,M_00005_00003],aux285)
weightedsumleq([6,1,1],[M_00004_00003,M_00004_00005,-6],aux286)
weightedsumgeq([6,1,1],[M_00004_00003,M_00004_00005,-6],aux286)
weightedsumleq([6,1,1],[M_00004_00001,M_00004_00005,-6],aux287)
weightedsumgeq([6,1,1],[M_00004_00001,M_00004_00005,-6],aux287)
weightedsumleq([6,1,1],[M_00004_00001,M_00004_00003,-6],aux288)
weightedsumgeq([6,1,1],[M_00004_00001,M_00004_00003,-6],aux288)
weightedsumleq([1,6,1],[M_00004_00003,M_00004_00005,-6],aux289)
weightedsumgeq([1,6,1],[M_00004_00003,M_00004_00005,-6],aux289)
weightedsumleq([1,6,1],[M_00004_00001,M_00004_00003,-6],aux290)
weightedsumgeq([1,6,1],[M_00004_00001,M_00004_00003,-6],aux290)
weightedsumleq([1,6,1],[M_00004_00001,M_00004_00005,-6],aux291)
weightedsumgeq([1,6,1],[M_00004_00001,M_00004_00005,-6],aux291)
weightedsumleq([1,6,1],[-7,M_00005_00001,M_00005_00004],aux292)
weightedsumgeq([1,6,1],[-7,M_00005_00001,M_00005_00004],aux292)
weightedsumleq([1,6,1],[-7,M_00005_00001,M_00005_00002],aux293)
weightedsumgeq([1,6,1],[-7,M_00005_00001,M_00005_00002],aux293)
weightedsumleq([1,6,1],[-7,M_00005_00003,M_00005_00004],aux294)
weightedsumgeq([1,6,1],[-7,M_00005_00003,M_00005_00004],aux294)
weightedsumleq([1,1,6],[-7,M_00005_00002,M_00005_00003],aux295)
weightedsumgeq([1,1,6],[-7,M_00005_00002,M_00005_00003],aux295)
weightedsumleq([6,1,1],[M_00003_00001,M_00003_00002,-7],aux296)
weightedsumgeq([6,1,1],[M_00003_00001,M_00003_00002,-7],aux296)
weightedsumleq([7,1],[M_00004_00001,-6],aux297)
weightedsumgeq([7,1],[M_00004_00001,-6],aux297)
weightedsumleq([7,1],[M_00004_00003,-6],aux298)
weightedsumgeq([7,1],[M_00004_00003,-6],aux298)
weightedsumleq([7,1],[M_00004_00005,-6],aux299)
weightedsumgeq([7,1],[M_00004_00005,-6],aux299)
weightedsumleq([1,7],[-6,M_00005_00003],aux300)
weightedsumgeq([1,7],[-6,M_00005_00003],aux300)
weightedsumleq([1,7],[-6,M_00005_00001],aux301)
weightedsumgeq([1,7],[-6,M_00005_00001],aux301)
weightedsumleq([1,6,1],[M_00004_00002,M_00004_00005,-7],aux302)
weightedsumgeq([1,6,1],[M_00004_00002,M_00004_00005,-7],aux302)
weightedsumleq([1,6,1],[M_00004_00002,M_00004_00003,-7],aux303)
weightedsumgeq([1,6,1],[M_00004_00002,M_00004_00003,-7],aux303)
weightedsumleq([6,1,1],[M_00004_00001,M_00004_00002,-7],aux304)
weightedsumgeq([6,1,1],[M_00004_00001,M_00004_00002,-7],aux304)
weightedsumleq([7,1],[M_00003_00001,-6],aux305)
weightedsumgeq([7,1],[M_00003_00001,-6],aux305)
weightedsumleq([6,1,1],[M_00003_00001,M_00003_00004,-9],aux306)
weightedsumgeq([6,1,1],[M_00003_00001,M_00003_00004,-9],aux306)
weightedsumleq([6,1,1],[M_00003_00001,M_00003_00005,-9],aux307)
weightedsumgeq([6,1,1],[M_00003_00001,M_00003_00005,-9],aux307)
weightedsumleq([1,6],[-5,M_00005_00001],aux308)
weightedsumgeq([1,6],[-5,M_00005_00001],aux308)
weightedsumleq([1,6],[-5,M_00005_00003],aux309)
weightedsumgeq([1,6],[-5,M_00005_00003],aux309)
weightedsumleq([6,1],[M_00003_00001,-5],aux310)
weightedsumgeq([6,1],[M_00003_00001,-5],aux310)
weightedsumleq([1,6,1],[M_00003_00001,M_00003_00002,-12],aux311)
weightedsumgeq([1,6,1],[M_00003_00001,M_00003_00002,-12],aux311)
weightedsumleq([6,1],[M_00004_00005,-5],aux312)
weightedsumgeq([6,1],[M_00004_00005,-5],aux312)
weightedsumleq([6,1],[M_00004_00001,-5],aux313)
weightedsumgeq([6,1],[M_00004_00001,-5],aux313)
weightedsumleq([6,1],[M_00004_00003,-5],aux314)
weightedsumgeq([6,1],[M_00004_00003,-5],aux314)
weightedsumleq([1,1,6],[-12,M_00005_00003,M_00005_00004],aux315)
weightedsumgeq([1,1,6],[-12,M_00005_00003,M_00005_00004],aux315)
weightedsumleq([1,1,6],[-12,M_00005_00001,M_00005_00002],aux316)
weightedsumgeq([1,1,6],[-12,M_00005_00001,M_00005_00002],aux316)
weightedsumleq([1,1,6],[-12,M_00005_00001,M_00005_00004],aux317)
weightedsumgeq([1,1,6],[-12,M_00005_00001,M_00005_00004],aux317)
weightedsumleq([1,6,1],[-12,M_00005_00002,M_00005_00003],aux318)
weightedsumgeq([1,6,1],[-12,M_00005_00002,M_00005_00003],aux318)
weightedsumleq([6,1,1],[M_00004_00002,M_00004_00005,-12],aux319)
weightedsumgeq([6,1,1],[M_00004_00002,M_00004_00005,-12],aux319)
weightedsumleq([6,1,1],[M_00004_00002,M_00004_00003,-12],aux320)
weightedsumgeq([6,1,1],[M_00004_00002,M_00004_00003,-12],aux320)
weightedsumleq([1,6,1],[M_00004_00001,M_00004_00002,-12],aux321)
weightedsumgeq([1,6,1],[M_00004_00001,M_00004_00002,-12],aux321)
weightedsumleq([1,1,6],[-13,M_00005_00002,M_00005_00004],aux322)
weightedsumgeq([1,1,6],[-13,M_00005_00002,M_00005_00004],aux322)
weightedsumleq([1,6,1],[-13,M_00005_00002,M_00005_00004],aux323)
weightedsumgeq([1,6,1],[-13,M_00005_00002,M_00005_00004],aux323)
weightedsumleq([7,1],[M_00004_00002,-13],aux324)
weightedsumgeq([7,1],[M_00004_00002,-13],aux324)
weightedsumleq([1,7],[-13,M_00005_00002],aux325)
weightedsumgeq([1,7],[-13,M_00005_00002],aux325)
weightedsumleq([1,7],[-13,M_00005_00004],aux326)
weightedsumgeq([1,7],[-13,M_00005_00004],aux326)
weightedsumleq([7,1],[M_00003_00002,-13],aux327)
weightedsumgeq([7,1],[M_00003_00002,-13],aux327)
weightedsumleq([1,7],[-13,M_00001_00004],aux328)
weightedsumgeq([1,7],[-13,M_00001_00004],aux328)
weightedsumleq([1,6,1],[-15,M_00001_00004,M_00001_00005],aux329)
weightedsumgeq([1,6,1],[-15,M_00001_00004,M_00001_00005],aux329)
weightedsumleq([6,1,1],[M_00003_00002,M_00003_00005,-15],aux330)
weightedsumgeq([6,1,1],[M_00003_00002,M_00003_00005,-15],aux330)
weightedsumleq([6,1,1],[M_00003_00002,M_00003_00004,-15],aux331)
weightedsumgeq([6,1,1],[M_00003_00002,M_00003_00004,-15],aux331)
weightedsumleq([1,1,6],[-13,M_00001_00003,M_00001_00004],aux332)
weightedsumgeq([1,1,6],[-13,M_00001_00003,M_00001_00004],aux332)
weightedsumleq([1,6],[-11,M_00005_00004],aux333)
weightedsumgeq([1,6],[-11,M_00005_00004],aux333)
weightedsumleq([1,6],[-11,M_00005_00002],aux334)
weightedsumgeq([1,6],[-11,M_00005_00002],aux334)
weightedsumleq([6,1],[M_00004_00002,-11],aux335)
weightedsumgeq([6,1],[M_00004_00002,-11],aux335)
weightedsumleq([6,1],[M_00003_00002,-11],aux336)
weightedsumgeq([6,1],[M_00003_00002,-11],aux336)
weightedsumleq([1,6,1],[M_00002_00001,M_00002_00004,-24],aux337)
weightedsumgeq([1,6,1],[M_00002_00001,M_00002_00004,-24],aux337)
weightedsumleq([1,6,1],[M_00002_00001,M_00002_00003,-6],aux338)
weightedsumgeq([1,6,1],[M_00002_00001,M_00002_00003,-6],aux338)
weightedsumleq([1,6,1],[M_00003_00001,M_00003_00004,-24],aux339)
weightedsumgeq([1,6,1],[M_00003_00001,M_00003_00004,-24],aux339)
weightedsumleq([1,6,1],[M_00003_00001,M_00003_00005,-24],aux340)
weightedsumgeq([1,6,1],[M_00003_00001,M_00003_00005,-24],aux340)
weightedsumleq([1,6,1],[M_00003_00002,M_00003_00004,-25],aux341)
weightedsumgeq([1,6,1],[M_00003_00002,M_00003_00004,-25],aux341)
weightedsumleq([1,6,1],[M_00003_00002,M_00003_00005,-25],aux342)
weightedsumgeq([1,6,1],[M_00003_00002,M_00003_00005,-25],aux342)
weightedsumleq([1,1,6],[-25,M_00001_00004,M_00001_00005],aux343)
weightedsumgeq([1,1,6],[-25,M_00001_00004,M_00001_00005],aux343)
weightedsumleq([6,1,1],[M_00002_00003,M_00002_00004,-9],aux344)
weightedsumgeq([6,1,1],[M_00002_00003,M_00002_00004,-9],aux344)
weightedsumleq([1,6,1],[M_00002_00003,M_00002_00004,-24],aux345)
weightedsumgeq([1,6,1],[M_00002_00003,M_00002_00004,-24],aux345)
weightedsumleq([6,1,1],[M_00003_00004,M_00003_00005,-27],aux346)
weightedsumgeq([6,1,1],[M_00003_00004,M_00003_00005,-27],aux346)
weightedsumleq([1,6,1],[M_00003_00004,M_00003_00005,-27],aux347)
weightedsumgeq([1,6,1],[M_00003_00004,M_00003_00005,-27],aux347)
weightedsumleq([6,1,1],[M_00002_00003,M_00002_00005,-10],aux348)
weightedsumgeq([6,1,1],[M_00002_00003,M_00002_00005,-10],aux348)
weightedsumleq([1,7],[-27,M_00001_00005],aux349)
weightedsumgeq([1,7],[-27,M_00001_00005],aux349)
weightedsumleq([1,1,6],[-25,M_00001_00003,M_00001_00005],aux350)
weightedsumgeq([1,1,6],[-25,M_00001_00003,M_00001_00005],aux350)
weightedsumleq([7,1],[M_00002_00003,-6],aux351)
weightedsumgeq([7,1],[M_00002_00003,-6],aux351)
weightedsumleq([7,1],[M_00002_00004,-27],aux352)
weightedsumgeq([7,1],[M_00002_00004,-27],aux352)
weightedsumleq([7,1],[M_00003_00004,-27],aux353)
weightedsumgeq([7,1],[M_00003_00004,-27],aux353)
weightedsumleq([7,1],[M_00003_00005,-27],aux354)
weightedsumgeq([7,1],[M_00003_00005,-27],aux354)
weightedsumleq([6,1,1],[M_00002_00004,M_00002_00005,-28],aux355)
weightedsumgeq([6,1,1],[M_00002_00004,M_00002_00005,-28],aux355)
weightedsumleq([1,6,1],[M_00002_00001,M_00002_00005,-30],aux356)
weightedsumgeq([1,6,1],[M_00002_00001,M_00002_00005,-30],aux356)
weightedsumleq([6,1],[M_00002_00004,-23],aux357)
weightedsumgeq([6,1],[M_00002_00004,-23],aux357)
weightedsumleq([6,1],[M_00002_00003,-5],aux358)
weightedsumgeq([6,1],[M_00002_00003,-5],aux358)
weightedsumleq([6,1],[M_00003_00005,-23],aux359)
weightedsumgeq([6,1],[M_00003_00005,-23],aux359)
weightedsumleq([6,1],[M_00003_00004,-23],aux360)
weightedsumgeq([6,1],[M_00003_00004,-23],aux360)
weightedsumleq([1,6,1],[-13,M_00001_00003,M_00001_00004],aux361)
weightedsumgeq([1,6,1],[-13,M_00001_00003,M_00001_00004],aux361)
weightedsumleq([1,6,1],[M_00002_00004,M_00002_00005,-33],aux362)
weightedsumgeq([1,6,1],[M_00002_00004,M_00002_00005,-33],aux362)
weightedsumleq([1,6,1],[-15,M_00001_00003,M_00001_00005],aux363)
weightedsumgeq([1,6,1],[-15,M_00001_00003,M_00001_00005],aux363)
weightedsumleq([1,6,1],[M_00002_00003,M_00002_00005,-30],aux364)
weightedsumgeq([1,6,1],[M_00002_00003,M_00002_00005,-30],aux364)
weightedsumleq([1,7],[-13,M_00001_00003],aux365)
weightedsumgeq([1,7],[-13,M_00001_00003],aux365)
weightedsumleq([7,1],[M_00002_00005,-34],aux366)
weightedsumgeq([7,1],[M_00002_00005,-34],aux366)
weightedsumleq([6,1],[M_00002_00005,-29],aux367)
weightedsumgeq([6,1],[M_00002_00005,-29],aux367)
weightedsumleq([7,1],[M_00002_00001,-6],aux368)
weightedsumgeq([7,1],[M_00002_00001,-6],aux368)
weightedsumleq([6,1],[M_00002_00001,-5],aux369)
weightedsumgeq([6,1],[M_00002_00001,-5],aux369)
weightedsumleq([6,1,1],[M_00002_00001,M_00002_00003,-6],aux370)
weightedsumgeq([6,1,1],[M_00002_00001,M_00002_00003,-6],aux370)
weightedsumleq([6,1,1],[M_00002_00001,M_00002_00004,-9],aux371)
weightedsumgeq([6,1,1],[M_00002_00001,M_00002_00004,-9],aux371)
weightedsumleq([6,1,1],[M_00002_00001,M_00002_00005,-10],aux372)
weightedsumgeq([6,1,1],[M_00002_00001,M_00002_00005,-10],aux372)
weightedsumleq([1,6],[-11,M_00001_00003],aux270)
weightedsumgeq([1,6],[-11,M_00001_00003],aux270)
weightedsumleq([1,6],[-11,M_00001_00004],aux271)
weightedsumgeq([1,6],[-11,M_00001_00004],aux271)
sumleq([-1,M_00001_00004],aux272)
sumgeq([-1,M_00001_00004],aux272)
sumleq([-1,M_00005_00004],aux273)
sumgeq([-1,M_00005_00004],aux273)
sumleq([M_00002_00004,-3],aux274)
sumgeq([M_00002_00004,-3],aux274)
sumleq([M_00003_00005,-3],aux275)
sumgeq([M_00003_00005,-3],aux275)
weightedsumleq([1,6],[-23,M_00001_00005],aux276)
weightedsumgeq([1,6],[-23,M_00001_00005],aux276)
sumleq([M_00003_00004,-3],aux277)
sumgeq([M_00003_00004,-3],aux277)
sumleq([-1,M_00005_00002],aux278)
sumgeq([-1,M_00005_00002],aux278)
sumleq([-1,M_00001_00003],aux279)
sumgeq([-1,M_00001_00003],aux279)
sumleq([M_00004_00002,-1],aux280)
sumgeq([M_00004_00002,-1],aux280)
sumleq([M_00003_00002,-1],aux281)
sumgeq([M_00003_00002,-1],aux281)
sumleq([M_00002_00005,-4],aux282)
sumgeq([M_00002_00005,-4],aux282)
sumleq([-3,M_00001_00005],aux283)
sumgeq([-3,M_00001_00005],aux283)
**EOF**
